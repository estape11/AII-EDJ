
denoise_nios.elf:     file format elf32-littlenios2
denoise_nios.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000230

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f8a8 memsz 0x0000f8a8 flags r-x
    LOAD off    0x00011000 vaddr 0x04000000 paddr 0x0000f8c8 align 2**12
         filesz 0x00001e20 memsz 0x00001f80 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f698  00000230  00000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000334  04000000  0000f8c8  00011000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  04000334  0000fbfc  00011334  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  04001e20  000116e8  00012e20  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  000116e8  000116e8  00012e20  2**0
                  CONTENTS
  7 .sdram_controller_0 00000000  04001f80  04001f80  00012e20  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012e20  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000e98  00000000  00000000  00012e48  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000231fe  00000000  00000000  00013ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008e49  00000000  00000000  00036ede  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b3f5  00000000  00000000  0003fd27  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000203c  00000000  00000000  0004b11c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000383a  00000000  00000000  0004d158  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001786c  00000000  00000000  00050992  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00068200  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018d0  00000000  00000000  00068210  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006cb79  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0006cb7c  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006cb88  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006cb89  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0006cb8a  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0006cb8e  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0006cb92  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0006cb96  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0006cba1  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0006cbac  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000c  00000000  00000000  0006cbb7  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000002d  00000000  00000000  0006cbc3  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0029c206  00000000  00000000  0006cbf0  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000230 l    d  .text	00000000 .text
04000000 l    d  .rodata	00000000 .rodata
04000334 l    d  .rwdata	00000000 .rwdata
04001e20 l    d  .bss	00000000 .bss
000116e8 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
04001f80 l    d  .sdram_controller_0	00000000 .sdram_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../denoise_nios_bsp//obj/HAL/src/crt0.o
00000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0400007a l     O .rodata	00000010 zeroes.4404
000027c0 l     F .text	000000bc __sbprintf
0400008a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000029d0 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004528 l     F .text	00000008 __fp_unlock
0000453c l     F .text	0000019c __sinit.part.1
000046d8 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
04000334 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
04000778 l     O .rwdata	00000020 lc_ctype_charset
04000758 l     O .rwdata	00000020 lc_message_charset
04000798 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
040000bc l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007bac l     F .text	000000fc __sprint_r.part.0
040001e0 l     O .rodata	00000010 zeroes.4349
000091e8 l     F .text	000000bc __sbprintf
040001f0 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d230 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d344 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d370 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d464 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d54c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d638 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d814 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
04001e10 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000da88 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000dbc4 l     F .text	00000034 alt_dev_reg
04000d80 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000dea0 l     F .text	0000020c altera_avalon_jtag_uart_irq
0000e0ac l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e830 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000ec90 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000edf0 l     F .text	0000003c alt_get_errno
0000ee2c l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
04001e54 g     O .bss	00000004 alt_instruction_exception_handler
000071f0 g     F .text	00000074 _mprec_log10
000072dc g     F .text	0000008c __any_on
0000979c g     F .text	00000054 _isatty_r
040000c8 g     O .rodata	00000028 __mprec_tinytens
0000d750 g     F .text	0000007c alt_main
0000035c g     F .text	000000c0 _puts_r
04001e80 g     O .bss	00000100 alt_irq
000097f0 g     F .text	00000060 _lseek_r
0000fbfc g       *ABS*	00000000 __flash_rwdata_start
0000bc08 g     F .text	00000088 .hidden __eqdf2
04001f80 g       *ABS*	00000000 __alt_heap_start
00000320 g     F .text	0000003c printf
00009a08 g     F .text	0000009c _wcrtomb_r
00007a6c g     F .text	0000005c __sseek
00004888 g     F .text	00000010 __sinit
000098b0 g     F .text	00000140 __swbuf_r
0000535c g     F .text	0000007c _setlocale_r
000046e0 g     F .text	00000078 __sfmoreglue
0000d7f0 g     F .text	00000024 __malloc_unlock
0000602c g     F .text	0000015c memmove
00004870 g     F .text	00000018 _cleanup
000062b0 g     F .text	000000a8 _Balloc
0000bc90 g     F .text	000000dc .hidden __gtdf2
0000f218 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
00009740 g     F .text	0000005c _fstat_r
04001e38 g     O .bss	00000004 errno
000079e8 g     F .text	00000008 __seofread
04001e40 g     O .bss	00000004 alt_argv
04009de0 g       *ABS*	00000000 _gp
04000c00 g     O .rwdata	00000180 alt_fd_list
0000f23c g     F .text	00000090 alt_find_dev
00005ee4 g     F .text	00000148 memcpy
00004530 g     F .text	0000000c _cleanup_r
0000d048 g     F .text	000000dc .hidden __floatsidf
0000ed74 g     F .text	0000007c alt_io_redirect
0000bd6c g     F .text	000000f4 .hidden __ltdf2
0000f8c8 g       *ABS*	00000000 __DTOR_END__
0000041c g     F .text	00000014 puts
0000f498 g     F .text	0000009c alt_exception_cause_generated_bad_addr
000078cc g     F .text	00000074 __fpclassifyd
0000714c g     F .text	000000a4 __ratio
000091cc g     F .text	0000001c __vfiprintf_internal
0000e2a4 g     F .text	0000021c altera_avalon_jtag_uart_read
000002f0 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000a8a8 g     F .text	00000064 .hidden __udivsi3
0000d4a0 g     F .text	000000ac isatty
04000118 g     O .rodata	000000c8 __mprec_tens
000053d8 g     F .text	0000000c __locale_charset
04001e34 g     O .bss	00000004 __malloc_top_pad
04001de8 g     O .rwdata	00000004 __mb_cur_max
00005408 g     F .text	0000000c _localeconv_r
000066e4 g     F .text	0000003c __i2b
00004d0c g     F .text	000004c8 __sfvwrite_r
00007940 g     F .text	00000054 _sbrk_r
00009850 g     F .text	00000060 _read_r
04001e08 g     O .rwdata	00000004 alt_max_fd
00009434 g     F .text	000000f0 _fclose_r
000044f8 g     F .text	00000030 fflush
04001e30 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a98c g     F .text	000008ac .hidden __adddf3
00006ef4 g     F .text	0000010c __b2d
0000a1ec g     F .text	000005c4 .hidden __umoddi3
0000d674 g     F .text	000000dc lseek
04000000 g       *ABS*	00000000 __alt_mem_sdram_controller_0
04001de0 g     O .rwdata	00000004 _global_impure_ptr
00007368 g     F .text	00000564 _realloc_r
04001f80 g       *ABS*	00000000 __bss_end
0000eba0 g     F .text	000000f0 alt_iic_isr_register
0000f110 g     F .text	00000108 alt_tick
00009bf0 g     F .text	000005fc .hidden __udivdi3
0000969c g     F .text	00000024 _fputwc_r
040000f0 g     O .rodata	00000028 __mprec_bigtens
000064c8 g     F .text	00000104 __s2b
0000d124 g     F .text	000000a8 .hidden __floatunsidf
00006c34 g     F .text	00000060 __mcmp
000048a8 g     F .text	00000018 __fp_lock_all
0000eb54 g     F .text	0000004c alt_ic_irq_enabled
0000f074 g     F .text	0000009c alt_alarm_stop
04001e48 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
04000bd8 g     O .rwdata	00000028 alt_dev_null
0000e810 g     F .text	00000020 alt_dcache_flush_all
000065cc g     F .text	00000068 __hi0bits
0000cfc8 g     F .text	00000080 .hidden __fixdfsi
04001e20 g       *ABS*	00000000 __ram_rwdata_end
04001e00 g     O .rwdata	00000008 alt_dev_list
0000dac4 g     F .text	00000100 write
04000334 g       *ABS*	00000000 __ram_rodata_end
0000d3ac g     F .text	000000b8 fstat
0000bd6c g     F .text	000000f4 .hidden __ledf2
000069ac g     F .text	00000140 __pow5mult
00007cc0 g     F .text	0000150c ___vfiprintf_internal_r
04001e28 g     O .bss	00000004 __nlocale_changed
0000a90c g     F .text	00000058 .hidden __umodsi3
04001f80 g       *ABS*	00000000 end
0000dde0 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0000f8c8 g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0000d1cc g     F .text	00000064 .hidden __clzsi2
0000e4c0 g     F .text	00000224 altera_avalon_jtag_uart_write
00004898 g     F .text	00000004 __sfp_lock_acquire
00005e00 g     F .text	000000e4 memchr
000004c8 g     F .text	000022dc ___vfprintf_internal_r
000049fc g     F .text	00000310 _free_r
000053e4 g     F .text	00000010 __locale_mb_cur_max
0000f714 g     F .text	00000180 __call_exitprocs
04001e24 g     O .bss	00000004 __mlocale_changed
04001dec g     O .rwdata	00000004 __malloc_sbrk_base
00000230 g     F .text	0000003c _start
04001e4c g     O .bss	00000004 _alt_tick_rate
00006aec g     F .text	00000148 __lshift
04001e50 g     O .bss	00000004 _alt_nticks
0000d850 g     F .text	00000104 read
0000dc30 g     F .text	0000004c alt_sys_init
0000f5fc g     F .text	00000118 __register_exitproc
00006720 g     F .text	0000028c __multiply
0000e14c g     F .text	00000068 altera_avalon_jtag_uart_close
0000a964 g     F .text	00000028 .hidden __mulsi3
04000334 g       *ABS*	00000000 __ram_rwdata_start
04000000 g       *ABS*	00000000 __ram_rodata_start
04001e58 g     O .bss	00000028 __malloc_current_mallinfo
00007000 g     F .text	0000014c __d2b
0000dc7c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f3d4 g     F .text	000000c4 alt_get_fd
00009304 g     F .text	00000054 _close_r
0000f580 g     F .text	0000007c memcmp
0000dd3c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
04001f80 g       *ABS*	00000000 __alt_stack_base
0000dd8c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000287c g     F .text	00000154 __swsetup_r
0000b238 g     F .text	000009d0 .hidden __divdf3
00004758 g     F .text	00000118 __sfp
00007264 g     F .text	00000078 __copybits
040007d0 g     O .rwdata	00000408 __malloc_av_
000048a4 g     F .text	00000004 __sinit_lock_release
0000be60 g     F .text	0000086c .hidden __muldf3
00007994 g     F .text	00000054 __sread
0000f2cc g     F .text	00000108 alt_find_file
0000e86c g     F .text	000000a4 alt_dev_llist_insert
0000d7cc g     F .text	00000024 __malloc_lock
0000d9d8 g     F .text	000000b0 sbrk
0000449c g     F .text	0000005c _fflush_r
00009358 g     F .text	000000dc _calloc_r
04001e20 g       *ABS*	00000000 __bss_start
00006188 g     F .text	00000128 memset
0000026c g     F .text	00000084 main
04001e44 g     O .bss	00000004 alt_envp
04001e2c g     O .bss	00000004 __malloc_max_total_mem
0000dcdc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000099f0 g     F .text	00000018 __swbuf
00007ac8 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
00009524 g     F .text	00000014 fclose
00002bf8 g     F .text	00001688 _dtoa_r
000055f4 g     F .text	0000080c _malloc_r
00009b64 g     F .text	00000030 __ascii_wctomb
04001e0c g     O .rwdata	00000004 alt_errno
000051d4 g     F .text	000000c4 _fwalk
0000a7b0 g     F .text	00000084 .hidden __divsi3
000048d8 g     F .text	00000124 _malloc_trim_r
0000f8c8 g       *ABS*	00000000 __CTOR_END__
00007ad0 g     F .text	000000dc strcmp
0000f8c8 g       *ABS*	00000000 __flash_rodata_start
0000f8c8 g       *ABS*	00000000 __DTOR_LIST__
0000bc08 g     F .text	00000088 .hidden __nedf2
0000dbf8 g     F .text	00000038 alt_irq_init
0000d954 g     F .text	00000084 alt_release_fd
04000200 g     O .rodata	00000100 .hidden __clz_tab
04001e20 g     O .bss	00000004 _PathLocale
0000f534 g     F .text	00000014 atexit
000092a4 g     F .text	00000060 _write_r
00005414 g     F .text	00000018 setlocale
04001de4 g     O .rwdata	00000004 _impure_ptr
04001e3c g     O .bss	00000004 alt_argc
00004280 g     F .text	0000021c __sflush_r
0000e970 g     F .text	00000060 _do_dtors
00005400 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006e90 g     F .text	00000064 __ulp
000048c0 g     F .text	00000018 __fp_unlock_all
04001df8 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
0000542c g     F .text	0000000c localeconv
0000e9f0 g     F .text	00000050 alt_ic_isr_register
04001e20 g       *ABS*	00000000 _edata
04001f80 g       *ABS*	00000000 _end
00009538 g     F .text	00000164 __fputwc
00000230 g       *ABS*	00000000 __ram_exceptions_end
0000e1b4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0000eac8 g     F .text	0000008c alt_ic_irq_disable
000079f0 g     F .text	0000007c __swrite
04001df0 g     O .rwdata	00000004 __malloc_trim_threshold
000053f4 g     F .text	0000000c __locale_msgcharset
0000f548 g     F .text	00000038 exit
00005298 g     F .text	000000c4 _fwalk_reent
00006c94 g     F .text	000001fc __mdiff
0000a834 g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
0000489c g     F .text	00000004 __sfp_lock_release
0000f894 g     F .text	00000034 _exit
0000e6e4 g     F .text	0000012c alt_alarm_start
00005438 g     F .text	000001bc __smakebuf_r
00000430 g     F .text	00000098 strlen
0000ef18 g     F .text	0000015c open
0000bc90 g     F .text	000000dc .hidden __gedf2
04001df4 g     O .rwdata	00000004 __wctomb
00007ca8 g     F .text	00000018 __sprint_r
0000e9d0 g     F .text	00000020 alt_icache_flush_all
04001e14 g     O .rwdata	00000004 alt_priority_mask
0000ea40 g     F .text	00000088 alt_ic_irq_enable
000027a4 g     F .text	0000001c __vfprintf_internal
00009b94 g     F .text	0000005c _wctomb_r
0000c6cc g     F .text	000008fc .hidden __subdf3
00006634 g     F .text	000000b0 __lo0bits
04001e18 g     O .rwdata	00000008 alt_alarm_list
0000e910 g     F .text	00000060 _do_ctors
00009aa4 g     F .text	000000c0 wcrtomb
0000d26c g     F .text	000000d8 close
0000d5b4 g     F .text	00000084 alt_load
000096c0 g     F .text	00000080 fputwc
000048a0 g     F .text	00000004 __sinit_lock_acquire
00006380 g     F .text	00000148 __multadd
00006358 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408c14 	ori	at,at,560
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00810034 	movhi	r2,1024
 140:	1087a004 	addi	r2,r2,7808
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00810034 	movhi	r2,1024
 158:	1087a004 	addi	r2,r2,7808
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a01d17 	ldw	r2,-32652(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a01d17 	ldw	r2,-32652(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

00000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     230:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
     234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     238:	06810034 	movhi	gp,1024
    ori gp, gp, %lo(_gp)
     23c:	d6a77814 	ori	gp,gp,40416
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     240:	00810034 	movhi	r2,1024
    ori r2, r2, %lo(__bss_start)
     244:	10878814 	ori	r2,r2,7712

    movhi r3, %hi(__bss_end)
     248:	00c10034 	movhi	r3,1024
    ori r3, r3, %lo(__bss_end)
     24c:	18c7e014 	ori	r3,r3,8064

    beq r2, r3, 1f
     250:	10c00326 	beq	r2,r3,260 <_start+0x30>

0:
    stw zero, (r2)
     254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     25c:	10fffd36 	bltu	r2,r3,254 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     260:	000d5b40 	call	d5b4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     264:	000d7500 	call	d750 <alt_main>

00000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     268:	003fff06 	br	268 <alt_after_alt_main>

0000026c <main>:
#include <stdio.h>
#include <unistd.h>
#include <system.h>

int main()
{
     26c:	defffc04 	addi	sp,sp,-16
     270:	dfc00315 	stw	ra,12(sp)
     274:	df000215 	stw	fp,8(sp)
     278:	df000204 	addi	fp,sp,8
	printf("> Iniciado NIOS II\n");
     27c:	01010034 	movhi	r4,1024
     280:	21000004 	addi	r4,r4,0
     284:	000041c0 	call	41c <puts>
	volatile int* leds = (int*) 0x10000; // Direccion de los leds
     288:	00800074 	movhi	r2,1
     28c:	e0bffe15 	stw	r2,-8(fp)
	volatile int* sdram = (int*) 0x04000000; // Direccion de la SDRAM
     290:	00810034 	movhi	r2,1024
     294:	e0bfff15 	stw	r2,-4(fp)
	*leds=0x0;
     298:	e0bffe17 	ldw	r2,-8(fp)
     29c:	10000015 	stw	zero,0(r2)
	while(*leds!=0xFF){
     2a0:	0001883a 	nop
     2a4:	e0bffe17 	ldw	r2,-8(fp)
     2a8:	10800017 	ldw	r2,0(r2)
     2ac:	10803fd8 	cmpnei	r2,r2,255
     2b0:	103ffc1e 	bne	r2,zero,2a4 <main+0x38>

	}
	printf("** Lectura de sdram[0] = %d **\n", sdram[0]);
     2b4:	e0bfff17 	ldw	r2,-4(fp)
     2b8:	10800017 	ldw	r2,0(r2)
     2bc:	100b883a 	mov	r5,r2
     2c0:	01010034 	movhi	r4,1024
     2c4:	21000504 	addi	r4,r4,20
     2c8:	00003200 	call	320 <printf>
	*leds=0xAA;
     2cc:	e0bffe17 	ldw	r2,-8(fp)
     2d0:	00c02a84 	movi	r3,170
     2d4:	10c00015 	stw	r3,0(r2)
	return 0;
     2d8:	0005883a 	mov	r2,zero
}
     2dc:	e037883a 	mov	sp,fp
     2e0:	dfc00117 	ldw	ra,4(sp)
     2e4:	df000017 	ldw	fp,0(sp)
     2e8:	dec00204 	addi	sp,sp,8
     2ec:	f800283a 	ret

000002f0 <_printf_r>:
     2f0:	defffd04 	addi	sp,sp,-12
     2f4:	2805883a 	mov	r2,r5
     2f8:	dfc00015 	stw	ra,0(sp)
     2fc:	d9800115 	stw	r6,4(sp)
     300:	d9c00215 	stw	r7,8(sp)
     304:	21400217 	ldw	r5,8(r4)
     308:	d9c00104 	addi	r7,sp,4
     30c:	100d883a 	mov	r6,r2
     310:	00004c80 	call	4c8 <___vfprintf_internal_r>
     314:	dfc00017 	ldw	ra,0(sp)
     318:	dec00304 	addi	sp,sp,12
     31c:	f800283a 	ret

00000320 <printf>:
     320:	defffc04 	addi	sp,sp,-16
     324:	dfc00015 	stw	ra,0(sp)
     328:	d9400115 	stw	r5,4(sp)
     32c:	d9800215 	stw	r6,8(sp)
     330:	d9c00315 	stw	r7,12(sp)
     334:	00810034 	movhi	r2,1024
     338:	10877904 	addi	r2,r2,7652
     33c:	10800017 	ldw	r2,0(r2)
     340:	200b883a 	mov	r5,r4
     344:	d9800104 	addi	r6,sp,4
     348:	11000217 	ldw	r4,8(r2)
     34c:	00027a40 	call	27a4 <__vfprintf_internal>
     350:	dfc00017 	ldw	ra,0(sp)
     354:	dec00404 	addi	sp,sp,16
     358:	f800283a 	ret

0000035c <_puts_r>:
     35c:	defff604 	addi	sp,sp,-40
     360:	dc000715 	stw	r16,28(sp)
     364:	2021883a 	mov	r16,r4
     368:	2809883a 	mov	r4,r5
     36c:	dc400815 	stw	r17,32(sp)
     370:	dfc00915 	stw	ra,36(sp)
     374:	2823883a 	mov	r17,r5
     378:	00004300 	call	430 <strlen>
     37c:	10c00044 	addi	r3,r2,1
     380:	d8800115 	stw	r2,4(sp)
     384:	00810034 	movhi	r2,1024
     388:	10800d04 	addi	r2,r2,52
     38c:	d8800215 	stw	r2,8(sp)
     390:	00800044 	movi	r2,1
     394:	d8800315 	stw	r2,12(sp)
     398:	00800084 	movi	r2,2
     39c:	dc400015 	stw	r17,0(sp)
     3a0:	d8c00615 	stw	r3,24(sp)
     3a4:	dec00415 	stw	sp,16(sp)
     3a8:	d8800515 	stw	r2,20(sp)
     3ac:	80000226 	beq	r16,zero,3b8 <_puts_r+0x5c>
     3b0:	80800e17 	ldw	r2,56(r16)
     3b4:	10001426 	beq	r2,zero,408 <_puts_r+0xac>
     3b8:	81400217 	ldw	r5,8(r16)
     3bc:	2880030b 	ldhu	r2,12(r5)
     3c0:	10c8000c 	andi	r3,r2,8192
     3c4:	1800061e 	bne	r3,zero,3e0 <_puts_r+0x84>
     3c8:	29001917 	ldw	r4,100(r5)
     3cc:	00f7ffc4 	movi	r3,-8193
     3d0:	10880014 	ori	r2,r2,8192
     3d4:	20c6703a 	and	r3,r4,r3
     3d8:	2880030d 	sth	r2,12(r5)
     3dc:	28c01915 	stw	r3,100(r5)
     3e0:	d9800404 	addi	r6,sp,16
     3e4:	8009883a 	mov	r4,r16
     3e8:	0004d0c0 	call	4d0c <__sfvwrite_r>
     3ec:	1000091e 	bne	r2,zero,414 <_puts_r+0xb8>
     3f0:	00800284 	movi	r2,10
     3f4:	dfc00917 	ldw	ra,36(sp)
     3f8:	dc400817 	ldw	r17,32(sp)
     3fc:	dc000717 	ldw	r16,28(sp)
     400:	dec00a04 	addi	sp,sp,40
     404:	f800283a 	ret
     408:	8009883a 	mov	r4,r16
     40c:	00048880 	call	4888 <__sinit>
     410:	003fe906 	br	3b8 <_puts_r+0x5c>
     414:	00bfffc4 	movi	r2,-1
     418:	003ff606 	br	3f4 <_puts_r+0x98>

0000041c <puts>:
     41c:	00810034 	movhi	r2,1024
     420:	10877904 	addi	r2,r2,7652
     424:	200b883a 	mov	r5,r4
     428:	11000017 	ldw	r4,0(r2)
     42c:	000035c1 	jmpi	35c <_puts_r>

00000430 <strlen>:
     430:	208000cc 	andi	r2,r4,3
     434:	10002026 	beq	r2,zero,4b8 <strlen+0x88>
     438:	20800007 	ldb	r2,0(r4)
     43c:	10002026 	beq	r2,zero,4c0 <strlen+0x90>
     440:	2005883a 	mov	r2,r4
     444:	00000206 	br	450 <strlen+0x20>
     448:	10c00007 	ldb	r3,0(r2)
     44c:	18001826 	beq	r3,zero,4b0 <strlen+0x80>
     450:	10800044 	addi	r2,r2,1
     454:	10c000cc 	andi	r3,r2,3
     458:	183ffb1e 	bne	r3,zero,448 <strlen+0x18>
     45c:	10c00017 	ldw	r3,0(r2)
     460:	01ffbff4 	movhi	r7,65279
     464:	39ffbfc4 	addi	r7,r7,-257
     468:	00ca303a 	nor	r5,zero,r3
     46c:	01a02074 	movhi	r6,32897
     470:	19c7883a 	add	r3,r3,r7
     474:	31a02004 	addi	r6,r6,-32640
     478:	1946703a 	and	r3,r3,r5
     47c:	1986703a 	and	r3,r3,r6
     480:	1800091e 	bne	r3,zero,4a8 <strlen+0x78>
     484:	10800104 	addi	r2,r2,4
     488:	10c00017 	ldw	r3,0(r2)
     48c:	19cb883a 	add	r5,r3,r7
     490:	00c6303a 	nor	r3,zero,r3
     494:	28c6703a 	and	r3,r5,r3
     498:	1986703a 	and	r3,r3,r6
     49c:	183ff926 	beq	r3,zero,484 <strlen+0x54>
     4a0:	00000106 	br	4a8 <strlen+0x78>
     4a4:	10800044 	addi	r2,r2,1
     4a8:	10c00007 	ldb	r3,0(r2)
     4ac:	183ffd1e 	bne	r3,zero,4a4 <strlen+0x74>
     4b0:	1105c83a 	sub	r2,r2,r4
     4b4:	f800283a 	ret
     4b8:	2005883a 	mov	r2,r4
     4bc:	003fe706 	br	45c <strlen+0x2c>
     4c0:	0005883a 	mov	r2,zero
     4c4:	f800283a 	ret

000004c8 <___vfprintf_internal_r>:
     4c8:	deffb804 	addi	sp,sp,-288
     4cc:	dfc04715 	stw	ra,284(sp)
     4d0:	ddc04515 	stw	r23,276(sp)
     4d4:	dd404315 	stw	r21,268(sp)
     4d8:	d9002d15 	stw	r4,180(sp)
     4dc:	282f883a 	mov	r23,r5
     4e0:	302b883a 	mov	r21,r6
     4e4:	d9c02e15 	stw	r7,184(sp)
     4e8:	df004615 	stw	fp,280(sp)
     4ec:	dd804415 	stw	r22,272(sp)
     4f0:	dd004215 	stw	r20,264(sp)
     4f4:	dcc04115 	stw	r19,260(sp)
     4f8:	dc804015 	stw	r18,256(sp)
     4fc:	dc403f15 	stw	r17,252(sp)
     500:	dc003e15 	stw	r16,248(sp)
     504:	00054080 	call	5408 <_localeconv_r>
     508:	10800017 	ldw	r2,0(r2)
     50c:	1009883a 	mov	r4,r2
     510:	d8803415 	stw	r2,208(sp)
     514:	00004300 	call	430 <strlen>
     518:	d8803715 	stw	r2,220(sp)
     51c:	d8802d17 	ldw	r2,180(sp)
     520:	10000226 	beq	r2,zero,52c <___vfprintf_internal_r+0x64>
     524:	10800e17 	ldw	r2,56(r2)
     528:	1000fb26 	beq	r2,zero,918 <___vfprintf_internal_r+0x450>
     52c:	b880030b 	ldhu	r2,12(r23)
     530:	10c8000c 	andi	r3,r2,8192
     534:	1800061e 	bne	r3,zero,550 <___vfprintf_internal_r+0x88>
     538:	b9001917 	ldw	r4,100(r23)
     53c:	00f7ffc4 	movi	r3,-8193
     540:	10880014 	ori	r2,r2,8192
     544:	20c6703a 	and	r3,r4,r3
     548:	b880030d 	sth	r2,12(r23)
     54c:	b8c01915 	stw	r3,100(r23)
     550:	10c0020c 	andi	r3,r2,8
     554:	1800c326 	beq	r3,zero,864 <___vfprintf_internal_r+0x39c>
     558:	b8c00417 	ldw	r3,16(r23)
     55c:	1800c126 	beq	r3,zero,864 <___vfprintf_internal_r+0x39c>
     560:	1080068c 	andi	r2,r2,26
     564:	00c00284 	movi	r3,10
     568:	10c0c626 	beq	r2,r3,884 <___vfprintf_internal_r+0x3bc>
     56c:	d8c00404 	addi	r3,sp,16
     570:	05010034 	movhi	r20,1024
     574:	d9001e04 	addi	r4,sp,120
     578:	a5001e84 	addi	r20,r20,122
     57c:	d8c01e15 	stw	r3,120(sp)
     580:	d8002015 	stw	zero,128(sp)
     584:	d8001f15 	stw	zero,124(sp)
     588:	d8003315 	stw	zero,204(sp)
     58c:	d8003615 	stw	zero,216(sp)
     590:	d8003815 	stw	zero,224(sp)
     594:	1811883a 	mov	r8,r3
     598:	d8003915 	stw	zero,228(sp)
     59c:	d8003a15 	stw	zero,232(sp)
     5a0:	d8002f15 	stw	zero,188(sp)
     5a4:	d9002815 	stw	r4,160(sp)
     5a8:	a8800007 	ldb	r2,0(r21)
     5ac:	10028b26 	beq	r2,zero,fdc <___vfprintf_internal_r+0xb14>
     5b0:	00c00944 	movi	r3,37
     5b4:	a823883a 	mov	r17,r21
     5b8:	10c0021e 	bne	r2,r3,5c4 <___vfprintf_internal_r+0xfc>
     5bc:	00001406 	br	610 <___vfprintf_internal_r+0x148>
     5c0:	10c00326 	beq	r2,r3,5d0 <___vfprintf_internal_r+0x108>
     5c4:	8c400044 	addi	r17,r17,1
     5c8:	88800007 	ldb	r2,0(r17)
     5cc:	103ffc1e 	bne	r2,zero,5c0 <___vfprintf_internal_r+0xf8>
     5d0:	8d61c83a 	sub	r16,r17,r21
     5d4:	80000e26 	beq	r16,zero,610 <___vfprintf_internal_r+0x148>
     5d8:	d8c02017 	ldw	r3,128(sp)
     5dc:	d8801f17 	ldw	r2,124(sp)
     5e0:	45400015 	stw	r21,0(r8)
     5e4:	1c07883a 	add	r3,r3,r16
     5e8:	10800044 	addi	r2,r2,1
     5ec:	d8c02015 	stw	r3,128(sp)
     5f0:	44000115 	stw	r16,4(r8)
     5f4:	d8801f15 	stw	r2,124(sp)
     5f8:	00c001c4 	movi	r3,7
     5fc:	1880a916 	blt	r3,r2,8a4 <___vfprintf_internal_r+0x3dc>
     600:	42000204 	addi	r8,r8,8
     604:	d9402f17 	ldw	r5,188(sp)
     608:	2c0b883a 	add	r5,r5,r16
     60c:	d9402f15 	stw	r5,188(sp)
     610:	88800007 	ldb	r2,0(r17)
     614:	1000aa26 	beq	r2,zero,8c0 <___vfprintf_internal_r+0x3f8>
     618:	8d400044 	addi	r21,r17,1
     61c:	8c400047 	ldb	r17,1(r17)
     620:	0021883a 	mov	r16,zero
     624:	00bfffc4 	movi	r2,-1
     628:	0025883a 	mov	r18,zero
     62c:	dc002905 	stb	r16,164(sp)
     630:	d8002785 	stb	zero,158(sp)
     634:	d8002b05 	stb	zero,172(sp)
     638:	d8802a15 	stw	r2,168(sp)
     63c:	d8003115 	stw	zero,196(sp)
     640:	04c01604 	movi	r19,88
     644:	05800244 	movi	r22,9
     648:	9021883a 	mov	r16,r18
     64c:	4039883a 	mov	fp,r8
     650:	ad400044 	addi	r21,r21,1
     654:	88bff804 	addi	r2,r17,-32
     658:	98833236 	bltu	r19,r2,1324 <___vfprintf_internal_r+0xe5c>
     65c:	100490ba 	slli	r2,r2,2
     660:	00c00034 	movhi	r3,0
     664:	18c19d04 	addi	r3,r3,1652
     668:	10c5883a 	add	r2,r2,r3
     66c:	10800017 	ldw	r2,0(r2)
     670:	1000683a 	jmp	r2
     674:	0000121c 	xori	zero,zero,72
     678:	00001324 	muli	zero,zero,76
     67c:	00001324 	muli	zero,zero,76
     680:	0000123c 	xorhi	zero,zero,72
     684:	00001324 	muli	zero,zero,76
     688:	00001324 	muli	zero,zero,76
     68c:	00001324 	muli	zero,zero,76
     690:	00001324 	muli	zero,zero,76
     694:	00001324 	muli	zero,zero,76
     698:	00001324 	muli	zero,zero,76
     69c:	00000924 	muli	zero,zero,36
     6a0:	0000112c 	andhi	zero,zero,68
     6a4:	00001324 	muli	zero,zero,76
     6a8:	000007e8 	cmpgeui	zero,zero,31
     6ac:	00000948 	cmpgei	zero,zero,37
     6b0:	00001324 	muli	zero,zero,76
     6b4:	00000998 	cmpnei	zero,zero,38
     6b8:	000009a4 	muli	zero,zero,38
     6bc:	000009a4 	muli	zero,zero,38
     6c0:	000009a4 	muli	zero,zero,38
     6c4:	000009a4 	muli	zero,zero,38
     6c8:	000009a4 	muli	zero,zero,38
     6cc:	000009a4 	muli	zero,zero,38
     6d0:	000009a4 	muli	zero,zero,38
     6d4:	000009a4 	muli	zero,zero,38
     6d8:	000009a4 	muli	zero,zero,38
     6dc:	00001324 	muli	zero,zero,76
     6e0:	00001324 	muli	zero,zero,76
     6e4:	00001324 	muli	zero,zero,76
     6e8:	00001324 	muli	zero,zero,76
     6ec:	00001324 	muli	zero,zero,76
     6f0:	00001324 	muli	zero,zero,76
     6f4:	00001324 	muli	zero,zero,76
     6f8:	00001324 	muli	zero,zero,76
     6fc:	00001324 	muli	zero,zero,76
     700:	00001324 	muli	zero,zero,76
     704:	000009e0 	cmpeqi	zero,zero,39
     708:	00000aa8 	cmpgeui	zero,zero,42
     70c:	00001324 	muli	zero,zero,76
     710:	00000aa8 	cmpgeui	zero,zero,42
     714:	00001324 	muli	zero,zero,76
     718:	00001324 	muli	zero,zero,76
     71c:	00001324 	muli	zero,zero,76
     720:	00001324 	muli	zero,zero,76
     724:	00000b54 	movui	zero,45
     728:	00001324 	muli	zero,zero,76
     72c:	00001324 	muli	zero,zero,76
     730:	00000b60 	cmpeqi	zero,zero,45
     734:	00001324 	muli	zero,zero,76
     738:	00001324 	muli	zero,zero,76
     73c:	00001324 	muli	zero,zero,76
     740:	00001324 	muli	zero,zero,76
     744:	00001324 	muli	zero,zero,76
     748:	00000fe4 	muli	zero,zero,63
     74c:	00001324 	muli	zero,zero,76
     750:	00001324 	muli	zero,zero,76
     754:	00001050 	cmplti	zero,zero,65
     758:	00001324 	muli	zero,zero,76
     75c:	00001324 	muli	zero,zero,76
     760:	00001324 	muli	zero,zero,76
     764:	00001324 	muli	zero,zero,76
     768:	00001324 	muli	zero,zero,76
     76c:	00001324 	muli	zero,zero,76
     770:	00001324 	muli	zero,zero,76
     774:	00001324 	muli	zero,zero,76
     778:	00001324 	muli	zero,zero,76
     77c:	00001324 	muli	zero,zero,76
     780:	000012c8 	cmpgei	zero,zero,75
     784:	00001248 	cmpgei	zero,zero,73
     788:	00000aa8 	cmpgeui	zero,zero,42
     78c:	00000aa8 	cmpgeui	zero,zero,42
     790:	00000aa8 	cmpgeui	zero,zero,42
     794:	00001268 	cmpgeui	zero,zero,73
     798:	00001248 	cmpgei	zero,zero,73
     79c:	00001324 	muli	zero,zero,76
     7a0:	00001324 	muli	zero,zero,76
     7a4:	00001274 	movhi	zero,73
     7a8:	00001324 	muli	zero,zero,76
     7ac:	00001288 	cmpgei	zero,zero,74
     7b0:	0000110c 	andi	zero,zero,68
     7b4:	000007f4 	movhi	zero,31
     7b8:	00001144 	movi	zero,69
     7bc:	00001324 	muli	zero,zero,76
     7c0:	00001150 	cmplti	zero,zero,69
     7c4:	00001324 	muli	zero,zero,76
     7c8:	000011b4 	movhi	zero,70
     7cc:	00001324 	muli	zero,zero,76
     7d0:	00001324 	muli	zero,zero,76
     7d4:	000011d4 	movui	zero,71
     7d8:	d8c03117 	ldw	r3,196(sp)
     7dc:	d8802e15 	stw	r2,184(sp)
     7e0:	00c7c83a 	sub	r3,zero,r3
     7e4:	d8c03115 	stw	r3,196(sp)
     7e8:	84000114 	ori	r16,r16,4
     7ec:	ac400007 	ldb	r17,0(r21)
     7f0:	003f9706 	br	650 <___vfprintf_internal_r+0x188>
     7f4:	00800c04 	movi	r2,48
     7f8:	d8802705 	stb	r2,156(sp)
     7fc:	00801e04 	movi	r2,120
     800:	d8802745 	stb	r2,157(sp)
     804:	d9002a17 	ldw	r4,168(sp)
     808:	d8802e17 	ldw	r2,184(sp)
     80c:	d8002785 	stb	zero,158(sp)
     810:	e011883a 	mov	r8,fp
     814:	10c00104 	addi	r3,r2,4
     818:	14c00017 	ldw	r19,0(r2)
     81c:	002d883a 	mov	r22,zero
     820:	80800094 	ori	r2,r16,2
     824:	2002ca16 	blt	r4,zero,1350 <___vfprintf_internal_r+0xe88>
     828:	00bfdfc4 	movi	r2,-129
     82c:	80a4703a 	and	r18,r16,r2
     830:	d8c02e15 	stw	r3,184(sp)
     834:	94800094 	ori	r18,r18,2
     838:	9802b41e 	bne	r19,zero,130c <___vfprintf_internal_r+0xe44>
     83c:	01410034 	movhi	r5,1024
     840:	29401704 	addi	r5,r5,92
     844:	d9403915 	stw	r5,228(sp)
     848:	04401e04 	movi	r17,120
     84c:	d8802a17 	ldw	r2,168(sp)
     850:	0039883a 	mov	fp,zero
     854:	1001fa26 	beq	r2,zero,1040 <___vfprintf_internal_r+0xb78>
     858:	0027883a 	mov	r19,zero
     85c:	002d883a 	mov	r22,zero
     860:	00021906 	br	10c8 <___vfprintf_internal_r+0xc00>
     864:	d9002d17 	ldw	r4,180(sp)
     868:	b80b883a 	mov	r5,r23
     86c:	000287c0 	call	287c <__swsetup_r>
     870:	1005dc1e 	bne	r2,zero,1fe4 <___vfprintf_internal_r+0x1b1c>
     874:	b880030b 	ldhu	r2,12(r23)
     878:	00c00284 	movi	r3,10
     87c:	1080068c 	andi	r2,r2,26
     880:	10ff3a1e 	bne	r2,r3,56c <___vfprintf_internal_r+0xa4>
     884:	b880038f 	ldh	r2,14(r23)
     888:	103f3816 	blt	r2,zero,56c <___vfprintf_internal_r+0xa4>
     88c:	d9c02e17 	ldw	r7,184(sp)
     890:	d9002d17 	ldw	r4,180(sp)
     894:	a80d883a 	mov	r6,r21
     898:	b80b883a 	mov	r5,r23
     89c:	00027c00 	call	27c0 <__sbprintf>
     8a0:	00001106 	br	8e8 <___vfprintf_internal_r+0x420>
     8a4:	d9002d17 	ldw	r4,180(sp)
     8a8:	d9801e04 	addi	r6,sp,120
     8ac:	b80b883a 	mov	r5,r23
     8b0:	0007ca80 	call	7ca8 <__sprint_r>
     8b4:	1000081e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
     8b8:	da000404 	addi	r8,sp,16
     8bc:	003f5106 	br	604 <___vfprintf_internal_r+0x13c>
     8c0:	d8802017 	ldw	r2,128(sp)
     8c4:	10000426 	beq	r2,zero,8d8 <___vfprintf_internal_r+0x410>
     8c8:	d9002d17 	ldw	r4,180(sp)
     8cc:	d9801e04 	addi	r6,sp,120
     8d0:	b80b883a 	mov	r5,r23
     8d4:	0007ca80 	call	7ca8 <__sprint_r>
     8d8:	b880030b 	ldhu	r2,12(r23)
     8dc:	1080100c 	andi	r2,r2,64
     8e0:	1005c01e 	bne	r2,zero,1fe4 <___vfprintf_internal_r+0x1b1c>
     8e4:	d8802f17 	ldw	r2,188(sp)
     8e8:	dfc04717 	ldw	ra,284(sp)
     8ec:	df004617 	ldw	fp,280(sp)
     8f0:	ddc04517 	ldw	r23,276(sp)
     8f4:	dd804417 	ldw	r22,272(sp)
     8f8:	dd404317 	ldw	r21,268(sp)
     8fc:	dd004217 	ldw	r20,264(sp)
     900:	dcc04117 	ldw	r19,260(sp)
     904:	dc804017 	ldw	r18,256(sp)
     908:	dc403f17 	ldw	r17,252(sp)
     90c:	dc003e17 	ldw	r16,248(sp)
     910:	dec04804 	addi	sp,sp,288
     914:	f800283a 	ret
     918:	d9002d17 	ldw	r4,180(sp)
     91c:	00048880 	call	4888 <__sinit>
     920:	003f0206 	br	52c <___vfprintf_internal_r+0x64>
     924:	d9002e17 	ldw	r4,184(sp)
     928:	d9402e17 	ldw	r5,184(sp)
     92c:	21000017 	ldw	r4,0(r4)
     930:	28800104 	addi	r2,r5,4
     934:	d9003115 	stw	r4,196(sp)
     938:	203fa716 	blt	r4,zero,7d8 <___vfprintf_internal_r+0x310>
     93c:	d8802e15 	stw	r2,184(sp)
     940:	ac400007 	ldb	r17,0(r21)
     944:	003f4206 	br	650 <___vfprintf_internal_r+0x188>
     948:	ac400007 	ldb	r17,0(r21)
     94c:	01000a84 	movi	r4,42
     950:	a8c00044 	addi	r3,r21,1
     954:	89075826 	beq	r17,r4,26b8 <___vfprintf_internal_r+0x21f0>
     958:	8cbff404 	addi	r18,r17,-48
     95c:	b486ae36 	bltu	r22,r18,2418 <___vfprintf_internal_r+0x1f50>
     960:	0009883a 	mov	r4,zero
     964:	1823883a 	mov	r17,r3
     968:	01400284 	movi	r5,10
     96c:	000a9640 	call	a964 <__mulsi3>
     970:	88c00007 	ldb	r3,0(r17)
     974:	1489883a 	add	r4,r2,r18
     978:	8d400044 	addi	r21,r17,1
     97c:	1cbff404 	addi	r18,r3,-48
     980:	a823883a 	mov	r17,r21
     984:	b4bff82e 	bgeu	r22,r18,968 <___vfprintf_internal_r+0x4a0>
     988:	1823883a 	mov	r17,r3
     98c:	2005f616 	blt	r4,zero,2168 <___vfprintf_internal_r+0x1ca0>
     990:	d9002a15 	stw	r4,168(sp)
     994:	003f2f06 	br	654 <___vfprintf_internal_r+0x18c>
     998:	84002014 	ori	r16,r16,128
     99c:	ac400007 	ldb	r17,0(r21)
     9a0:	003f2b06 	br	650 <___vfprintf_internal_r+0x188>
     9a4:	8cbff404 	addi	r18,r17,-48
     9a8:	d8003115 	stw	zero,196(sp)
     9ac:	0009883a 	mov	r4,zero
     9b0:	a823883a 	mov	r17,r21
     9b4:	01400284 	movi	r5,10
     9b8:	000a9640 	call	a964 <__mulsi3>
     9bc:	88c00007 	ldb	r3,0(r17)
     9c0:	9089883a 	add	r4,r18,r2
     9c4:	ad400044 	addi	r21,r21,1
     9c8:	1cbff404 	addi	r18,r3,-48
     9cc:	a823883a 	mov	r17,r21
     9d0:	b4bff82e 	bgeu	r22,r18,9b4 <___vfprintf_internal_r+0x4ec>
     9d4:	1823883a 	mov	r17,r3
     9d8:	d9003115 	stw	r4,196(sp)
     9dc:	003f1d06 	br	654 <___vfprintf_internal_r+0x18c>
     9e0:	8025883a 	mov	r18,r16
     9e4:	dc002903 	ldbu	r16,164(sp)
     9e8:	e011883a 	mov	r8,fp
     9ec:	84003fcc 	andi	r16,r16,255
     9f0:	8007531e 	bne	r16,zero,2740 <___vfprintf_internal_r+0x2278>
     9f4:	94800414 	ori	r18,r18,16
     9f8:	9080080c 	andi	r2,r18,32
     9fc:	1003a326 	beq	r2,zero,188c <___vfprintf_internal_r+0x13c4>
     a00:	d9002e17 	ldw	r4,184(sp)
     a04:	20800117 	ldw	r2,4(r4)
     a08:	24c00017 	ldw	r19,0(r4)
     a0c:	21000204 	addi	r4,r4,8
     a10:	d9002e15 	stw	r4,184(sp)
     a14:	102d883a 	mov	r22,r2
     a18:	10047316 	blt	r2,zero,1be8 <___vfprintf_internal_r+0x1720>
     a1c:	d9002a17 	ldw	r4,168(sp)
     a20:	df002783 	ldbu	fp,158(sp)
     a24:	2003e416 	blt	r4,zero,19b8 <___vfprintf_internal_r+0x14f0>
     a28:	00ffdfc4 	movi	r3,-129
     a2c:	9d84b03a 	or	r2,r19,r22
     a30:	90e4703a 	and	r18,r18,r3
     a34:	10018026 	beq	r2,zero,1038 <___vfprintf_internal_r+0xb70>
     a38:	b003ab26 	beq	r22,zero,18e8 <___vfprintf_internal_r+0x1420>
     a3c:	dc402915 	stw	r17,164(sp)
     a40:	dc001e04 	addi	r16,sp,120
     a44:	b023883a 	mov	r17,r22
     a48:	402d883a 	mov	r22,r8
     a4c:	9809883a 	mov	r4,r19
     a50:	880b883a 	mov	r5,r17
     a54:	01800284 	movi	r6,10
     a58:	000f883a 	mov	r7,zero
     a5c:	000a1ec0 	call	a1ec <__umoddi3>
     a60:	10800c04 	addi	r2,r2,48
     a64:	843fffc4 	addi	r16,r16,-1
     a68:	9809883a 	mov	r4,r19
     a6c:	880b883a 	mov	r5,r17
     a70:	80800005 	stb	r2,0(r16)
     a74:	01800284 	movi	r6,10
     a78:	000f883a 	mov	r7,zero
     a7c:	0009bf00 	call	9bf0 <__udivdi3>
     a80:	1027883a 	mov	r19,r2
     a84:	10c4b03a 	or	r2,r2,r3
     a88:	1823883a 	mov	r17,r3
     a8c:	103fef1e 	bne	r2,zero,a4c <___vfprintf_internal_r+0x584>
     a90:	d8c02817 	ldw	r3,160(sp)
     a94:	dc402917 	ldw	r17,164(sp)
     a98:	b011883a 	mov	r8,r22
     a9c:	1c07c83a 	sub	r3,r3,r16
     aa0:	d8c02b15 	stw	r3,172(sp)
     aa4:	00005f06 	br	c24 <___vfprintf_internal_r+0x75c>
     aa8:	8025883a 	mov	r18,r16
     aac:	dc002903 	ldbu	r16,164(sp)
     ab0:	e011883a 	mov	r8,fp
     ab4:	84003fcc 	andi	r16,r16,255
     ab8:	80071e1e 	bne	r16,zero,2734 <___vfprintf_internal_r+0x226c>
     abc:	9080020c 	andi	r2,r18,8
     ac0:	1004af26 	beq	r2,zero,1d80 <___vfprintf_internal_r+0x18b8>
     ac4:	d9002e17 	ldw	r4,184(sp)
     ac8:	d9402e17 	ldw	r5,184(sp)
     acc:	d8802e17 	ldw	r2,184(sp)
     ad0:	21000017 	ldw	r4,0(r4)
     ad4:	29400117 	ldw	r5,4(r5)
     ad8:	10800204 	addi	r2,r2,8
     adc:	d9003615 	stw	r4,216(sp)
     ae0:	d9403815 	stw	r5,224(sp)
     ae4:	d8802e15 	stw	r2,184(sp)
     ae8:	d9003617 	ldw	r4,216(sp)
     aec:	d9403817 	ldw	r5,224(sp)
     af0:	da003d15 	stw	r8,244(sp)
     af4:	04000044 	movi	r16,1
     af8:	00078cc0 	call	78cc <__fpclassifyd>
     afc:	da003d17 	ldw	r8,244(sp)
     b00:	1404441e 	bne	r2,r16,1c14 <___vfprintf_internal_r+0x174c>
     b04:	d9003617 	ldw	r4,216(sp)
     b08:	d9403817 	ldw	r5,224(sp)
     b0c:	000d883a 	mov	r6,zero
     b10:	000f883a 	mov	r7,zero
     b14:	000bd6c0 	call	bd6c <__ledf2>
     b18:	da003d17 	ldw	r8,244(sp)
     b1c:	1005e316 	blt	r2,zero,22ac <___vfprintf_internal_r+0x1de4>
     b20:	df002783 	ldbu	fp,158(sp)
     b24:	008011c4 	movi	r2,71
     b28:	1445580e 	bge	r2,r17,208c <___vfprintf_internal_r+0x1bc4>
     b2c:	04010034 	movhi	r16,1024
     b30:	84000f04 	addi	r16,r16,60
     b34:	00c000c4 	movi	r3,3
     b38:	00bfdfc4 	movi	r2,-129
     b3c:	d8c02915 	stw	r3,164(sp)
     b40:	90a4703a 	and	r18,r18,r2
     b44:	d8c02b15 	stw	r3,172(sp)
     b48:	d8002a15 	stw	zero,168(sp)
     b4c:	d8003215 	stw	zero,200(sp)
     b50:	00003a06 	br	c3c <___vfprintf_internal_r+0x774>
     b54:	84000214 	ori	r16,r16,8
     b58:	ac400007 	ldb	r17,0(r21)
     b5c:	003ebc06 	br	650 <___vfprintf_internal_r+0x188>
     b60:	8025883a 	mov	r18,r16
     b64:	dc002903 	ldbu	r16,164(sp)
     b68:	e011883a 	mov	r8,fp
     b6c:	84003fcc 	andi	r16,r16,255
     b70:	8007001e 	bne	r16,zero,2774 <___vfprintf_internal_r+0x22ac>
     b74:	94800414 	ori	r18,r18,16
     b78:	9080080c 	andi	r2,r18,32
     b7c:	1002fa26 	beq	r2,zero,1768 <___vfprintf_internal_r+0x12a0>
     b80:	d9002e17 	ldw	r4,184(sp)
     b84:	d9402a17 	ldw	r5,168(sp)
     b88:	d8002785 	stb	zero,158(sp)
     b8c:	20800204 	addi	r2,r4,8
     b90:	24c00017 	ldw	r19,0(r4)
     b94:	25800117 	ldw	r22,4(r4)
     b98:	2804b116 	blt	r5,zero,1e60 <___vfprintf_internal_r+0x1998>
     b9c:	013fdfc4 	movi	r4,-129
     ba0:	9d86b03a 	or	r3,r19,r22
     ba4:	d8802e15 	stw	r2,184(sp)
     ba8:	9124703a 	and	r18,r18,r4
     bac:	1802fb1e 	bne	r3,zero,179c <___vfprintf_internal_r+0x12d4>
     bb0:	d8c02a17 	ldw	r3,168(sp)
     bb4:	0039883a 	mov	fp,zero
     bb8:	1805e526 	beq	r3,zero,2350 <___vfprintf_internal_r+0x1e88>
     bbc:	0027883a 	mov	r19,zero
     bc0:	002d883a 	mov	r22,zero
     bc4:	dc001e04 	addi	r16,sp,120
     bc8:	9806d0fa 	srli	r3,r19,3
     bcc:	b008977a 	slli	r4,r22,29
     bd0:	b02cd0fa 	srli	r22,r22,3
     bd4:	9cc001cc 	andi	r19,r19,7
     bd8:	98800c04 	addi	r2,r19,48
     bdc:	843fffc4 	addi	r16,r16,-1
     be0:	20e6b03a 	or	r19,r4,r3
     be4:	80800005 	stb	r2,0(r16)
     be8:	9d86b03a 	or	r3,r19,r22
     bec:	183ff61e 	bne	r3,zero,bc8 <___vfprintf_internal_r+0x700>
     bf0:	90c0004c 	andi	r3,r18,1
     bf4:	18014126 	beq	r3,zero,10fc <___vfprintf_internal_r+0xc34>
     bf8:	10803fcc 	andi	r2,r2,255
     bfc:	1080201c 	xori	r2,r2,128
     c00:	10bfe004 	addi	r2,r2,-128
     c04:	00c00c04 	movi	r3,48
     c08:	10c13c26 	beq	r2,r3,10fc <___vfprintf_internal_r+0xc34>
     c0c:	80ffffc5 	stb	r3,-1(r16)
     c10:	d8c02817 	ldw	r3,160(sp)
     c14:	80bfffc4 	addi	r2,r16,-1
     c18:	1021883a 	mov	r16,r2
     c1c:	1887c83a 	sub	r3,r3,r2
     c20:	d8c02b15 	stw	r3,172(sp)
     c24:	d8802b17 	ldw	r2,172(sp)
     c28:	d9002a17 	ldw	r4,168(sp)
     c2c:	1100010e 	bge	r2,r4,c34 <___vfprintf_internal_r+0x76c>
     c30:	2005883a 	mov	r2,r4
     c34:	d8802915 	stw	r2,164(sp)
     c38:	d8003215 	stw	zero,200(sp)
     c3c:	e7003fcc 	andi	fp,fp,255
     c40:	e700201c 	xori	fp,fp,128
     c44:	e73fe004 	addi	fp,fp,-128
     c48:	e0000326 	beq	fp,zero,c58 <___vfprintf_internal_r+0x790>
     c4c:	d8c02917 	ldw	r3,164(sp)
     c50:	18c00044 	addi	r3,r3,1
     c54:	d8c02915 	stw	r3,164(sp)
     c58:	90c0008c 	andi	r3,r18,2
     c5c:	d8c02c15 	stw	r3,176(sp)
     c60:	18000326 	beq	r3,zero,c70 <___vfprintf_internal_r+0x7a8>
     c64:	d8c02917 	ldw	r3,164(sp)
     c68:	18c00084 	addi	r3,r3,2
     c6c:	d8c02915 	stw	r3,164(sp)
     c70:	90c0210c 	andi	r3,r18,132
     c74:	d8c03015 	stw	r3,192(sp)
     c78:	1801c51e 	bne	r3,zero,1390 <___vfprintf_internal_r+0xec8>
     c7c:	d9003117 	ldw	r4,196(sp)
     c80:	d8c02917 	ldw	r3,164(sp)
     c84:	20e7c83a 	sub	r19,r4,r3
     c88:	04c1c10e 	bge	zero,r19,1390 <___vfprintf_internal_r+0xec8>
     c8c:	02400404 	movi	r9,16
     c90:	d8c02017 	ldw	r3,128(sp)
     c94:	d8801f17 	ldw	r2,124(sp)
     c98:	4cc52f0e 	bge	r9,r19,2158 <___vfprintf_internal_r+0x1c90>
     c9c:	01410034 	movhi	r5,1024
     ca0:	29402284 	addi	r5,r5,138
     ca4:	dc403b15 	stw	r17,236(sp)
     ca8:	d9403515 	stw	r5,212(sp)
     cac:	9823883a 	mov	r17,r19
     cb0:	482d883a 	mov	r22,r9
     cb4:	9027883a 	mov	r19,r18
     cb8:	070001c4 	movi	fp,7
     cbc:	8025883a 	mov	r18,r16
     cc0:	dc002d17 	ldw	r16,180(sp)
     cc4:	00000306 	br	cd4 <___vfprintf_internal_r+0x80c>
     cc8:	8c7ffc04 	addi	r17,r17,-16
     ccc:	42000204 	addi	r8,r8,8
     cd0:	b440130e 	bge	r22,r17,d20 <___vfprintf_internal_r+0x858>
     cd4:	01010034 	movhi	r4,1024
     cd8:	18c00404 	addi	r3,r3,16
     cdc:	10800044 	addi	r2,r2,1
     ce0:	21002284 	addi	r4,r4,138
     ce4:	41000015 	stw	r4,0(r8)
     ce8:	45800115 	stw	r22,4(r8)
     cec:	d8c02015 	stw	r3,128(sp)
     cf0:	d8801f15 	stw	r2,124(sp)
     cf4:	e0bff40e 	bge	fp,r2,cc8 <___vfprintf_internal_r+0x800>
     cf8:	d9801e04 	addi	r6,sp,120
     cfc:	b80b883a 	mov	r5,r23
     d00:	8009883a 	mov	r4,r16
     d04:	0007ca80 	call	7ca8 <__sprint_r>
     d08:	103ef31e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
     d0c:	8c7ffc04 	addi	r17,r17,-16
     d10:	d8c02017 	ldw	r3,128(sp)
     d14:	d8801f17 	ldw	r2,124(sp)
     d18:	da000404 	addi	r8,sp,16
     d1c:	b47fed16 	blt	r22,r17,cd4 <___vfprintf_internal_r+0x80c>
     d20:	9021883a 	mov	r16,r18
     d24:	9825883a 	mov	r18,r19
     d28:	8827883a 	mov	r19,r17
     d2c:	dc403b17 	ldw	r17,236(sp)
     d30:	d9403517 	ldw	r5,212(sp)
     d34:	98c7883a 	add	r3,r19,r3
     d38:	10800044 	addi	r2,r2,1
     d3c:	41400015 	stw	r5,0(r8)
     d40:	44c00115 	stw	r19,4(r8)
     d44:	d8c02015 	stw	r3,128(sp)
     d48:	d8801f15 	stw	r2,124(sp)
     d4c:	010001c4 	movi	r4,7
     d50:	2082c516 	blt	r4,r2,1868 <___vfprintf_internal_r+0x13a0>
     d54:	df002787 	ldb	fp,158(sp)
     d58:	42000204 	addi	r8,r8,8
     d5c:	e0000c26 	beq	fp,zero,d90 <___vfprintf_internal_r+0x8c8>
     d60:	d8801f17 	ldw	r2,124(sp)
     d64:	d9002784 	addi	r4,sp,158
     d68:	18c00044 	addi	r3,r3,1
     d6c:	10800044 	addi	r2,r2,1
     d70:	41000015 	stw	r4,0(r8)
     d74:	01000044 	movi	r4,1
     d78:	41000115 	stw	r4,4(r8)
     d7c:	d8c02015 	stw	r3,128(sp)
     d80:	d8801f15 	stw	r2,124(sp)
     d84:	010001c4 	movi	r4,7
     d88:	20825e16 	blt	r4,r2,1704 <___vfprintf_internal_r+0x123c>
     d8c:	42000204 	addi	r8,r8,8
     d90:	d8802c17 	ldw	r2,176(sp)
     d94:	10000c26 	beq	r2,zero,dc8 <___vfprintf_internal_r+0x900>
     d98:	d8801f17 	ldw	r2,124(sp)
     d9c:	d9002704 	addi	r4,sp,156
     da0:	18c00084 	addi	r3,r3,2
     da4:	10800044 	addi	r2,r2,1
     da8:	41000015 	stw	r4,0(r8)
     dac:	01000084 	movi	r4,2
     db0:	41000115 	stw	r4,4(r8)
     db4:	d8c02015 	stw	r3,128(sp)
     db8:	d8801f15 	stw	r2,124(sp)
     dbc:	010001c4 	movi	r4,7
     dc0:	20825816 	blt	r4,r2,1724 <___vfprintf_internal_r+0x125c>
     dc4:	42000204 	addi	r8,r8,8
     dc8:	d9003017 	ldw	r4,192(sp)
     dcc:	00802004 	movi	r2,128
     dd0:	2081bb26 	beq	r4,r2,14c0 <___vfprintf_internal_r+0xff8>
     dd4:	d9402a17 	ldw	r5,168(sp)
     dd8:	d8802b17 	ldw	r2,172(sp)
     ddc:	28adc83a 	sub	r22,r5,r2
     de0:	0580310e 	bge	zero,r22,ea8 <___vfprintf_internal_r+0x9e0>
     de4:	07000404 	movi	fp,16
     de8:	d8801f17 	ldw	r2,124(sp)
     dec:	e584360e 	bge	fp,r22,1ec8 <___vfprintf_internal_r+0x1a00>
     df0:	01410034 	movhi	r5,1024
     df4:	29401e84 	addi	r5,r5,122
     df8:	dc402a15 	stw	r17,168(sp)
     dfc:	d9402c15 	stw	r5,176(sp)
     e00:	b023883a 	mov	r17,r22
     e04:	04c001c4 	movi	r19,7
     e08:	a82d883a 	mov	r22,r21
     e0c:	902b883a 	mov	r21,r18
     e10:	8025883a 	mov	r18,r16
     e14:	dc002d17 	ldw	r16,180(sp)
     e18:	00000306 	br	e28 <___vfprintf_internal_r+0x960>
     e1c:	8c7ffc04 	addi	r17,r17,-16
     e20:	42000204 	addi	r8,r8,8
     e24:	e440110e 	bge	fp,r17,e6c <___vfprintf_internal_r+0x9a4>
     e28:	18c00404 	addi	r3,r3,16
     e2c:	10800044 	addi	r2,r2,1
     e30:	45000015 	stw	r20,0(r8)
     e34:	47000115 	stw	fp,4(r8)
     e38:	d8c02015 	stw	r3,128(sp)
     e3c:	d8801f15 	stw	r2,124(sp)
     e40:	98bff60e 	bge	r19,r2,e1c <___vfprintf_internal_r+0x954>
     e44:	d9801e04 	addi	r6,sp,120
     e48:	b80b883a 	mov	r5,r23
     e4c:	8009883a 	mov	r4,r16
     e50:	0007ca80 	call	7ca8 <__sprint_r>
     e54:	103ea01e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
     e58:	8c7ffc04 	addi	r17,r17,-16
     e5c:	d8c02017 	ldw	r3,128(sp)
     e60:	d8801f17 	ldw	r2,124(sp)
     e64:	da000404 	addi	r8,sp,16
     e68:	e47fef16 	blt	fp,r17,e28 <___vfprintf_internal_r+0x960>
     e6c:	9021883a 	mov	r16,r18
     e70:	a825883a 	mov	r18,r21
     e74:	b02b883a 	mov	r21,r22
     e78:	882d883a 	mov	r22,r17
     e7c:	dc402a17 	ldw	r17,168(sp)
     e80:	d9002c17 	ldw	r4,176(sp)
     e84:	1d87883a 	add	r3,r3,r22
     e88:	10800044 	addi	r2,r2,1
     e8c:	41000015 	stw	r4,0(r8)
     e90:	45800115 	stw	r22,4(r8)
     e94:	d8c02015 	stw	r3,128(sp)
     e98:	d8801f15 	stw	r2,124(sp)
     e9c:	010001c4 	movi	r4,7
     ea0:	20821016 	blt	r4,r2,16e4 <___vfprintf_internal_r+0x121c>
     ea4:	42000204 	addi	r8,r8,8
     ea8:	9080400c 	andi	r2,r18,256
     eac:	10013a1e 	bne	r2,zero,1398 <___vfprintf_internal_r+0xed0>
     eb0:	d9402b17 	ldw	r5,172(sp)
     eb4:	d8801f17 	ldw	r2,124(sp)
     eb8:	44000015 	stw	r16,0(r8)
     ebc:	1947883a 	add	r3,r3,r5
     ec0:	10800044 	addi	r2,r2,1
     ec4:	41400115 	stw	r5,4(r8)
     ec8:	d8c02015 	stw	r3,128(sp)
     ecc:	d8801f15 	stw	r2,124(sp)
     ed0:	010001c4 	movi	r4,7
     ed4:	2081f516 	blt	r4,r2,16ac <___vfprintf_internal_r+0x11e4>
     ed8:	42000204 	addi	r8,r8,8
     edc:	9480010c 	andi	r18,r18,4
     ee0:	90003226 	beq	r18,zero,fac <___vfprintf_internal_r+0xae4>
     ee4:	d9403117 	ldw	r5,196(sp)
     ee8:	d8802917 	ldw	r2,164(sp)
     eec:	28a1c83a 	sub	r16,r5,r2
     ef0:	04002e0e 	bge	zero,r16,fac <___vfprintf_internal_r+0xae4>
     ef4:	04400404 	movi	r17,16
     ef8:	d8801f17 	ldw	r2,124(sp)
     efc:	8c04c40e 	bge	r17,r16,2210 <___vfprintf_internal_r+0x1d48>
     f00:	01410034 	movhi	r5,1024
     f04:	29402284 	addi	r5,r5,138
     f08:	d9403515 	stw	r5,212(sp)
     f0c:	048001c4 	movi	r18,7
     f10:	dcc02d17 	ldw	r19,180(sp)
     f14:	00000306 	br	f24 <___vfprintf_internal_r+0xa5c>
     f18:	843ffc04 	addi	r16,r16,-16
     f1c:	42000204 	addi	r8,r8,8
     f20:	8c00130e 	bge	r17,r16,f70 <___vfprintf_internal_r+0xaa8>
     f24:	01010034 	movhi	r4,1024
     f28:	18c00404 	addi	r3,r3,16
     f2c:	10800044 	addi	r2,r2,1
     f30:	21002284 	addi	r4,r4,138
     f34:	41000015 	stw	r4,0(r8)
     f38:	44400115 	stw	r17,4(r8)
     f3c:	d8c02015 	stw	r3,128(sp)
     f40:	d8801f15 	stw	r2,124(sp)
     f44:	90bff40e 	bge	r18,r2,f18 <___vfprintf_internal_r+0xa50>
     f48:	d9801e04 	addi	r6,sp,120
     f4c:	b80b883a 	mov	r5,r23
     f50:	9809883a 	mov	r4,r19
     f54:	0007ca80 	call	7ca8 <__sprint_r>
     f58:	103e5f1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
     f5c:	843ffc04 	addi	r16,r16,-16
     f60:	d8c02017 	ldw	r3,128(sp)
     f64:	d8801f17 	ldw	r2,124(sp)
     f68:	da000404 	addi	r8,sp,16
     f6c:	8c3fed16 	blt	r17,r16,f24 <___vfprintf_internal_r+0xa5c>
     f70:	d9403517 	ldw	r5,212(sp)
     f74:	1c07883a 	add	r3,r3,r16
     f78:	10800044 	addi	r2,r2,1
     f7c:	41400015 	stw	r5,0(r8)
     f80:	44000115 	stw	r16,4(r8)
     f84:	d8c02015 	stw	r3,128(sp)
     f88:	d8801f15 	stw	r2,124(sp)
     f8c:	010001c4 	movi	r4,7
     f90:	2080060e 	bge	r4,r2,fac <___vfprintf_internal_r+0xae4>
     f94:	d9002d17 	ldw	r4,180(sp)
     f98:	d9801e04 	addi	r6,sp,120
     f9c:	b80b883a 	mov	r5,r23
     fa0:	0007ca80 	call	7ca8 <__sprint_r>
     fa4:	103e4c1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
     fa8:	d8c02017 	ldw	r3,128(sp)
     fac:	d8803117 	ldw	r2,196(sp)
     fb0:	d9002917 	ldw	r4,164(sp)
     fb4:	1100010e 	bge	r2,r4,fbc <___vfprintf_internal_r+0xaf4>
     fb8:	2005883a 	mov	r2,r4
     fbc:	d9402f17 	ldw	r5,188(sp)
     fc0:	288b883a 	add	r5,r5,r2
     fc4:	d9402f15 	stw	r5,188(sp)
     fc8:	1801c01e 	bne	r3,zero,16cc <___vfprintf_internal_r+0x1204>
     fcc:	a8800007 	ldb	r2,0(r21)
     fd0:	d8001f15 	stw	zero,124(sp)
     fd4:	da000404 	addi	r8,sp,16
     fd8:	103d751e 	bne	r2,zero,5b0 <___vfprintf_internal_r+0xe8>
     fdc:	a823883a 	mov	r17,r21
     fe0:	003d8b06 	br	610 <___vfprintf_internal_r+0x148>
     fe4:	8025883a 	mov	r18,r16
     fe8:	dc002903 	ldbu	r16,164(sp)
     fec:	e011883a 	mov	r8,fp
     ff0:	84003fcc 	andi	r16,r16,255
     ff4:	8005e51e 	bne	r16,zero,278c <___vfprintf_internal_r+0x22c4>
     ff8:	94800414 	ori	r18,r18,16
     ffc:	9080080c 	andi	r2,r18,32
    1000:	10022b26 	beq	r2,zero,18b0 <___vfprintf_internal_r+0x13e8>
    1004:	d9002e17 	ldw	r4,184(sp)
    1008:	d9402a17 	ldw	r5,168(sp)
    100c:	d8002785 	stb	zero,158(sp)
    1010:	20c00204 	addi	r3,r4,8
    1014:	24c00017 	ldw	r19,0(r4)
    1018:	25800117 	ldw	r22,4(r4)
    101c:	28042e16 	blt	r5,zero,20d8 <___vfprintf_internal_r+0x1c10>
    1020:	013fdfc4 	movi	r4,-129
    1024:	9d84b03a 	or	r2,r19,r22
    1028:	d8c02e15 	stw	r3,184(sp)
    102c:	9124703a 	and	r18,r18,r4
    1030:	0039883a 	mov	fp,zero
    1034:	103e801e 	bne	r2,zero,a38 <___vfprintf_internal_r+0x570>
    1038:	d9002a17 	ldw	r4,168(sp)
    103c:	2002e01e 	bne	r4,zero,1bc0 <___vfprintf_internal_r+0x16f8>
    1040:	d8002a15 	stw	zero,168(sp)
    1044:	d8002b15 	stw	zero,172(sp)
    1048:	dc001e04 	addi	r16,sp,120
    104c:	003ef506 	br	c24 <___vfprintf_internal_r+0x75c>
    1050:	8025883a 	mov	r18,r16
    1054:	dc002903 	ldbu	r16,164(sp)
    1058:	e011883a 	mov	r8,fp
    105c:	84003fcc 	andi	r16,r16,255
    1060:	8005ba1e 	bne	r16,zero,274c <___vfprintf_internal_r+0x2284>
    1064:	01010034 	movhi	r4,1024
    1068:	21001204 	addi	r4,r4,72
    106c:	d9003915 	stw	r4,228(sp)
    1070:	9080080c 	andi	r2,r18,32
    1074:	10006126 	beq	r2,zero,11fc <___vfprintf_internal_r+0xd34>
    1078:	d9402e17 	ldw	r5,184(sp)
    107c:	2cc00017 	ldw	r19,0(r5)
    1080:	2d800117 	ldw	r22,4(r5)
    1084:	29400204 	addi	r5,r5,8
    1088:	d9402e15 	stw	r5,184(sp)
    108c:	9080004c 	andi	r2,r18,1
    1090:	1001ac26 	beq	r2,zero,1744 <___vfprintf_internal_r+0x127c>
    1094:	9d84b03a 	or	r2,r19,r22
    1098:	10038526 	beq	r2,zero,1eb0 <___vfprintf_internal_r+0x19e8>
    109c:	d8c02a17 	ldw	r3,168(sp)
    10a0:	00800c04 	movi	r2,48
    10a4:	d8802705 	stb	r2,156(sp)
    10a8:	dc402745 	stb	r17,157(sp)
    10ac:	d8002785 	stb	zero,158(sp)
    10b0:	90800094 	ori	r2,r18,2
    10b4:	18047916 	blt	r3,zero,229c <___vfprintf_internal_r+0x1dd4>
    10b8:	00bfdfc4 	movi	r2,-129
    10bc:	90a4703a 	and	r18,r18,r2
    10c0:	94800094 	ori	r18,r18,2
    10c4:	0039883a 	mov	fp,zero
    10c8:	d9003917 	ldw	r4,228(sp)
    10cc:	dc001e04 	addi	r16,sp,120
    10d0:	988003cc 	andi	r2,r19,15
    10d4:	b006973a 	slli	r3,r22,28
    10d8:	2085883a 	add	r2,r4,r2
    10dc:	9826d13a 	srli	r19,r19,4
    10e0:	10800003 	ldbu	r2,0(r2)
    10e4:	b02cd13a 	srli	r22,r22,4
    10e8:	843fffc4 	addi	r16,r16,-1
    10ec:	1ce6b03a 	or	r19,r3,r19
    10f0:	80800005 	stb	r2,0(r16)
    10f4:	9d84b03a 	or	r2,r19,r22
    10f8:	103ff51e 	bne	r2,zero,10d0 <___vfprintf_internal_r+0xc08>
    10fc:	d8c02817 	ldw	r3,160(sp)
    1100:	1c07c83a 	sub	r3,r3,r16
    1104:	d8c02b15 	stw	r3,172(sp)
    1108:	003ec606 	br	c24 <___vfprintf_internal_r+0x75c>
    110c:	8025883a 	mov	r18,r16
    1110:	dc002903 	ldbu	r16,164(sp)
    1114:	e011883a 	mov	r8,fp
    1118:	84003fcc 	andi	r16,r16,255
    111c:	803e9626 	beq	r16,zero,b78 <___vfprintf_internal_r+0x6b0>
    1120:	d8c02b03 	ldbu	r3,172(sp)
    1124:	d8c02785 	stb	r3,158(sp)
    1128:	003e9306 	br	b78 <___vfprintf_internal_r+0x6b0>
    112c:	00c00044 	movi	r3,1
    1130:	d8c02905 	stb	r3,164(sp)
    1134:	00c00ac4 	movi	r3,43
    1138:	d8c02b05 	stb	r3,172(sp)
    113c:	ac400007 	ldb	r17,0(r21)
    1140:	003d4306 	br	650 <___vfprintf_internal_r+0x188>
    1144:	84000814 	ori	r16,r16,32
    1148:	ac400007 	ldb	r17,0(r21)
    114c:	003d4006 	br	650 <___vfprintf_internal_r+0x188>
    1150:	d8802e17 	ldw	r2,184(sp)
    1154:	8025883a 	mov	r18,r16
    1158:	d8002785 	stb	zero,158(sp)
    115c:	14000017 	ldw	r16,0(r2)
    1160:	e011883a 	mov	r8,fp
    1164:	14c00104 	addi	r19,r2,4
    1168:	80042d26 	beq	r16,zero,2220 <___vfprintf_internal_r+0x1d58>
    116c:	d8c02a17 	ldw	r3,168(sp)
    1170:	1803e416 	blt	r3,zero,2104 <___vfprintf_internal_r+0x1c3c>
    1174:	180d883a 	mov	r6,r3
    1178:	000b883a 	mov	r5,zero
    117c:	8009883a 	mov	r4,r16
    1180:	df003d15 	stw	fp,244(sp)
    1184:	0005e000 	call	5e00 <memchr>
    1188:	da003d17 	ldw	r8,244(sp)
    118c:	10046826 	beq	r2,zero,2330 <___vfprintf_internal_r+0x1e68>
    1190:	1405c83a 	sub	r2,r2,r16
    1194:	d8802b15 	stw	r2,172(sp)
    1198:	1003e016 	blt	r2,zero,211c <___vfprintf_internal_r+0x1c54>
    119c:	df002783 	ldbu	fp,158(sp)
    11a0:	d8802915 	stw	r2,164(sp)
    11a4:	dcc02e15 	stw	r19,184(sp)
    11a8:	d8002a15 	stw	zero,168(sp)
    11ac:	d8003215 	stw	zero,200(sp)
    11b0:	003ea206 	br	c3c <___vfprintf_internal_r+0x774>
    11b4:	8025883a 	mov	r18,r16
    11b8:	dc002903 	ldbu	r16,164(sp)
    11bc:	e011883a 	mov	r8,fp
    11c0:	84003fcc 	andi	r16,r16,255
    11c4:	803f8d26 	beq	r16,zero,ffc <___vfprintf_internal_r+0xb34>
    11c8:	d8c02b03 	ldbu	r3,172(sp)
    11cc:	d8c02785 	stb	r3,158(sp)
    11d0:	003f8a06 	br	ffc <___vfprintf_internal_r+0xb34>
    11d4:	8025883a 	mov	r18,r16
    11d8:	dc002903 	ldbu	r16,164(sp)
    11dc:	e011883a 	mov	r8,fp
    11e0:	84003fcc 	andi	r16,r16,255
    11e4:	8005661e 	bne	r16,zero,2780 <___vfprintf_internal_r+0x22b8>
    11e8:	01010034 	movhi	r4,1024
    11ec:	21001704 	addi	r4,r4,92
    11f0:	d9003915 	stw	r4,228(sp)
    11f4:	9080080c 	andi	r2,r18,32
    11f8:	103f9f1e 	bne	r2,zero,1078 <___vfprintf_internal_r+0xbb0>
    11fc:	9080040c 	andi	r2,r18,16
    1200:	1002eb26 	beq	r2,zero,1db0 <___vfprintf_internal_r+0x18e8>
    1204:	d8802e17 	ldw	r2,184(sp)
    1208:	002d883a 	mov	r22,zero
    120c:	14c00017 	ldw	r19,0(r2)
    1210:	10800104 	addi	r2,r2,4
    1214:	d8802e15 	stw	r2,184(sp)
    1218:	003f9c06 	br	108c <___vfprintf_internal_r+0xbc4>
    121c:	d8802b07 	ldb	r2,172(sp)
    1220:	1002e11e 	bne	r2,zero,1da8 <___vfprintf_internal_r+0x18e0>
    1224:	00c00044 	movi	r3,1
    1228:	d8c02905 	stb	r3,164(sp)
    122c:	00c00804 	movi	r3,32
    1230:	d8c02b05 	stb	r3,172(sp)
    1234:	ac400007 	ldb	r17,0(r21)
    1238:	003d0506 	br	650 <___vfprintf_internal_r+0x188>
    123c:	84000054 	ori	r16,r16,1
    1240:	ac400007 	ldb	r17,0(r21)
    1244:	003d0206 	br	650 <___vfprintf_internal_r+0x188>
    1248:	8025883a 	mov	r18,r16
    124c:	dc002903 	ldbu	r16,164(sp)
    1250:	e011883a 	mov	r8,fp
    1254:	84003fcc 	andi	r16,r16,255
    1258:	803de726 	beq	r16,zero,9f8 <___vfprintf_internal_r+0x530>
    125c:	d8c02b03 	ldbu	r3,172(sp)
    1260:	d8c02785 	stb	r3,158(sp)
    1264:	003de406 	br	9f8 <___vfprintf_internal_r+0x530>
    1268:	84001014 	ori	r16,r16,64
    126c:	ac400007 	ldb	r17,0(r21)
    1270:	003cf706 	br	650 <___vfprintf_internal_r+0x188>
    1274:	ac400007 	ldb	r17,0(r21)
    1278:	00801b04 	movi	r2,108
    127c:	88838f26 	beq	r17,r2,20bc <___vfprintf_internal_r+0x1bf4>
    1280:	84000414 	ori	r16,r16,16
    1284:	003cf206 	br	650 <___vfprintf_internal_r+0x188>
    1288:	8025883a 	mov	r18,r16
    128c:	dc002903 	ldbu	r16,164(sp)
    1290:	e011883a 	mov	r8,fp
    1294:	84003fcc 	andi	r16,r16,255
    1298:	80053f1e 	bne	r16,zero,2798 <___vfprintf_internal_r+0x22d0>
    129c:	9080080c 	andi	r2,r18,32
    12a0:	1002d226 	beq	r2,zero,1dec <___vfprintf_internal_r+0x1924>
    12a4:	d9002e17 	ldw	r4,184(sp)
    12a8:	d9402f17 	ldw	r5,188(sp)
    12ac:	20800017 	ldw	r2,0(r4)
    12b0:	2807d7fa 	srai	r3,r5,31
    12b4:	21000104 	addi	r4,r4,4
    12b8:	d9002e15 	stw	r4,184(sp)
    12bc:	11400015 	stw	r5,0(r2)
    12c0:	10c00115 	stw	r3,4(r2)
    12c4:	003cb806 	br	5a8 <___vfprintf_internal_r+0xe0>
    12c8:	d8c02e17 	ldw	r3,184(sp)
    12cc:	d9002e17 	ldw	r4,184(sp)
    12d0:	8025883a 	mov	r18,r16
    12d4:	18800017 	ldw	r2,0(r3)
    12d8:	21000104 	addi	r4,r4,4
    12dc:	00c00044 	movi	r3,1
    12e0:	e011883a 	mov	r8,fp
    12e4:	d8c02915 	stw	r3,164(sp)
    12e8:	d8002785 	stb	zero,158(sp)
    12ec:	d8801405 	stb	r2,80(sp)
    12f0:	d9002e15 	stw	r4,184(sp)
    12f4:	d8c02b15 	stw	r3,172(sp)
    12f8:	d8002a15 	stw	zero,168(sp)
    12fc:	d8003215 	stw	zero,200(sp)
    1300:	dc001404 	addi	r16,sp,80
    1304:	0039883a 	mov	fp,zero
    1308:	003e5306 	br	c58 <___vfprintf_internal_r+0x790>
    130c:	01010034 	movhi	r4,1024
    1310:	21001704 	addi	r4,r4,92
    1314:	0039883a 	mov	fp,zero
    1318:	d9003915 	stw	r4,228(sp)
    131c:	04401e04 	movi	r17,120
    1320:	003f6906 	br	10c8 <___vfprintf_internal_r+0xc00>
    1324:	8025883a 	mov	r18,r16
    1328:	dc002903 	ldbu	r16,164(sp)
    132c:	e011883a 	mov	r8,fp
    1330:	84003fcc 	andi	r16,r16,255
    1334:	8005081e 	bne	r16,zero,2758 <___vfprintf_internal_r+0x2290>
    1338:	883d6126 	beq	r17,zero,8c0 <___vfprintf_internal_r+0x3f8>
    133c:	00c00044 	movi	r3,1
    1340:	d8c02915 	stw	r3,164(sp)
    1344:	dc401405 	stb	r17,80(sp)
    1348:	d8002785 	stb	zero,158(sp)
    134c:	003fe906 	br	12f4 <___vfprintf_internal_r+0xe2c>
    1350:	01410034 	movhi	r5,1024
    1354:	29401704 	addi	r5,r5,92
    1358:	d9403915 	stw	r5,228(sp)
    135c:	d8c02e15 	stw	r3,184(sp)
    1360:	1025883a 	mov	r18,r2
    1364:	04401e04 	movi	r17,120
    1368:	9d84b03a 	or	r2,r19,r22
    136c:	1000fc1e 	bne	r2,zero,1760 <___vfprintf_internal_r+0x1298>
    1370:	0039883a 	mov	fp,zero
    1374:	00800084 	movi	r2,2
    1378:	10803fcc 	andi	r2,r2,255
    137c:	00c00044 	movi	r3,1
    1380:	10c20f26 	beq	r2,r3,1bc0 <___vfprintf_internal_r+0x16f8>
    1384:	00c00084 	movi	r3,2
    1388:	10fd3326 	beq	r2,r3,858 <___vfprintf_internal_r+0x390>
    138c:	003e0b06 	br	bbc <___vfprintf_internal_r+0x6f4>
    1390:	d8c02017 	ldw	r3,128(sp)
    1394:	003e7106 	br	d5c <___vfprintf_internal_r+0x894>
    1398:	00801944 	movi	r2,101
    139c:	14407e0e 	bge	r2,r17,1598 <___vfprintf_internal_r+0x10d0>
    13a0:	d9003617 	ldw	r4,216(sp)
    13a4:	d9403817 	ldw	r5,224(sp)
    13a8:	000d883a 	mov	r6,zero
    13ac:	000f883a 	mov	r7,zero
    13b0:	d8c03c15 	stw	r3,240(sp)
    13b4:	da003d15 	stw	r8,244(sp)
    13b8:	000bc080 	call	bc08 <__eqdf2>
    13bc:	d8c03c17 	ldw	r3,240(sp)
    13c0:	da003d17 	ldw	r8,244(sp)
    13c4:	1000f71e 	bne	r2,zero,17a4 <___vfprintf_internal_r+0x12dc>
    13c8:	d8801f17 	ldw	r2,124(sp)
    13cc:	01010034 	movhi	r4,1024
    13d0:	21001e04 	addi	r4,r4,120
    13d4:	18c00044 	addi	r3,r3,1
    13d8:	10800044 	addi	r2,r2,1
    13dc:	41000015 	stw	r4,0(r8)
    13e0:	01000044 	movi	r4,1
    13e4:	41000115 	stw	r4,4(r8)
    13e8:	d8c02015 	stw	r3,128(sp)
    13ec:	d8801f15 	stw	r2,124(sp)
    13f0:	010001c4 	movi	r4,7
    13f4:	2082b816 	blt	r4,r2,1ed8 <___vfprintf_internal_r+0x1a10>
    13f8:	42000204 	addi	r8,r8,8
    13fc:	d8802617 	ldw	r2,152(sp)
    1400:	d9403317 	ldw	r5,204(sp)
    1404:	11400216 	blt	r2,r5,1410 <___vfprintf_internal_r+0xf48>
    1408:	9080004c 	andi	r2,r18,1
    140c:	103eb326 	beq	r2,zero,edc <___vfprintf_internal_r+0xa14>
    1410:	d8803717 	ldw	r2,220(sp)
    1414:	d9003417 	ldw	r4,208(sp)
    1418:	d9403717 	ldw	r5,220(sp)
    141c:	1887883a 	add	r3,r3,r2
    1420:	d8801f17 	ldw	r2,124(sp)
    1424:	41000015 	stw	r4,0(r8)
    1428:	41400115 	stw	r5,4(r8)
    142c:	10800044 	addi	r2,r2,1
    1430:	d8c02015 	stw	r3,128(sp)
    1434:	d8801f15 	stw	r2,124(sp)
    1438:	010001c4 	movi	r4,7
    143c:	20832916 	blt	r4,r2,20e4 <___vfprintf_internal_r+0x1c1c>
    1440:	42000204 	addi	r8,r8,8
    1444:	d8803317 	ldw	r2,204(sp)
    1448:	143fffc4 	addi	r16,r2,-1
    144c:	043ea30e 	bge	zero,r16,edc <___vfprintf_internal_r+0xa14>
    1450:	04400404 	movi	r17,16
    1454:	d8801f17 	ldw	r2,124(sp)
    1458:	8c00880e 	bge	r17,r16,167c <___vfprintf_internal_r+0x11b4>
    145c:	01410034 	movhi	r5,1024
    1460:	29401e84 	addi	r5,r5,122
    1464:	d9402c15 	stw	r5,176(sp)
    1468:	058001c4 	movi	r22,7
    146c:	dcc02d17 	ldw	r19,180(sp)
    1470:	00000306 	br	1480 <___vfprintf_internal_r+0xfb8>
    1474:	42000204 	addi	r8,r8,8
    1478:	843ffc04 	addi	r16,r16,-16
    147c:	8c00820e 	bge	r17,r16,1688 <___vfprintf_internal_r+0x11c0>
    1480:	18c00404 	addi	r3,r3,16
    1484:	10800044 	addi	r2,r2,1
    1488:	45000015 	stw	r20,0(r8)
    148c:	44400115 	stw	r17,4(r8)
    1490:	d8c02015 	stw	r3,128(sp)
    1494:	d8801f15 	stw	r2,124(sp)
    1498:	b0bff60e 	bge	r22,r2,1474 <___vfprintf_internal_r+0xfac>
    149c:	d9801e04 	addi	r6,sp,120
    14a0:	b80b883a 	mov	r5,r23
    14a4:	9809883a 	mov	r4,r19
    14a8:	0007ca80 	call	7ca8 <__sprint_r>
    14ac:	103d0a1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    14b0:	d8c02017 	ldw	r3,128(sp)
    14b4:	d8801f17 	ldw	r2,124(sp)
    14b8:	da000404 	addi	r8,sp,16
    14bc:	003fee06 	br	1478 <___vfprintf_internal_r+0xfb0>
    14c0:	d9403117 	ldw	r5,196(sp)
    14c4:	d8802917 	ldw	r2,164(sp)
    14c8:	28adc83a 	sub	r22,r5,r2
    14cc:	05be410e 	bge	zero,r22,dd4 <___vfprintf_internal_r+0x90c>
    14d0:	07000404 	movi	fp,16
    14d4:	d8801f17 	ldw	r2,124(sp)
    14d8:	e5838f0e 	bge	fp,r22,2318 <___vfprintf_internal_r+0x1e50>
    14dc:	01410034 	movhi	r5,1024
    14e0:	29401e84 	addi	r5,r5,122
    14e4:	dc403015 	stw	r17,192(sp)
    14e8:	d9402c15 	stw	r5,176(sp)
    14ec:	b023883a 	mov	r17,r22
    14f0:	04c001c4 	movi	r19,7
    14f4:	a82d883a 	mov	r22,r21
    14f8:	902b883a 	mov	r21,r18
    14fc:	8025883a 	mov	r18,r16
    1500:	dc002d17 	ldw	r16,180(sp)
    1504:	00000306 	br	1514 <___vfprintf_internal_r+0x104c>
    1508:	8c7ffc04 	addi	r17,r17,-16
    150c:	42000204 	addi	r8,r8,8
    1510:	e440110e 	bge	fp,r17,1558 <___vfprintf_internal_r+0x1090>
    1514:	18c00404 	addi	r3,r3,16
    1518:	10800044 	addi	r2,r2,1
    151c:	45000015 	stw	r20,0(r8)
    1520:	47000115 	stw	fp,4(r8)
    1524:	d8c02015 	stw	r3,128(sp)
    1528:	d8801f15 	stw	r2,124(sp)
    152c:	98bff60e 	bge	r19,r2,1508 <___vfprintf_internal_r+0x1040>
    1530:	d9801e04 	addi	r6,sp,120
    1534:	b80b883a 	mov	r5,r23
    1538:	8009883a 	mov	r4,r16
    153c:	0007ca80 	call	7ca8 <__sprint_r>
    1540:	103ce51e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1544:	8c7ffc04 	addi	r17,r17,-16
    1548:	d8c02017 	ldw	r3,128(sp)
    154c:	d8801f17 	ldw	r2,124(sp)
    1550:	da000404 	addi	r8,sp,16
    1554:	e47fef16 	blt	fp,r17,1514 <___vfprintf_internal_r+0x104c>
    1558:	9021883a 	mov	r16,r18
    155c:	a825883a 	mov	r18,r21
    1560:	b02b883a 	mov	r21,r22
    1564:	882d883a 	mov	r22,r17
    1568:	dc403017 	ldw	r17,192(sp)
    156c:	d9002c17 	ldw	r4,176(sp)
    1570:	1d87883a 	add	r3,r3,r22
    1574:	10800044 	addi	r2,r2,1
    1578:	41000015 	stw	r4,0(r8)
    157c:	45800115 	stw	r22,4(r8)
    1580:	d8c02015 	stw	r3,128(sp)
    1584:	d8801f15 	stw	r2,124(sp)
    1588:	010001c4 	movi	r4,7
    158c:	20818e16 	blt	r4,r2,1bc8 <___vfprintf_internal_r+0x1700>
    1590:	42000204 	addi	r8,r8,8
    1594:	003e0f06 	br	dd4 <___vfprintf_internal_r+0x90c>
    1598:	d9403317 	ldw	r5,204(sp)
    159c:	00800044 	movi	r2,1
    15a0:	18c00044 	addi	r3,r3,1
    15a4:	1141530e 	bge	r2,r5,1af4 <___vfprintf_internal_r+0x162c>
    15a8:	dc401f17 	ldw	r17,124(sp)
    15ac:	00800044 	movi	r2,1
    15b0:	40800115 	stw	r2,4(r8)
    15b4:	8c400044 	addi	r17,r17,1
    15b8:	44000015 	stw	r16,0(r8)
    15bc:	d8c02015 	stw	r3,128(sp)
    15c0:	dc401f15 	stw	r17,124(sp)
    15c4:	008001c4 	movi	r2,7
    15c8:	14416b16 	blt	r2,r17,1b78 <___vfprintf_internal_r+0x16b0>
    15cc:	42000204 	addi	r8,r8,8
    15d0:	d8803717 	ldw	r2,220(sp)
    15d4:	d9003417 	ldw	r4,208(sp)
    15d8:	8c400044 	addi	r17,r17,1
    15dc:	10c7883a 	add	r3,r2,r3
    15e0:	40800115 	stw	r2,4(r8)
    15e4:	41000015 	stw	r4,0(r8)
    15e8:	d8c02015 	stw	r3,128(sp)
    15ec:	dc401f15 	stw	r17,124(sp)
    15f0:	008001c4 	movi	r2,7
    15f4:	14416916 	blt	r2,r17,1b9c <___vfprintf_internal_r+0x16d4>
    15f8:	45800204 	addi	r22,r8,8
    15fc:	d9003617 	ldw	r4,216(sp)
    1600:	d9403817 	ldw	r5,224(sp)
    1604:	000d883a 	mov	r6,zero
    1608:	000f883a 	mov	r7,zero
    160c:	d8c03c15 	stw	r3,240(sp)
    1610:	000bc080 	call	bc08 <__eqdf2>
    1614:	d8c03c17 	ldw	r3,240(sp)
    1618:	1000bc26 	beq	r2,zero,190c <___vfprintf_internal_r+0x1444>
    161c:	d9403317 	ldw	r5,204(sp)
    1620:	84000044 	addi	r16,r16,1
    1624:	8c400044 	addi	r17,r17,1
    1628:	28bfffc4 	addi	r2,r5,-1
    162c:	1887883a 	add	r3,r3,r2
    1630:	b0800115 	stw	r2,4(r22)
    1634:	b4000015 	stw	r16,0(r22)
    1638:	d8c02015 	stw	r3,128(sp)
    163c:	dc401f15 	stw	r17,124(sp)
    1640:	008001c4 	movi	r2,7
    1644:	14414316 	blt	r2,r17,1b54 <___vfprintf_internal_r+0x168c>
    1648:	b5800204 	addi	r22,r22,8
    164c:	d9003a17 	ldw	r4,232(sp)
    1650:	df0022c4 	addi	fp,sp,139
    1654:	8c400044 	addi	r17,r17,1
    1658:	20c7883a 	add	r3,r4,r3
    165c:	b7000015 	stw	fp,0(r22)
    1660:	b1000115 	stw	r4,4(r22)
    1664:	d8c02015 	stw	r3,128(sp)
    1668:	dc401f15 	stw	r17,124(sp)
    166c:	008001c4 	movi	r2,7
    1670:	14400e16 	blt	r2,r17,16ac <___vfprintf_internal_r+0x11e4>
    1674:	b2000204 	addi	r8,r22,8
    1678:	003e1806 	br	edc <___vfprintf_internal_r+0xa14>
    167c:	01010034 	movhi	r4,1024
    1680:	21001e84 	addi	r4,r4,122
    1684:	d9002c15 	stw	r4,176(sp)
    1688:	d9002c17 	ldw	r4,176(sp)
    168c:	1c07883a 	add	r3,r3,r16
    1690:	44000115 	stw	r16,4(r8)
    1694:	41000015 	stw	r4,0(r8)
    1698:	10800044 	addi	r2,r2,1
    169c:	d8c02015 	stw	r3,128(sp)
    16a0:	d8801f15 	stw	r2,124(sp)
    16a4:	010001c4 	movi	r4,7
    16a8:	20be0b0e 	bge	r4,r2,ed8 <___vfprintf_internal_r+0xa10>
    16ac:	d9002d17 	ldw	r4,180(sp)
    16b0:	d9801e04 	addi	r6,sp,120
    16b4:	b80b883a 	mov	r5,r23
    16b8:	0007ca80 	call	7ca8 <__sprint_r>
    16bc:	103c861e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    16c0:	d8c02017 	ldw	r3,128(sp)
    16c4:	da000404 	addi	r8,sp,16
    16c8:	003e0406 	br	edc <___vfprintf_internal_r+0xa14>
    16cc:	d9002d17 	ldw	r4,180(sp)
    16d0:	d9801e04 	addi	r6,sp,120
    16d4:	b80b883a 	mov	r5,r23
    16d8:	0007ca80 	call	7ca8 <__sprint_r>
    16dc:	103e3b26 	beq	r2,zero,fcc <___vfprintf_internal_r+0xb04>
    16e0:	003c7d06 	br	8d8 <___vfprintf_internal_r+0x410>
    16e4:	d9002d17 	ldw	r4,180(sp)
    16e8:	d9801e04 	addi	r6,sp,120
    16ec:	b80b883a 	mov	r5,r23
    16f0:	0007ca80 	call	7ca8 <__sprint_r>
    16f4:	103c781e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    16f8:	d8c02017 	ldw	r3,128(sp)
    16fc:	da000404 	addi	r8,sp,16
    1700:	003de906 	br	ea8 <___vfprintf_internal_r+0x9e0>
    1704:	d9002d17 	ldw	r4,180(sp)
    1708:	d9801e04 	addi	r6,sp,120
    170c:	b80b883a 	mov	r5,r23
    1710:	0007ca80 	call	7ca8 <__sprint_r>
    1714:	103c701e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1718:	d8c02017 	ldw	r3,128(sp)
    171c:	da000404 	addi	r8,sp,16
    1720:	003d9b06 	br	d90 <___vfprintf_internal_r+0x8c8>
    1724:	d9002d17 	ldw	r4,180(sp)
    1728:	d9801e04 	addi	r6,sp,120
    172c:	b80b883a 	mov	r5,r23
    1730:	0007ca80 	call	7ca8 <__sprint_r>
    1734:	103c681e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1738:	d8c02017 	ldw	r3,128(sp)
    173c:	da000404 	addi	r8,sp,16
    1740:	003da106 	br	dc8 <___vfprintf_internal_r+0x900>
    1744:	d9402a17 	ldw	r5,168(sp)
    1748:	d8002785 	stb	zero,158(sp)
    174c:	283f0616 	blt	r5,zero,1368 <___vfprintf_internal_r+0xea0>
    1750:	00ffdfc4 	movi	r3,-129
    1754:	9d84b03a 	or	r2,r19,r22
    1758:	90e4703a 	and	r18,r18,r3
    175c:	103c3b26 	beq	r2,zero,84c <___vfprintf_internal_r+0x384>
    1760:	0039883a 	mov	fp,zero
    1764:	003e5806 	br	10c8 <___vfprintf_internal_r+0xc00>
    1768:	9080040c 	andi	r2,r18,16
    176c:	1001b326 	beq	r2,zero,1e3c <___vfprintf_internal_r+0x1974>
    1770:	d8c02e17 	ldw	r3,184(sp)
    1774:	d9002a17 	ldw	r4,168(sp)
    1778:	d8002785 	stb	zero,158(sp)
    177c:	18800104 	addi	r2,r3,4
    1780:	1cc00017 	ldw	r19,0(r3)
    1784:	002d883a 	mov	r22,zero
    1788:	2001b516 	blt	r4,zero,1e60 <___vfprintf_internal_r+0x1998>
    178c:	00ffdfc4 	movi	r3,-129
    1790:	d8802e15 	stw	r2,184(sp)
    1794:	90e4703a 	and	r18,r18,r3
    1798:	983d0526 	beq	r19,zero,bb0 <___vfprintf_internal_r+0x6e8>
    179c:	0039883a 	mov	fp,zero
    17a0:	003d0806 	br	bc4 <___vfprintf_internal_r+0x6fc>
    17a4:	dc402617 	ldw	r17,152(sp)
    17a8:	0441d30e 	bge	zero,r17,1ef8 <___vfprintf_internal_r+0x1a30>
    17ac:	dc403217 	ldw	r17,200(sp)
    17b0:	d8803317 	ldw	r2,204(sp)
    17b4:	1440010e 	bge	r2,r17,17bc <___vfprintf_internal_r+0x12f4>
    17b8:	1023883a 	mov	r17,r2
    17bc:	04400a0e 	bge	zero,r17,17e8 <___vfprintf_internal_r+0x1320>
    17c0:	d8801f17 	ldw	r2,124(sp)
    17c4:	1c47883a 	add	r3,r3,r17
    17c8:	44000015 	stw	r16,0(r8)
    17cc:	10800044 	addi	r2,r2,1
    17d0:	44400115 	stw	r17,4(r8)
    17d4:	d8c02015 	stw	r3,128(sp)
    17d8:	d8801f15 	stw	r2,124(sp)
    17dc:	010001c4 	movi	r4,7
    17e0:	20826516 	blt	r4,r2,2178 <___vfprintf_internal_r+0x1cb0>
    17e4:	42000204 	addi	r8,r8,8
    17e8:	88026116 	blt	r17,zero,2170 <___vfprintf_internal_r+0x1ca8>
    17ec:	d9003217 	ldw	r4,200(sp)
    17f0:	2463c83a 	sub	r17,r4,r17
    17f4:	04407b0e 	bge	zero,r17,19e4 <___vfprintf_internal_r+0x151c>
    17f8:	05800404 	movi	r22,16
    17fc:	d8801f17 	ldw	r2,124(sp)
    1800:	b4419d0e 	bge	r22,r17,1e78 <___vfprintf_internal_r+0x19b0>
    1804:	01010034 	movhi	r4,1024
    1808:	21001e84 	addi	r4,r4,122
    180c:	d9002c15 	stw	r4,176(sp)
    1810:	070001c4 	movi	fp,7
    1814:	dcc02d17 	ldw	r19,180(sp)
    1818:	00000306 	br	1828 <___vfprintf_internal_r+0x1360>
    181c:	42000204 	addi	r8,r8,8
    1820:	8c7ffc04 	addi	r17,r17,-16
    1824:	b441970e 	bge	r22,r17,1e84 <___vfprintf_internal_r+0x19bc>
    1828:	18c00404 	addi	r3,r3,16
    182c:	10800044 	addi	r2,r2,1
    1830:	45000015 	stw	r20,0(r8)
    1834:	45800115 	stw	r22,4(r8)
    1838:	d8c02015 	stw	r3,128(sp)
    183c:	d8801f15 	stw	r2,124(sp)
    1840:	e0bff60e 	bge	fp,r2,181c <___vfprintf_internal_r+0x1354>
    1844:	d9801e04 	addi	r6,sp,120
    1848:	b80b883a 	mov	r5,r23
    184c:	9809883a 	mov	r4,r19
    1850:	0007ca80 	call	7ca8 <__sprint_r>
    1854:	103c201e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1858:	d8c02017 	ldw	r3,128(sp)
    185c:	d8801f17 	ldw	r2,124(sp)
    1860:	da000404 	addi	r8,sp,16
    1864:	003fee06 	br	1820 <___vfprintf_internal_r+0x1358>
    1868:	d9002d17 	ldw	r4,180(sp)
    186c:	d9801e04 	addi	r6,sp,120
    1870:	b80b883a 	mov	r5,r23
    1874:	0007ca80 	call	7ca8 <__sprint_r>
    1878:	103c171e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    187c:	d8c02017 	ldw	r3,128(sp)
    1880:	df002787 	ldb	fp,158(sp)
    1884:	da000404 	addi	r8,sp,16
    1888:	003d3406 	br	d5c <___vfprintf_internal_r+0x894>
    188c:	9080040c 	andi	r2,r18,16
    1890:	10016126 	beq	r2,zero,1e18 <___vfprintf_internal_r+0x1950>
    1894:	d9402e17 	ldw	r5,184(sp)
    1898:	2cc00017 	ldw	r19,0(r5)
    189c:	29400104 	addi	r5,r5,4
    18a0:	d9402e15 	stw	r5,184(sp)
    18a4:	982dd7fa 	srai	r22,r19,31
    18a8:	b005883a 	mov	r2,r22
    18ac:	003c5a06 	br	a18 <___vfprintf_internal_r+0x550>
    18b0:	9080040c 	andi	r2,r18,16
    18b4:	10003526 	beq	r2,zero,198c <___vfprintf_internal_r+0x14c4>
    18b8:	d8c02e17 	ldw	r3,184(sp)
    18bc:	d9002a17 	ldw	r4,168(sp)
    18c0:	d8002785 	stb	zero,158(sp)
    18c4:	18800104 	addi	r2,r3,4
    18c8:	1cc00017 	ldw	r19,0(r3)
    18cc:	002d883a 	mov	r22,zero
    18d0:	20003716 	blt	r4,zero,19b0 <___vfprintf_internal_r+0x14e8>
    18d4:	00ffdfc4 	movi	r3,-129
    18d8:	d8802e15 	stw	r2,184(sp)
    18dc:	90e4703a 	and	r18,r18,r3
    18e0:	0039883a 	mov	fp,zero
    18e4:	983dd426 	beq	r19,zero,1038 <___vfprintf_internal_r+0xb70>
    18e8:	00800244 	movi	r2,9
    18ec:	14fc5336 	bltu	r2,r19,a3c <___vfprintf_internal_r+0x574>
    18f0:	d8c02817 	ldw	r3,160(sp)
    18f4:	dc001dc4 	addi	r16,sp,119
    18f8:	9cc00c04 	addi	r19,r19,48
    18fc:	1c07c83a 	sub	r3,r3,r16
    1900:	dcc01dc5 	stb	r19,119(sp)
    1904:	d8c02b15 	stw	r3,172(sp)
    1908:	003cc606 	br	c24 <___vfprintf_internal_r+0x75c>
    190c:	d8803317 	ldw	r2,204(sp)
    1910:	143fffc4 	addi	r16,r2,-1
    1914:	043f4d0e 	bge	zero,r16,164c <___vfprintf_internal_r+0x1184>
    1918:	07000404 	movi	fp,16
    191c:	e400810e 	bge	fp,r16,1b24 <___vfprintf_internal_r+0x165c>
    1920:	01410034 	movhi	r5,1024
    1924:	29401e84 	addi	r5,r5,122
    1928:	d9402c15 	stw	r5,176(sp)
    192c:	01c001c4 	movi	r7,7
    1930:	dcc02d17 	ldw	r19,180(sp)
    1934:	00000306 	br	1944 <___vfprintf_internal_r+0x147c>
    1938:	b5800204 	addi	r22,r22,8
    193c:	843ffc04 	addi	r16,r16,-16
    1940:	e4007b0e 	bge	fp,r16,1b30 <___vfprintf_internal_r+0x1668>
    1944:	18c00404 	addi	r3,r3,16
    1948:	8c400044 	addi	r17,r17,1
    194c:	b5000015 	stw	r20,0(r22)
    1950:	b7000115 	stw	fp,4(r22)
    1954:	d8c02015 	stw	r3,128(sp)
    1958:	dc401f15 	stw	r17,124(sp)
    195c:	3c7ff60e 	bge	r7,r17,1938 <___vfprintf_internal_r+0x1470>
    1960:	d9801e04 	addi	r6,sp,120
    1964:	b80b883a 	mov	r5,r23
    1968:	9809883a 	mov	r4,r19
    196c:	d9c03c15 	stw	r7,240(sp)
    1970:	0007ca80 	call	7ca8 <__sprint_r>
    1974:	d9c03c17 	ldw	r7,240(sp)
    1978:	103bd71e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    197c:	d8c02017 	ldw	r3,128(sp)
    1980:	dc401f17 	ldw	r17,124(sp)
    1984:	dd800404 	addi	r22,sp,16
    1988:	003fec06 	br	193c <___vfprintf_internal_r+0x1474>
    198c:	9080100c 	andi	r2,r18,64
    1990:	d8002785 	stb	zero,158(sp)
    1994:	10010e26 	beq	r2,zero,1dd0 <___vfprintf_internal_r+0x1908>
    1998:	d9402e17 	ldw	r5,184(sp)
    199c:	d8c02a17 	ldw	r3,168(sp)
    19a0:	002d883a 	mov	r22,zero
    19a4:	28800104 	addi	r2,r5,4
    19a8:	2cc0000b 	ldhu	r19,0(r5)
    19ac:	183fc90e 	bge	r3,zero,18d4 <___vfprintf_internal_r+0x140c>
    19b0:	d8802e15 	stw	r2,184(sp)
    19b4:	0039883a 	mov	fp,zero
    19b8:	9d84b03a 	or	r2,r19,r22
    19bc:	103c1e1e 	bne	r2,zero,a38 <___vfprintf_internal_r+0x570>
    19c0:	00800044 	movi	r2,1
    19c4:	003e6c06 	br	1378 <___vfprintf_internal_r+0xeb0>
    19c8:	d9002d17 	ldw	r4,180(sp)
    19cc:	d9801e04 	addi	r6,sp,120
    19d0:	b80b883a 	mov	r5,r23
    19d4:	0007ca80 	call	7ca8 <__sprint_r>
    19d8:	103bbf1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    19dc:	d8c02017 	ldw	r3,128(sp)
    19e0:	da000404 	addi	r8,sp,16
    19e4:	d9003217 	ldw	r4,200(sp)
    19e8:	d8802617 	ldw	r2,152(sp)
    19ec:	d9403317 	ldw	r5,204(sp)
    19f0:	8123883a 	add	r17,r16,r4
    19f4:	11400216 	blt	r2,r5,1a00 <___vfprintf_internal_r+0x1538>
    19f8:	9100004c 	andi	r4,r18,1
    19fc:	20000d26 	beq	r4,zero,1a34 <___vfprintf_internal_r+0x156c>
    1a00:	d9003717 	ldw	r4,220(sp)
    1a04:	d9403417 	ldw	r5,208(sp)
    1a08:	1907883a 	add	r3,r3,r4
    1a0c:	d9001f17 	ldw	r4,124(sp)
    1a10:	41400015 	stw	r5,0(r8)
    1a14:	d9403717 	ldw	r5,220(sp)
    1a18:	21000044 	addi	r4,r4,1
    1a1c:	d8c02015 	stw	r3,128(sp)
    1a20:	41400115 	stw	r5,4(r8)
    1a24:	d9001f15 	stw	r4,124(sp)
    1a28:	014001c4 	movi	r5,7
    1a2c:	2901e816 	blt	r5,r4,21d0 <___vfprintf_internal_r+0x1d08>
    1a30:	42000204 	addi	r8,r8,8
    1a34:	d9003317 	ldw	r4,204(sp)
    1a38:	8121883a 	add	r16,r16,r4
    1a3c:	2085c83a 	sub	r2,r4,r2
    1a40:	8461c83a 	sub	r16,r16,r17
    1a44:	1400010e 	bge	r2,r16,1a4c <___vfprintf_internal_r+0x1584>
    1a48:	1021883a 	mov	r16,r2
    1a4c:	04000a0e 	bge	zero,r16,1a78 <___vfprintf_internal_r+0x15b0>
    1a50:	d9001f17 	ldw	r4,124(sp)
    1a54:	1c07883a 	add	r3,r3,r16
    1a58:	44400015 	stw	r17,0(r8)
    1a5c:	21000044 	addi	r4,r4,1
    1a60:	44000115 	stw	r16,4(r8)
    1a64:	d8c02015 	stw	r3,128(sp)
    1a68:	d9001f15 	stw	r4,124(sp)
    1a6c:	014001c4 	movi	r5,7
    1a70:	2901fb16 	blt	r5,r4,2260 <___vfprintf_internal_r+0x1d98>
    1a74:	42000204 	addi	r8,r8,8
    1a78:	8001f716 	blt	r16,zero,2258 <___vfprintf_internal_r+0x1d90>
    1a7c:	1421c83a 	sub	r16,r2,r16
    1a80:	043d160e 	bge	zero,r16,edc <___vfprintf_internal_r+0xa14>
    1a84:	04400404 	movi	r17,16
    1a88:	d8801f17 	ldw	r2,124(sp)
    1a8c:	8c3efb0e 	bge	r17,r16,167c <___vfprintf_internal_r+0x11b4>
    1a90:	01410034 	movhi	r5,1024
    1a94:	29401e84 	addi	r5,r5,122
    1a98:	d9402c15 	stw	r5,176(sp)
    1a9c:	058001c4 	movi	r22,7
    1aa0:	dcc02d17 	ldw	r19,180(sp)
    1aa4:	00000306 	br	1ab4 <___vfprintf_internal_r+0x15ec>
    1aa8:	42000204 	addi	r8,r8,8
    1aac:	843ffc04 	addi	r16,r16,-16
    1ab0:	8c3ef50e 	bge	r17,r16,1688 <___vfprintf_internal_r+0x11c0>
    1ab4:	18c00404 	addi	r3,r3,16
    1ab8:	10800044 	addi	r2,r2,1
    1abc:	45000015 	stw	r20,0(r8)
    1ac0:	44400115 	stw	r17,4(r8)
    1ac4:	d8c02015 	stw	r3,128(sp)
    1ac8:	d8801f15 	stw	r2,124(sp)
    1acc:	b0bff60e 	bge	r22,r2,1aa8 <___vfprintf_internal_r+0x15e0>
    1ad0:	d9801e04 	addi	r6,sp,120
    1ad4:	b80b883a 	mov	r5,r23
    1ad8:	9809883a 	mov	r4,r19
    1adc:	0007ca80 	call	7ca8 <__sprint_r>
    1ae0:	103b7d1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1ae4:	d8c02017 	ldw	r3,128(sp)
    1ae8:	d8801f17 	ldw	r2,124(sp)
    1aec:	da000404 	addi	r8,sp,16
    1af0:	003fee06 	br	1aac <___vfprintf_internal_r+0x15e4>
    1af4:	9088703a 	and	r4,r18,r2
    1af8:	203eab1e 	bne	r4,zero,15a8 <___vfprintf_internal_r+0x10e0>
    1afc:	dc401f17 	ldw	r17,124(sp)
    1b00:	40800115 	stw	r2,4(r8)
    1b04:	44000015 	stw	r16,0(r8)
    1b08:	8c400044 	addi	r17,r17,1
    1b0c:	d8c02015 	stw	r3,128(sp)
    1b10:	dc401f15 	stw	r17,124(sp)
    1b14:	008001c4 	movi	r2,7
    1b18:	14400e16 	blt	r2,r17,1b54 <___vfprintf_internal_r+0x168c>
    1b1c:	45800204 	addi	r22,r8,8
    1b20:	003eca06 	br	164c <___vfprintf_internal_r+0x1184>
    1b24:	01010034 	movhi	r4,1024
    1b28:	21001e84 	addi	r4,r4,122
    1b2c:	d9002c15 	stw	r4,176(sp)
    1b30:	d8802c17 	ldw	r2,176(sp)
    1b34:	1c07883a 	add	r3,r3,r16
    1b38:	8c400044 	addi	r17,r17,1
    1b3c:	b0800015 	stw	r2,0(r22)
    1b40:	b4000115 	stw	r16,4(r22)
    1b44:	d8c02015 	stw	r3,128(sp)
    1b48:	dc401f15 	stw	r17,124(sp)
    1b4c:	008001c4 	movi	r2,7
    1b50:	147ebd0e 	bge	r2,r17,1648 <___vfprintf_internal_r+0x1180>
    1b54:	d9002d17 	ldw	r4,180(sp)
    1b58:	d9801e04 	addi	r6,sp,120
    1b5c:	b80b883a 	mov	r5,r23
    1b60:	0007ca80 	call	7ca8 <__sprint_r>
    1b64:	103b5c1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1b68:	d8c02017 	ldw	r3,128(sp)
    1b6c:	dc401f17 	ldw	r17,124(sp)
    1b70:	dd800404 	addi	r22,sp,16
    1b74:	003eb506 	br	164c <___vfprintf_internal_r+0x1184>
    1b78:	d9002d17 	ldw	r4,180(sp)
    1b7c:	d9801e04 	addi	r6,sp,120
    1b80:	b80b883a 	mov	r5,r23
    1b84:	0007ca80 	call	7ca8 <__sprint_r>
    1b88:	103b531e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1b8c:	d8c02017 	ldw	r3,128(sp)
    1b90:	dc401f17 	ldw	r17,124(sp)
    1b94:	da000404 	addi	r8,sp,16
    1b98:	003e8d06 	br	15d0 <___vfprintf_internal_r+0x1108>
    1b9c:	d9002d17 	ldw	r4,180(sp)
    1ba0:	d9801e04 	addi	r6,sp,120
    1ba4:	b80b883a 	mov	r5,r23
    1ba8:	0007ca80 	call	7ca8 <__sprint_r>
    1bac:	103b4a1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1bb0:	d8c02017 	ldw	r3,128(sp)
    1bb4:	dc401f17 	ldw	r17,124(sp)
    1bb8:	dd800404 	addi	r22,sp,16
    1bbc:	003e8f06 	br	15fc <___vfprintf_internal_r+0x1134>
    1bc0:	0027883a 	mov	r19,zero
    1bc4:	003f4a06 	br	18f0 <___vfprintf_internal_r+0x1428>
    1bc8:	d9002d17 	ldw	r4,180(sp)
    1bcc:	d9801e04 	addi	r6,sp,120
    1bd0:	b80b883a 	mov	r5,r23
    1bd4:	0007ca80 	call	7ca8 <__sprint_r>
    1bd8:	103b3f1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1bdc:	d8c02017 	ldw	r3,128(sp)
    1be0:	da000404 	addi	r8,sp,16
    1be4:	003c7b06 	br	dd4 <___vfprintf_internal_r+0x90c>
    1be8:	d9402a17 	ldw	r5,168(sp)
    1bec:	04e7c83a 	sub	r19,zero,r19
    1bf0:	07000b44 	movi	fp,45
    1bf4:	9804c03a 	cmpne	r2,r19,zero
    1bf8:	05adc83a 	sub	r22,zero,r22
    1bfc:	df002785 	stb	fp,158(sp)
    1c00:	b0adc83a 	sub	r22,r22,r2
    1c04:	28017b16 	blt	r5,zero,21f4 <___vfprintf_internal_r+0x1d2c>
    1c08:	00bfdfc4 	movi	r2,-129
    1c0c:	90a4703a 	and	r18,r18,r2
    1c10:	003b8906 	br	a38 <___vfprintf_internal_r+0x570>
    1c14:	d9003617 	ldw	r4,216(sp)
    1c18:	d9403817 	ldw	r5,224(sp)
    1c1c:	da003d15 	stw	r8,244(sp)
    1c20:	00078cc0 	call	78cc <__fpclassifyd>
    1c24:	da003d17 	ldw	r8,244(sp)
    1c28:	1000f026 	beq	r2,zero,1fec <___vfprintf_internal_r+0x1b24>
    1c2c:	d9002a17 	ldw	r4,168(sp)
    1c30:	05bff7c4 	movi	r22,-33
    1c34:	00bfffc4 	movi	r2,-1
    1c38:	8dac703a 	and	r22,r17,r22
    1c3c:	20820026 	beq	r4,r2,2440 <___vfprintf_internal_r+0x1f78>
    1c40:	008011c4 	movi	r2,71
    1c44:	b081f726 	beq	r22,r2,2424 <___vfprintf_internal_r+0x1f5c>
    1c48:	d9003817 	ldw	r4,224(sp)
    1c4c:	90c04014 	ori	r3,r18,256
    1c50:	d8c02c15 	stw	r3,176(sp)
    1c54:	20021516 	blt	r4,zero,24ac <___vfprintf_internal_r+0x1fe4>
    1c58:	dcc03817 	ldw	r19,224(sp)
    1c5c:	d8002905 	stb	zero,164(sp)
    1c60:	00801984 	movi	r2,102
    1c64:	8881f926 	beq	r17,r2,244c <___vfprintf_internal_r+0x1f84>
    1c68:	00801184 	movi	r2,70
    1c6c:	88821c26 	beq	r17,r2,24e0 <___vfprintf_internal_r+0x2018>
    1c70:	00801144 	movi	r2,69
    1c74:	b081ef26 	beq	r22,r2,2434 <___vfprintf_internal_r+0x1f6c>
    1c78:	d8c02a17 	ldw	r3,168(sp)
    1c7c:	d8802104 	addi	r2,sp,132
    1c80:	d8800315 	stw	r2,12(sp)
    1c84:	d9403617 	ldw	r5,216(sp)
    1c88:	d8802504 	addi	r2,sp,148
    1c8c:	d9002d17 	ldw	r4,180(sp)
    1c90:	d8800215 	stw	r2,8(sp)
    1c94:	d8802604 	addi	r2,sp,152
    1c98:	d8c00015 	stw	r3,0(sp)
    1c9c:	d8800115 	stw	r2,4(sp)
    1ca0:	01c00084 	movi	r7,2
    1ca4:	980d883a 	mov	r6,r19
    1ca8:	d8c03c15 	stw	r3,240(sp)
    1cac:	da003d15 	stw	r8,244(sp)
    1cb0:	0002bf80 	call	2bf8 <_dtoa_r>
    1cb4:	1021883a 	mov	r16,r2
    1cb8:	008019c4 	movi	r2,103
    1cbc:	d8c03c17 	ldw	r3,240(sp)
    1cc0:	da003d17 	ldw	r8,244(sp)
    1cc4:	88817126 	beq	r17,r2,228c <___vfprintf_internal_r+0x1dc4>
    1cc8:	008011c4 	movi	r2,71
    1ccc:	88829126 	beq	r17,r2,2714 <___vfprintf_internal_r+0x224c>
    1cd0:	80f9883a 	add	fp,r16,r3
    1cd4:	d9003617 	ldw	r4,216(sp)
    1cd8:	000d883a 	mov	r6,zero
    1cdc:	000f883a 	mov	r7,zero
    1ce0:	980b883a 	mov	r5,r19
    1ce4:	da003d15 	stw	r8,244(sp)
    1ce8:	000bc080 	call	bc08 <__eqdf2>
    1cec:	da003d17 	ldw	r8,244(sp)
    1cf0:	10018d26 	beq	r2,zero,2328 <___vfprintf_internal_r+0x1e60>
    1cf4:	d8802117 	ldw	r2,132(sp)
    1cf8:	1700062e 	bgeu	r2,fp,1d14 <___vfprintf_internal_r+0x184c>
    1cfc:	01000c04 	movi	r4,48
    1d00:	10c00044 	addi	r3,r2,1
    1d04:	d8c02115 	stw	r3,132(sp)
    1d08:	11000005 	stb	r4,0(r2)
    1d0c:	d8802117 	ldw	r2,132(sp)
    1d10:	173ffb36 	bltu	r2,fp,1d00 <___vfprintf_internal_r+0x1838>
    1d14:	1405c83a 	sub	r2,r2,r16
    1d18:	d8803315 	stw	r2,204(sp)
    1d1c:	008011c4 	movi	r2,71
    1d20:	b0817626 	beq	r22,r2,22fc <___vfprintf_internal_r+0x1e34>
    1d24:	00801944 	movi	r2,101
    1d28:	1442800e 	bge	r2,r17,272c <___vfprintf_internal_r+0x2264>
    1d2c:	d8c02617 	ldw	r3,152(sp)
    1d30:	00801984 	movi	r2,102
    1d34:	d8c03215 	stw	r3,200(sp)
    1d38:	8881fe26 	beq	r17,r2,2534 <___vfprintf_internal_r+0x206c>
    1d3c:	d8c03217 	ldw	r3,200(sp)
    1d40:	d9003317 	ldw	r4,204(sp)
    1d44:	1901dd16 	blt	r3,r4,24bc <___vfprintf_internal_r+0x1ff4>
    1d48:	9480004c 	andi	r18,r18,1
    1d4c:	90022b1e 	bne	r18,zero,25fc <___vfprintf_internal_r+0x2134>
    1d50:	1805883a 	mov	r2,r3
    1d54:	18028316 	blt	r3,zero,2764 <___vfprintf_internal_r+0x229c>
    1d58:	d8c03217 	ldw	r3,200(sp)
    1d5c:	044019c4 	movi	r17,103
    1d60:	d8c02b15 	stw	r3,172(sp)
    1d64:	df002907 	ldb	fp,164(sp)
    1d68:	e001531e 	bne	fp,zero,22b8 <___vfprintf_internal_r+0x1df0>
    1d6c:	df002783 	ldbu	fp,158(sp)
    1d70:	d8802915 	stw	r2,164(sp)
    1d74:	dc802c17 	ldw	r18,176(sp)
    1d78:	d8002a15 	stw	zero,168(sp)
    1d7c:	003baf06 	br	c3c <___vfprintf_internal_r+0x774>
    1d80:	d8c02e17 	ldw	r3,184(sp)
    1d84:	d9002e17 	ldw	r4,184(sp)
    1d88:	d9402e17 	ldw	r5,184(sp)
    1d8c:	18c00017 	ldw	r3,0(r3)
    1d90:	21000117 	ldw	r4,4(r4)
    1d94:	29400204 	addi	r5,r5,8
    1d98:	d8c03615 	stw	r3,216(sp)
    1d9c:	d9003815 	stw	r4,224(sp)
    1da0:	d9402e15 	stw	r5,184(sp)
    1da4:	003b5006 	br	ae8 <___vfprintf_internal_r+0x620>
    1da8:	ac400007 	ldb	r17,0(r21)
    1dac:	003a2806 	br	650 <___vfprintf_internal_r+0x188>
    1db0:	9080100c 	andi	r2,r18,64
    1db4:	1000a826 	beq	r2,zero,2058 <___vfprintf_internal_r+0x1b90>
    1db8:	d8c02e17 	ldw	r3,184(sp)
    1dbc:	002d883a 	mov	r22,zero
    1dc0:	1cc0000b 	ldhu	r19,0(r3)
    1dc4:	18c00104 	addi	r3,r3,4
    1dc8:	d8c02e15 	stw	r3,184(sp)
    1dcc:	003caf06 	br	108c <___vfprintf_internal_r+0xbc4>
    1dd0:	d9002e17 	ldw	r4,184(sp)
    1dd4:	d9402a17 	ldw	r5,168(sp)
    1dd8:	002d883a 	mov	r22,zero
    1ddc:	20800104 	addi	r2,r4,4
    1de0:	24c00017 	ldw	r19,0(r4)
    1de4:	283ebb0e 	bge	r5,zero,18d4 <___vfprintf_internal_r+0x140c>
    1de8:	003ef106 	br	19b0 <___vfprintf_internal_r+0x14e8>
    1dec:	9080040c 	andi	r2,r18,16
    1df0:	1000921e 	bne	r2,zero,203c <___vfprintf_internal_r+0x1b74>
    1df4:	9480100c 	andi	r18,r18,64
    1df8:	90013926 	beq	r18,zero,22e0 <___vfprintf_internal_r+0x1e18>
    1dfc:	d9402e17 	ldw	r5,184(sp)
    1e00:	d8c02f17 	ldw	r3,188(sp)
    1e04:	28800017 	ldw	r2,0(r5)
    1e08:	29400104 	addi	r5,r5,4
    1e0c:	d9402e15 	stw	r5,184(sp)
    1e10:	10c0000d 	sth	r3,0(r2)
    1e14:	0039e406 	br	5a8 <___vfprintf_internal_r+0xe0>
    1e18:	9080100c 	andi	r2,r18,64
    1e1c:	10008026 	beq	r2,zero,2020 <___vfprintf_internal_r+0x1b58>
    1e20:	d8802e17 	ldw	r2,184(sp)
    1e24:	14c0000f 	ldh	r19,0(r2)
    1e28:	10800104 	addi	r2,r2,4
    1e2c:	d8802e15 	stw	r2,184(sp)
    1e30:	982dd7fa 	srai	r22,r19,31
    1e34:	b005883a 	mov	r2,r22
    1e38:	003af706 	br	a18 <___vfprintf_internal_r+0x550>
    1e3c:	9080100c 	andi	r2,r18,64
    1e40:	d8002785 	stb	zero,158(sp)
    1e44:	10008a1e 	bne	r2,zero,2070 <___vfprintf_internal_r+0x1ba8>
    1e48:	d9002e17 	ldw	r4,184(sp)
    1e4c:	d9402a17 	ldw	r5,168(sp)
    1e50:	002d883a 	mov	r22,zero
    1e54:	20800104 	addi	r2,r4,4
    1e58:	24c00017 	ldw	r19,0(r4)
    1e5c:	283e4b0e 	bge	r5,zero,178c <___vfprintf_internal_r+0x12c4>
    1e60:	9d86b03a 	or	r3,r19,r22
    1e64:	d8802e15 	stw	r2,184(sp)
    1e68:	183e4c1e 	bne	r3,zero,179c <___vfprintf_internal_r+0x12d4>
    1e6c:	0039883a 	mov	fp,zero
    1e70:	0005883a 	mov	r2,zero
    1e74:	003d4006 	br	1378 <___vfprintf_internal_r+0xeb0>
    1e78:	01410034 	movhi	r5,1024
    1e7c:	29401e84 	addi	r5,r5,122
    1e80:	d9402c15 	stw	r5,176(sp)
    1e84:	d9402c17 	ldw	r5,176(sp)
    1e88:	1c47883a 	add	r3,r3,r17
    1e8c:	10800044 	addi	r2,r2,1
    1e90:	41400015 	stw	r5,0(r8)
    1e94:	44400115 	stw	r17,4(r8)
    1e98:	d8c02015 	stw	r3,128(sp)
    1e9c:	d8801f15 	stw	r2,124(sp)
    1ea0:	010001c4 	movi	r4,7
    1ea4:	20bec816 	blt	r4,r2,19c8 <___vfprintf_internal_r+0x1500>
    1ea8:	42000204 	addi	r8,r8,8
    1eac:	003ecd06 	br	19e4 <___vfprintf_internal_r+0x151c>
    1eb0:	d9002a17 	ldw	r4,168(sp)
    1eb4:	d8002785 	stb	zero,158(sp)
    1eb8:	203d2d16 	blt	r4,zero,1370 <___vfprintf_internal_r+0xea8>
    1ebc:	00bfdfc4 	movi	r2,-129
    1ec0:	90a4703a 	and	r18,r18,r2
    1ec4:	003a6106 	br	84c <___vfprintf_internal_r+0x384>
    1ec8:	01010034 	movhi	r4,1024
    1ecc:	21001e84 	addi	r4,r4,122
    1ed0:	d9002c15 	stw	r4,176(sp)
    1ed4:	003bea06 	br	e80 <___vfprintf_internal_r+0x9b8>
    1ed8:	d9002d17 	ldw	r4,180(sp)
    1edc:	d9801e04 	addi	r6,sp,120
    1ee0:	b80b883a 	mov	r5,r23
    1ee4:	0007ca80 	call	7ca8 <__sprint_r>
    1ee8:	103a7b1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1eec:	d8c02017 	ldw	r3,128(sp)
    1ef0:	da000404 	addi	r8,sp,16
    1ef4:	003d4106 	br	13fc <___vfprintf_internal_r+0xf34>
    1ef8:	d8801f17 	ldw	r2,124(sp)
    1efc:	01410034 	movhi	r5,1024
    1f00:	01000044 	movi	r4,1
    1f04:	18c00044 	addi	r3,r3,1
    1f08:	10800044 	addi	r2,r2,1
    1f0c:	29401e04 	addi	r5,r5,120
    1f10:	41000115 	stw	r4,4(r8)
    1f14:	41400015 	stw	r5,0(r8)
    1f18:	d8c02015 	stw	r3,128(sp)
    1f1c:	d8801f15 	stw	r2,124(sp)
    1f20:	010001c4 	movi	r4,7
    1f24:	20805c16 	blt	r4,r2,2098 <___vfprintf_internal_r+0x1bd0>
    1f28:	42000204 	addi	r8,r8,8
    1f2c:	8800041e 	bne	r17,zero,1f40 <___vfprintf_internal_r+0x1a78>
    1f30:	d8803317 	ldw	r2,204(sp)
    1f34:	1000021e 	bne	r2,zero,1f40 <___vfprintf_internal_r+0x1a78>
    1f38:	9080004c 	andi	r2,r18,1
    1f3c:	103be726 	beq	r2,zero,edc <___vfprintf_internal_r+0xa14>
    1f40:	d9003717 	ldw	r4,220(sp)
    1f44:	d8801f17 	ldw	r2,124(sp)
    1f48:	d9403417 	ldw	r5,208(sp)
    1f4c:	20c7883a 	add	r3,r4,r3
    1f50:	10800044 	addi	r2,r2,1
    1f54:	41000115 	stw	r4,4(r8)
    1f58:	41400015 	stw	r5,0(r8)
    1f5c:	d8c02015 	stw	r3,128(sp)
    1f60:	d8801f15 	stw	r2,124(sp)
    1f64:	010001c4 	movi	r4,7
    1f68:	20812116 	blt	r4,r2,23f0 <___vfprintf_internal_r+0x1f28>
    1f6c:	42000204 	addi	r8,r8,8
    1f70:	0463c83a 	sub	r17,zero,r17
    1f74:	0440730e 	bge	zero,r17,2144 <___vfprintf_internal_r+0x1c7c>
    1f78:	05800404 	movi	r22,16
    1f7c:	b440860e 	bge	r22,r17,2198 <___vfprintf_internal_r+0x1cd0>
    1f80:	01410034 	movhi	r5,1024
    1f84:	29401e84 	addi	r5,r5,122
    1f88:	d9402c15 	stw	r5,176(sp)
    1f8c:	070001c4 	movi	fp,7
    1f90:	dcc02d17 	ldw	r19,180(sp)
    1f94:	00000306 	br	1fa4 <___vfprintf_internal_r+0x1adc>
    1f98:	42000204 	addi	r8,r8,8
    1f9c:	8c7ffc04 	addi	r17,r17,-16
    1fa0:	b440800e 	bge	r22,r17,21a4 <___vfprintf_internal_r+0x1cdc>
    1fa4:	18c00404 	addi	r3,r3,16
    1fa8:	10800044 	addi	r2,r2,1
    1fac:	45000015 	stw	r20,0(r8)
    1fb0:	45800115 	stw	r22,4(r8)
    1fb4:	d8c02015 	stw	r3,128(sp)
    1fb8:	d8801f15 	stw	r2,124(sp)
    1fbc:	e0bff60e 	bge	fp,r2,1f98 <___vfprintf_internal_r+0x1ad0>
    1fc0:	d9801e04 	addi	r6,sp,120
    1fc4:	b80b883a 	mov	r5,r23
    1fc8:	9809883a 	mov	r4,r19
    1fcc:	0007ca80 	call	7ca8 <__sprint_r>
    1fd0:	103a411e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    1fd4:	d8c02017 	ldw	r3,128(sp)
    1fd8:	d8801f17 	ldw	r2,124(sp)
    1fdc:	da000404 	addi	r8,sp,16
    1fe0:	003fee06 	br	1f9c <___vfprintf_internal_r+0x1ad4>
    1fe4:	00bfffc4 	movi	r2,-1
    1fe8:	003a3f06 	br	8e8 <___vfprintf_internal_r+0x420>
    1fec:	008011c4 	movi	r2,71
    1ff0:	1440b816 	blt	r2,r17,22d4 <___vfprintf_internal_r+0x1e0c>
    1ff4:	04010034 	movhi	r16,1024
    1ff8:	84001004 	addi	r16,r16,64
    1ffc:	00c000c4 	movi	r3,3
    2000:	00bfdfc4 	movi	r2,-129
    2004:	d8c02915 	stw	r3,164(sp)
    2008:	90a4703a 	and	r18,r18,r2
    200c:	df002783 	ldbu	fp,158(sp)
    2010:	d8c02b15 	stw	r3,172(sp)
    2014:	d8002a15 	stw	zero,168(sp)
    2018:	d8003215 	stw	zero,200(sp)
    201c:	003b0706 	br	c3c <___vfprintf_internal_r+0x774>
    2020:	d8c02e17 	ldw	r3,184(sp)
    2024:	1cc00017 	ldw	r19,0(r3)
    2028:	18c00104 	addi	r3,r3,4
    202c:	d8c02e15 	stw	r3,184(sp)
    2030:	982dd7fa 	srai	r22,r19,31
    2034:	b005883a 	mov	r2,r22
    2038:	003a7706 	br	a18 <___vfprintf_internal_r+0x550>
    203c:	d8c02e17 	ldw	r3,184(sp)
    2040:	d9002f17 	ldw	r4,188(sp)
    2044:	18800017 	ldw	r2,0(r3)
    2048:	18c00104 	addi	r3,r3,4
    204c:	d8c02e15 	stw	r3,184(sp)
    2050:	11000015 	stw	r4,0(r2)
    2054:	00395406 	br	5a8 <___vfprintf_internal_r+0xe0>
    2058:	d9002e17 	ldw	r4,184(sp)
    205c:	002d883a 	mov	r22,zero
    2060:	24c00017 	ldw	r19,0(r4)
    2064:	21000104 	addi	r4,r4,4
    2068:	d9002e15 	stw	r4,184(sp)
    206c:	003c0706 	br	108c <___vfprintf_internal_r+0xbc4>
    2070:	d9402e17 	ldw	r5,184(sp)
    2074:	d8c02a17 	ldw	r3,168(sp)
    2078:	002d883a 	mov	r22,zero
    207c:	28800104 	addi	r2,r5,4
    2080:	2cc0000b 	ldhu	r19,0(r5)
    2084:	183dc10e 	bge	r3,zero,178c <___vfprintf_internal_r+0x12c4>
    2088:	003f7506 	br	1e60 <___vfprintf_internal_r+0x1998>
    208c:	04010034 	movhi	r16,1024
    2090:	84000e04 	addi	r16,r16,56
    2094:	003aa706 	br	b34 <___vfprintf_internal_r+0x66c>
    2098:	d9002d17 	ldw	r4,180(sp)
    209c:	d9801e04 	addi	r6,sp,120
    20a0:	b80b883a 	mov	r5,r23
    20a4:	0007ca80 	call	7ca8 <__sprint_r>
    20a8:	103a0b1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    20ac:	dc402617 	ldw	r17,152(sp)
    20b0:	d8c02017 	ldw	r3,128(sp)
    20b4:	da000404 	addi	r8,sp,16
    20b8:	003f9c06 	br	1f2c <___vfprintf_internal_r+0x1a64>
    20bc:	ac400043 	ldbu	r17,1(r21)
    20c0:	84000814 	ori	r16,r16,32
    20c4:	ad400044 	addi	r21,r21,1
    20c8:	8c403fcc 	andi	r17,r17,255
    20cc:	8c40201c 	xori	r17,r17,128
    20d0:	8c7fe004 	addi	r17,r17,-128
    20d4:	00395e06 	br	650 <___vfprintf_internal_r+0x188>
    20d8:	d8c02e15 	stw	r3,184(sp)
    20dc:	0039883a 	mov	fp,zero
    20e0:	003e3506 	br	19b8 <___vfprintf_internal_r+0x14f0>
    20e4:	d9002d17 	ldw	r4,180(sp)
    20e8:	d9801e04 	addi	r6,sp,120
    20ec:	b80b883a 	mov	r5,r23
    20f0:	0007ca80 	call	7ca8 <__sprint_r>
    20f4:	1039f81e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    20f8:	d8c02017 	ldw	r3,128(sp)
    20fc:	da000404 	addi	r8,sp,16
    2100:	003cd006 	br	1444 <___vfprintf_internal_r+0xf7c>
    2104:	8009883a 	mov	r4,r16
    2108:	df003d15 	stw	fp,244(sp)
    210c:	00004300 	call	430 <strlen>
    2110:	d8802b15 	stw	r2,172(sp)
    2114:	da003d17 	ldw	r8,244(sp)
    2118:	103c200e 	bge	r2,zero,119c <___vfprintf_internal_r+0xcd4>
    211c:	0005883a 	mov	r2,zero
    2120:	003c1e06 	br	119c <___vfprintf_internal_r+0xcd4>
    2124:	d9002d17 	ldw	r4,180(sp)
    2128:	d9801e04 	addi	r6,sp,120
    212c:	b80b883a 	mov	r5,r23
    2130:	0007ca80 	call	7ca8 <__sprint_r>
    2134:	1039e81e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    2138:	d8c02017 	ldw	r3,128(sp)
    213c:	d8801f17 	ldw	r2,124(sp)
    2140:	da000404 	addi	r8,sp,16
    2144:	d9403317 	ldw	r5,204(sp)
    2148:	10800044 	addi	r2,r2,1
    214c:	44000015 	stw	r16,0(r8)
    2150:	28c7883a 	add	r3,r5,r3
    2154:	003b5b06 	br	ec4 <___vfprintf_internal_r+0x9fc>
    2158:	01010034 	movhi	r4,1024
    215c:	21002284 	addi	r4,r4,138
    2160:	d9003515 	stw	r4,212(sp)
    2164:	003af206 	br	d30 <___vfprintf_internal_r+0x868>
    2168:	013fffc4 	movi	r4,-1
    216c:	003a0806 	br	990 <___vfprintf_internal_r+0x4c8>
    2170:	0023883a 	mov	r17,zero
    2174:	003d9d06 	br	17ec <___vfprintf_internal_r+0x1324>
    2178:	d9002d17 	ldw	r4,180(sp)
    217c:	d9801e04 	addi	r6,sp,120
    2180:	b80b883a 	mov	r5,r23
    2184:	0007ca80 	call	7ca8 <__sprint_r>
    2188:	1039d31e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    218c:	d8c02017 	ldw	r3,128(sp)
    2190:	da000404 	addi	r8,sp,16
    2194:	003d9406 	br	17e8 <___vfprintf_internal_r+0x1320>
    2198:	01010034 	movhi	r4,1024
    219c:	21001e84 	addi	r4,r4,122
    21a0:	d9002c15 	stw	r4,176(sp)
    21a4:	d9002c17 	ldw	r4,176(sp)
    21a8:	1c47883a 	add	r3,r3,r17
    21ac:	10800044 	addi	r2,r2,1
    21b0:	41000015 	stw	r4,0(r8)
    21b4:	44400115 	stw	r17,4(r8)
    21b8:	d8c02015 	stw	r3,128(sp)
    21bc:	d8801f15 	stw	r2,124(sp)
    21c0:	010001c4 	movi	r4,7
    21c4:	20bfd716 	blt	r4,r2,2124 <___vfprintf_internal_r+0x1c5c>
    21c8:	42000204 	addi	r8,r8,8
    21cc:	003fdd06 	br	2144 <___vfprintf_internal_r+0x1c7c>
    21d0:	d9002d17 	ldw	r4,180(sp)
    21d4:	d9801e04 	addi	r6,sp,120
    21d8:	b80b883a 	mov	r5,r23
    21dc:	0007ca80 	call	7ca8 <__sprint_r>
    21e0:	1039bd1e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    21e4:	d8802617 	ldw	r2,152(sp)
    21e8:	d8c02017 	ldw	r3,128(sp)
    21ec:	da000404 	addi	r8,sp,16
    21f0:	003e1006 	br	1a34 <___vfprintf_internal_r+0x156c>
    21f4:	00800044 	movi	r2,1
    21f8:	10803fcc 	andi	r2,r2,255
    21fc:	00c00044 	movi	r3,1
    2200:	10fa0d26 	beq	r2,r3,a38 <___vfprintf_internal_r+0x570>
    2204:	00c00084 	movi	r3,2
    2208:	10fbaf26 	beq	r2,r3,10c8 <___vfprintf_internal_r+0xc00>
    220c:	003a6d06 	br	bc4 <___vfprintf_internal_r+0x6fc>
    2210:	01010034 	movhi	r4,1024
    2214:	21002284 	addi	r4,r4,138
    2218:	d9003515 	stw	r4,212(sp)
    221c:	003b5406 	br	f70 <___vfprintf_internal_r+0xaa8>
    2220:	d8802a17 	ldw	r2,168(sp)
    2224:	00c00184 	movi	r3,6
    2228:	1880012e 	bgeu	r3,r2,2230 <___vfprintf_internal_r+0x1d68>
    222c:	1805883a 	mov	r2,r3
    2230:	d8802b15 	stw	r2,172(sp)
    2234:	1000ef16 	blt	r2,zero,25f4 <___vfprintf_internal_r+0x212c>
    2238:	04010034 	movhi	r16,1024
    223c:	d8802915 	stw	r2,164(sp)
    2240:	dcc02e15 	stw	r19,184(sp)
    2244:	d8002a15 	stw	zero,168(sp)
    2248:	d8003215 	stw	zero,200(sp)
    224c:	84001c04 	addi	r16,r16,112
    2250:	0039883a 	mov	fp,zero
    2254:	003a8006 	br	c58 <___vfprintf_internal_r+0x790>
    2258:	0021883a 	mov	r16,zero
    225c:	003e0706 	br	1a7c <___vfprintf_internal_r+0x15b4>
    2260:	d9002d17 	ldw	r4,180(sp)
    2264:	d9801e04 	addi	r6,sp,120
    2268:	b80b883a 	mov	r5,r23
    226c:	0007ca80 	call	7ca8 <__sprint_r>
    2270:	1039991e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    2274:	d8802617 	ldw	r2,152(sp)
    2278:	d9403317 	ldw	r5,204(sp)
    227c:	d8c02017 	ldw	r3,128(sp)
    2280:	da000404 	addi	r8,sp,16
    2284:	2885c83a 	sub	r2,r5,r2
    2288:	003dfb06 	br	1a78 <___vfprintf_internal_r+0x15b0>
    228c:	9080004c 	andi	r2,r18,1
    2290:	103e8f1e 	bne	r2,zero,1cd0 <___vfprintf_internal_r+0x1808>
    2294:	d8802117 	ldw	r2,132(sp)
    2298:	003e9e06 	br	1d14 <___vfprintf_internal_r+0x184c>
    229c:	1025883a 	mov	r18,r2
    22a0:	0039883a 	mov	fp,zero
    22a4:	00800084 	movi	r2,2
    22a8:	003fd306 	br	21f8 <___vfprintf_internal_r+0x1d30>
    22ac:	07000b44 	movi	fp,45
    22b0:	df002785 	stb	fp,158(sp)
    22b4:	003a1b06 	br	b24 <___vfprintf_internal_r+0x65c>
    22b8:	00c00b44 	movi	r3,45
    22bc:	d8c02785 	stb	r3,158(sp)
    22c0:	d8802915 	stw	r2,164(sp)
    22c4:	dc802c17 	ldw	r18,176(sp)
    22c8:	d8002a15 	stw	zero,168(sp)
    22cc:	07000b44 	movi	fp,45
    22d0:	003a5e06 	br	c4c <___vfprintf_internal_r+0x784>
    22d4:	04010034 	movhi	r16,1024
    22d8:	84001104 	addi	r16,r16,68
    22dc:	003f4706 	br	1ffc <___vfprintf_internal_r+0x1b34>
    22e0:	d9002e17 	ldw	r4,184(sp)
    22e4:	d9402f17 	ldw	r5,188(sp)
    22e8:	20800017 	ldw	r2,0(r4)
    22ec:	21000104 	addi	r4,r4,4
    22f0:	d9002e15 	stw	r4,184(sp)
    22f4:	11400015 	stw	r5,0(r2)
    22f8:	0038ab06 	br	5a8 <___vfprintf_internal_r+0xe0>
    22fc:	dd802617 	ldw	r22,152(sp)
    2300:	00bfff44 	movi	r2,-3
    2304:	b0801c16 	blt	r22,r2,2378 <___vfprintf_internal_r+0x1eb0>
    2308:	d9402a17 	ldw	r5,168(sp)
    230c:	2d801a16 	blt	r5,r22,2378 <___vfprintf_internal_r+0x1eb0>
    2310:	dd803215 	stw	r22,200(sp)
    2314:	003e8906 	br	1d3c <___vfprintf_internal_r+0x1874>
    2318:	01010034 	movhi	r4,1024
    231c:	21001e84 	addi	r4,r4,122
    2320:	d9002c15 	stw	r4,176(sp)
    2324:	003c9106 	br	156c <___vfprintf_internal_r+0x10a4>
    2328:	e005883a 	mov	r2,fp
    232c:	003e7906 	br	1d14 <___vfprintf_internal_r+0x184c>
    2330:	d9002a17 	ldw	r4,168(sp)
    2334:	df002783 	ldbu	fp,158(sp)
    2338:	dcc02e15 	stw	r19,184(sp)
    233c:	d9002915 	stw	r4,164(sp)
    2340:	d9002b15 	stw	r4,172(sp)
    2344:	d8002a15 	stw	zero,168(sp)
    2348:	d8003215 	stw	zero,200(sp)
    234c:	003a3b06 	br	c3c <___vfprintf_internal_r+0x774>
    2350:	9080004c 	andi	r2,r18,1
    2354:	0039883a 	mov	fp,zero
    2358:	10000426 	beq	r2,zero,236c <___vfprintf_internal_r+0x1ea4>
    235c:	00800c04 	movi	r2,48
    2360:	dc001dc4 	addi	r16,sp,119
    2364:	d8801dc5 	stb	r2,119(sp)
    2368:	003b6406 	br	10fc <___vfprintf_internal_r+0xc34>
    236c:	d8002b15 	stw	zero,172(sp)
    2370:	dc001e04 	addi	r16,sp,120
    2374:	003a2b06 	br	c24 <___vfprintf_internal_r+0x75c>
    2378:	8c7fff84 	addi	r17,r17,-2
    237c:	b5bfffc4 	addi	r22,r22,-1
    2380:	dd802615 	stw	r22,152(sp)
    2384:	dc4022c5 	stb	r17,139(sp)
    2388:	b000bf16 	blt	r22,zero,2688 <___vfprintf_internal_r+0x21c0>
    238c:	00800ac4 	movi	r2,43
    2390:	d8802305 	stb	r2,140(sp)
    2394:	00800244 	movi	r2,9
    2398:	15807016 	blt	r2,r22,255c <___vfprintf_internal_r+0x2094>
    239c:	00800c04 	movi	r2,48
    23a0:	b5800c04 	addi	r22,r22,48
    23a4:	d8802345 	stb	r2,141(sp)
    23a8:	dd802385 	stb	r22,142(sp)
    23ac:	d88023c4 	addi	r2,sp,143
    23b0:	df0022c4 	addi	fp,sp,139
    23b4:	d8c03317 	ldw	r3,204(sp)
    23b8:	1739c83a 	sub	fp,r2,fp
    23bc:	d9003317 	ldw	r4,204(sp)
    23c0:	e0c7883a 	add	r3,fp,r3
    23c4:	df003a15 	stw	fp,232(sp)
    23c8:	d8c02b15 	stw	r3,172(sp)
    23cc:	00800044 	movi	r2,1
    23d0:	1100b30e 	bge	r2,r4,26a0 <___vfprintf_internal_r+0x21d8>
    23d4:	d8c02b17 	ldw	r3,172(sp)
    23d8:	18c00044 	addi	r3,r3,1
    23dc:	d8c02b15 	stw	r3,172(sp)
    23e0:	1805883a 	mov	r2,r3
    23e4:	1800ac16 	blt	r3,zero,2698 <___vfprintf_internal_r+0x21d0>
    23e8:	d8003215 	stw	zero,200(sp)
    23ec:	003e5d06 	br	1d64 <___vfprintf_internal_r+0x189c>
    23f0:	d9002d17 	ldw	r4,180(sp)
    23f4:	d9801e04 	addi	r6,sp,120
    23f8:	b80b883a 	mov	r5,r23
    23fc:	0007ca80 	call	7ca8 <__sprint_r>
    2400:	1039351e 	bne	r2,zero,8d8 <___vfprintf_internal_r+0x410>
    2404:	dc402617 	ldw	r17,152(sp)
    2408:	d8c02017 	ldw	r3,128(sp)
    240c:	d8801f17 	ldw	r2,124(sp)
    2410:	da000404 	addi	r8,sp,16
    2414:	003ed606 	br	1f70 <___vfprintf_internal_r+0x1aa8>
    2418:	182b883a 	mov	r21,r3
    241c:	d8002a15 	stw	zero,168(sp)
    2420:	00388c06 	br	654 <___vfprintf_internal_r+0x18c>
    2424:	d8802a17 	ldw	r2,168(sp)
    2428:	103e071e 	bne	r2,zero,1c48 <___vfprintf_internal_r+0x1780>
    242c:	dc002a15 	stw	r16,168(sp)
    2430:	003e0506 	br	1c48 <___vfprintf_internal_r+0x1780>
    2434:	d9002a17 	ldw	r4,168(sp)
    2438:	20c00044 	addi	r3,r4,1
    243c:	003e0f06 	br	1c7c <___vfprintf_internal_r+0x17b4>
    2440:	01400184 	movi	r5,6
    2444:	d9402a15 	stw	r5,168(sp)
    2448:	003dff06 	br	1c48 <___vfprintf_internal_r+0x1780>
    244c:	d8802104 	addi	r2,sp,132
    2450:	d8800315 	stw	r2,12(sp)
    2454:	d8802504 	addi	r2,sp,148
    2458:	d8800215 	stw	r2,8(sp)
    245c:	d8802604 	addi	r2,sp,152
    2460:	d8800115 	stw	r2,4(sp)
    2464:	d8802a17 	ldw	r2,168(sp)
    2468:	d9403617 	ldw	r5,216(sp)
    246c:	d9002d17 	ldw	r4,180(sp)
    2470:	d8800015 	stw	r2,0(sp)
    2474:	01c000c4 	movi	r7,3
    2478:	980d883a 	mov	r6,r19
    247c:	da003d15 	stw	r8,244(sp)
    2480:	0002bf80 	call	2bf8 <_dtoa_r>
    2484:	d8c02a17 	ldw	r3,168(sp)
    2488:	da003d17 	ldw	r8,244(sp)
    248c:	1021883a 	mov	r16,r2
    2490:	10f9883a 	add	fp,r2,r3
    2494:	81000007 	ldb	r4,0(r16)
    2498:	00800c04 	movi	r2,48
    249c:	20805e26 	beq	r4,r2,2618 <___vfprintf_internal_r+0x2150>
    24a0:	d8c02617 	ldw	r3,152(sp)
    24a4:	e0f9883a 	add	fp,fp,r3
    24a8:	003e0a06 	br	1cd4 <___vfprintf_internal_r+0x180c>
    24ac:	00c00b44 	movi	r3,45
    24b0:	24e0003c 	xorhi	r19,r4,32768
    24b4:	d8c02905 	stb	r3,164(sp)
    24b8:	003de906 	br	1c60 <___vfprintf_internal_r+0x1798>
    24bc:	d8c03217 	ldw	r3,200(sp)
    24c0:	00c07a0e 	bge	zero,r3,26ac <___vfprintf_internal_r+0x21e4>
    24c4:	00800044 	movi	r2,1
    24c8:	d9003317 	ldw	r4,204(sp)
    24cc:	1105883a 	add	r2,r2,r4
    24d0:	d8802b15 	stw	r2,172(sp)
    24d4:	10004e16 	blt	r2,zero,2610 <___vfprintf_internal_r+0x2148>
    24d8:	044019c4 	movi	r17,103
    24dc:	003e2106 	br	1d64 <___vfprintf_internal_r+0x189c>
    24e0:	d9002a17 	ldw	r4,168(sp)
    24e4:	d8802104 	addi	r2,sp,132
    24e8:	d8800315 	stw	r2,12(sp)
    24ec:	d9000015 	stw	r4,0(sp)
    24f0:	d8802504 	addi	r2,sp,148
    24f4:	d9403617 	ldw	r5,216(sp)
    24f8:	d9002d17 	ldw	r4,180(sp)
    24fc:	d8800215 	stw	r2,8(sp)
    2500:	d8802604 	addi	r2,sp,152
    2504:	d8800115 	stw	r2,4(sp)
    2508:	01c000c4 	movi	r7,3
    250c:	980d883a 	mov	r6,r19
    2510:	da003d15 	stw	r8,244(sp)
    2514:	0002bf80 	call	2bf8 <_dtoa_r>
    2518:	d8c02a17 	ldw	r3,168(sp)
    251c:	da003d17 	ldw	r8,244(sp)
    2520:	1021883a 	mov	r16,r2
    2524:	00801184 	movi	r2,70
    2528:	80f9883a 	add	fp,r16,r3
    252c:	88bfd926 	beq	r17,r2,2494 <___vfprintf_internal_r+0x1fcc>
    2530:	003de806 	br	1cd4 <___vfprintf_internal_r+0x180c>
    2534:	d9002a17 	ldw	r4,168(sp)
    2538:	00c04d0e 	bge	zero,r3,2670 <___vfprintf_internal_r+0x21a8>
    253c:	2000441e 	bne	r4,zero,2650 <___vfprintf_internal_r+0x2188>
    2540:	9480004c 	andi	r18,r18,1
    2544:	9000421e 	bne	r18,zero,2650 <___vfprintf_internal_r+0x2188>
    2548:	1805883a 	mov	r2,r3
    254c:	18006f16 	blt	r3,zero,270c <___vfprintf_internal_r+0x2244>
    2550:	d8c03217 	ldw	r3,200(sp)
    2554:	d8c02b15 	stw	r3,172(sp)
    2558:	003e0206 	br	1d64 <___vfprintf_internal_r+0x189c>
    255c:	df0022c4 	addi	fp,sp,139
    2560:	dc002a15 	stw	r16,168(sp)
    2564:	4027883a 	mov	r19,r8
    2568:	e021883a 	mov	r16,fp
    256c:	b009883a 	mov	r4,r22
    2570:	01400284 	movi	r5,10
    2574:	000a8340 	call	a834 <__modsi3>
    2578:	10800c04 	addi	r2,r2,48
    257c:	843fffc4 	addi	r16,r16,-1
    2580:	b009883a 	mov	r4,r22
    2584:	01400284 	movi	r5,10
    2588:	80800005 	stb	r2,0(r16)
    258c:	000a7b00 	call	a7b0 <__divsi3>
    2590:	102d883a 	mov	r22,r2
    2594:	00800244 	movi	r2,9
    2598:	15bff416 	blt	r2,r22,256c <___vfprintf_internal_r+0x20a4>
    259c:	9811883a 	mov	r8,r19
    25a0:	b0800c04 	addi	r2,r22,48
    25a4:	8027883a 	mov	r19,r16
    25a8:	997fffc4 	addi	r5,r19,-1
    25ac:	98bfffc5 	stb	r2,-1(r19)
    25b0:	dc002a17 	ldw	r16,168(sp)
    25b4:	2f006d2e 	bgeu	r5,fp,276c <___vfprintf_internal_r+0x22a4>
    25b8:	d9c02384 	addi	r7,sp,142
    25bc:	3ccfc83a 	sub	r7,r7,r19
    25c0:	d9002344 	addi	r4,sp,141
    25c4:	e1cf883a 	add	r7,fp,r7
    25c8:	00000106 	br	25d0 <___vfprintf_internal_r+0x2108>
    25cc:	28800003 	ldbu	r2,0(r5)
    25d0:	20800005 	stb	r2,0(r4)
    25d4:	21000044 	addi	r4,r4,1
    25d8:	29400044 	addi	r5,r5,1
    25dc:	393ffb1e 	bne	r7,r4,25cc <___vfprintf_internal_r+0x2104>
    25e0:	d8802304 	addi	r2,sp,140
    25e4:	14c5c83a 	sub	r2,r2,r19
    25e8:	d8c02344 	addi	r3,sp,141
    25ec:	1885883a 	add	r2,r3,r2
    25f0:	003f7006 	br	23b4 <___vfprintf_internal_r+0x1eec>
    25f4:	0005883a 	mov	r2,zero
    25f8:	003f0f06 	br	2238 <___vfprintf_internal_r+0x1d70>
    25fc:	d8c03217 	ldw	r3,200(sp)
    2600:	18c00044 	addi	r3,r3,1
    2604:	d8c02b15 	stw	r3,172(sp)
    2608:	1805883a 	mov	r2,r3
    260c:	183fb20e 	bge	r3,zero,24d8 <___vfprintf_internal_r+0x2010>
    2610:	0005883a 	mov	r2,zero
    2614:	003fb006 	br	24d8 <___vfprintf_internal_r+0x2010>
    2618:	d9003617 	ldw	r4,216(sp)
    261c:	000d883a 	mov	r6,zero
    2620:	000f883a 	mov	r7,zero
    2624:	980b883a 	mov	r5,r19
    2628:	d8c03c15 	stw	r3,240(sp)
    262c:	da003d15 	stw	r8,244(sp)
    2630:	000bc080 	call	bc08 <__eqdf2>
    2634:	d8c03c17 	ldw	r3,240(sp)
    2638:	da003d17 	ldw	r8,244(sp)
    263c:	103f9826 	beq	r2,zero,24a0 <___vfprintf_internal_r+0x1fd8>
    2640:	00800044 	movi	r2,1
    2644:	10c7c83a 	sub	r3,r2,r3
    2648:	d8c02615 	stw	r3,152(sp)
    264c:	003f9506 	br	24a4 <___vfprintf_internal_r+0x1fdc>
    2650:	d9002a17 	ldw	r4,168(sp)
    2654:	d8c03217 	ldw	r3,200(sp)
    2658:	20800044 	addi	r2,r4,1
    265c:	1885883a 	add	r2,r3,r2
    2660:	d8802b15 	stw	r2,172(sp)
    2664:	103dbf0e 	bge	r2,zero,1d64 <___vfprintf_internal_r+0x189c>
    2668:	0005883a 	mov	r2,zero
    266c:	003dbd06 	br	1d64 <___vfprintf_internal_r+0x189c>
    2670:	2000201e 	bne	r4,zero,26f4 <___vfprintf_internal_r+0x222c>
    2674:	9480004c 	andi	r18,r18,1
    2678:	90001e1e 	bne	r18,zero,26f4 <___vfprintf_internal_r+0x222c>
    267c:	00800044 	movi	r2,1
    2680:	d8802b15 	stw	r2,172(sp)
    2684:	003db706 	br	1d64 <___vfprintf_internal_r+0x189c>
    2688:	00800b44 	movi	r2,45
    268c:	05adc83a 	sub	r22,zero,r22
    2690:	d8802305 	stb	r2,140(sp)
    2694:	003f3f06 	br	2394 <___vfprintf_internal_r+0x1ecc>
    2698:	0005883a 	mov	r2,zero
    269c:	003f5206 	br	23e8 <___vfprintf_internal_r+0x1f20>
    26a0:	90a4703a 	and	r18,r18,r2
    26a4:	903f4e26 	beq	r18,zero,23e0 <___vfprintf_internal_r+0x1f18>
    26a8:	003f4a06 	br	23d4 <___vfprintf_internal_r+0x1f0c>
    26ac:	00800084 	movi	r2,2
    26b0:	10c5c83a 	sub	r2,r2,r3
    26b4:	003f8406 	br	24c8 <___vfprintf_internal_r+0x2000>
    26b8:	d9402e17 	ldw	r5,184(sp)
    26bc:	d9002e17 	ldw	r4,184(sp)
    26c0:	ac400043 	ldbu	r17,1(r21)
    26c4:	29400017 	ldw	r5,0(r5)
    26c8:	20800104 	addi	r2,r4,4
    26cc:	d8802e15 	stw	r2,184(sp)
    26d0:	d9402a15 	stw	r5,168(sp)
    26d4:	182b883a 	mov	r21,r3
    26d8:	283e7b0e 	bge	r5,zero,20c8 <___vfprintf_internal_r+0x1c00>
    26dc:	8c403fcc 	andi	r17,r17,255
    26e0:	017fffc4 	movi	r5,-1
    26e4:	8c40201c 	xori	r17,r17,128
    26e8:	d9402a15 	stw	r5,168(sp)
    26ec:	8c7fe004 	addi	r17,r17,-128
    26f0:	0037d706 	br	650 <___vfprintf_internal_r+0x188>
    26f4:	d8c02a17 	ldw	r3,168(sp)
    26f8:	18c00084 	addi	r3,r3,2
    26fc:	d8c02b15 	stw	r3,172(sp)
    2700:	1805883a 	mov	r2,r3
    2704:	183d970e 	bge	r3,zero,1d64 <___vfprintf_internal_r+0x189c>
    2708:	003fd706 	br	2668 <___vfprintf_internal_r+0x21a0>
    270c:	0005883a 	mov	r2,zero
    2710:	003f8f06 	br	2550 <___vfprintf_internal_r+0x2088>
    2714:	9080004c 	andi	r2,r18,1
    2718:	103f821e 	bne	r2,zero,2524 <___vfprintf_internal_r+0x205c>
    271c:	d8802117 	ldw	r2,132(sp)
    2720:	1405c83a 	sub	r2,r2,r16
    2724:	d8803315 	stw	r2,204(sp)
    2728:	b47ef426 	beq	r22,r17,22fc <___vfprintf_internal_r+0x1e34>
    272c:	dd802617 	ldw	r22,152(sp)
    2730:	003f1206 	br	237c <___vfprintf_internal_r+0x1eb4>
    2734:	d8c02b03 	ldbu	r3,172(sp)
    2738:	d8c02785 	stb	r3,158(sp)
    273c:	0038df06 	br	abc <___vfprintf_internal_r+0x5f4>
    2740:	d8c02b03 	ldbu	r3,172(sp)
    2744:	d8c02785 	stb	r3,158(sp)
    2748:	0038aa06 	br	9f4 <___vfprintf_internal_r+0x52c>
    274c:	d8c02b03 	ldbu	r3,172(sp)
    2750:	d8c02785 	stb	r3,158(sp)
    2754:	003a4306 	br	1064 <___vfprintf_internal_r+0xb9c>
    2758:	d8c02b03 	ldbu	r3,172(sp)
    275c:	d8c02785 	stb	r3,158(sp)
    2760:	003af506 	br	1338 <___vfprintf_internal_r+0xe70>
    2764:	0005883a 	mov	r2,zero
    2768:	003d7b06 	br	1d58 <___vfprintf_internal_r+0x1890>
    276c:	d8802344 	addi	r2,sp,141
    2770:	003f1006 	br	23b4 <___vfprintf_internal_r+0x1eec>
    2774:	d8c02b03 	ldbu	r3,172(sp)
    2778:	d8c02785 	stb	r3,158(sp)
    277c:	0038fd06 	br	b74 <___vfprintf_internal_r+0x6ac>
    2780:	d8c02b03 	ldbu	r3,172(sp)
    2784:	d8c02785 	stb	r3,158(sp)
    2788:	003a9706 	br	11e8 <___vfprintf_internal_r+0xd20>
    278c:	d8c02b03 	ldbu	r3,172(sp)
    2790:	d8c02785 	stb	r3,158(sp)
    2794:	003a1806 	br	ff8 <___vfprintf_internal_r+0xb30>
    2798:	d8c02b03 	ldbu	r3,172(sp)
    279c:	d8c02785 	stb	r3,158(sp)
    27a0:	003abe06 	br	129c <___vfprintf_internal_r+0xdd4>

000027a4 <__vfprintf_internal>:
    27a4:	00810034 	movhi	r2,1024
    27a8:	10877904 	addi	r2,r2,7652
    27ac:	300f883a 	mov	r7,r6
    27b0:	280d883a 	mov	r6,r5
    27b4:	200b883a 	mov	r5,r4
    27b8:	11000017 	ldw	r4,0(r2)
    27bc:	00004c81 	jmpi	4c8 <___vfprintf_internal_r>

000027c0 <__sbprintf>:
    27c0:	2880030b 	ldhu	r2,12(r5)
    27c4:	2ac01917 	ldw	r11,100(r5)
    27c8:	2a80038b 	ldhu	r10,14(r5)
    27cc:	2a400717 	ldw	r9,28(r5)
    27d0:	2a000917 	ldw	r8,36(r5)
    27d4:	defee204 	addi	sp,sp,-1144
    27d8:	00c10004 	movi	r3,1024
    27dc:	dc011a15 	stw	r16,1128(sp)
    27e0:	10bfff4c 	andi	r2,r2,65533
    27e4:	2821883a 	mov	r16,r5
    27e8:	d8cb883a 	add	r5,sp,r3
    27ec:	dc811c15 	stw	r18,1136(sp)
    27f0:	dc411b15 	stw	r17,1132(sp)
    27f4:	dfc11d15 	stw	ra,1140(sp)
    27f8:	2025883a 	mov	r18,r4
    27fc:	d881030d 	sth	r2,1036(sp)
    2800:	dac11915 	stw	r11,1124(sp)
    2804:	da81038d 	sth	r10,1038(sp)
    2808:	da410715 	stw	r9,1052(sp)
    280c:	da010915 	stw	r8,1060(sp)
    2810:	dec10015 	stw	sp,1024(sp)
    2814:	dec10415 	stw	sp,1040(sp)
    2818:	d8c10215 	stw	r3,1032(sp)
    281c:	d8c10515 	stw	r3,1044(sp)
    2820:	d8010615 	stw	zero,1048(sp)
    2824:	00004c80 	call	4c8 <___vfprintf_internal_r>
    2828:	1023883a 	mov	r17,r2
    282c:	10000416 	blt	r2,zero,2840 <__sbprintf+0x80>
    2830:	d9410004 	addi	r5,sp,1024
    2834:	9009883a 	mov	r4,r18
    2838:	000449c0 	call	449c <_fflush_r>
    283c:	10000d1e 	bne	r2,zero,2874 <__sbprintf+0xb4>
    2840:	d881030b 	ldhu	r2,1036(sp)
    2844:	1080100c 	andi	r2,r2,64
    2848:	10000326 	beq	r2,zero,2858 <__sbprintf+0x98>
    284c:	8080030b 	ldhu	r2,12(r16)
    2850:	10801014 	ori	r2,r2,64
    2854:	8080030d 	sth	r2,12(r16)
    2858:	8805883a 	mov	r2,r17
    285c:	dfc11d17 	ldw	ra,1140(sp)
    2860:	dc811c17 	ldw	r18,1136(sp)
    2864:	dc411b17 	ldw	r17,1132(sp)
    2868:	dc011a17 	ldw	r16,1128(sp)
    286c:	dec11e04 	addi	sp,sp,1144
    2870:	f800283a 	ret
    2874:	047fffc4 	movi	r17,-1
    2878:	003ff106 	br	2840 <__sbprintf+0x80>

0000287c <__swsetup_r>:
    287c:	00810034 	movhi	r2,1024
    2880:	defffd04 	addi	sp,sp,-12
    2884:	10877904 	addi	r2,r2,7652
    2888:	dc400115 	stw	r17,4(sp)
    288c:	2023883a 	mov	r17,r4
    2890:	11000017 	ldw	r4,0(r2)
    2894:	dc000015 	stw	r16,0(sp)
    2898:	dfc00215 	stw	ra,8(sp)
    289c:	2821883a 	mov	r16,r5
    28a0:	20000226 	beq	r4,zero,28ac <__swsetup_r+0x30>
    28a4:	20800e17 	ldw	r2,56(r4)
    28a8:	10003126 	beq	r2,zero,2970 <__swsetup_r+0xf4>
    28ac:	8080030b 	ldhu	r2,12(r16)
    28b0:	10c0020c 	andi	r3,r2,8
    28b4:	1009883a 	mov	r4,r2
    28b8:	18000f26 	beq	r3,zero,28f8 <__swsetup_r+0x7c>
    28bc:	80c00417 	ldw	r3,16(r16)
    28c0:	18001526 	beq	r3,zero,2918 <__swsetup_r+0x9c>
    28c4:	1100004c 	andi	r4,r2,1
    28c8:	20001c1e 	bne	r4,zero,293c <__swsetup_r+0xc0>
    28cc:	1080008c 	andi	r2,r2,2
    28d0:	1000291e 	bne	r2,zero,2978 <__swsetup_r+0xfc>
    28d4:	80800517 	ldw	r2,20(r16)
    28d8:	80800215 	stw	r2,8(r16)
    28dc:	18001c26 	beq	r3,zero,2950 <__swsetup_r+0xd4>
    28e0:	0005883a 	mov	r2,zero
    28e4:	dfc00217 	ldw	ra,8(sp)
    28e8:	dc400117 	ldw	r17,4(sp)
    28ec:	dc000017 	ldw	r16,0(sp)
    28f0:	dec00304 	addi	sp,sp,12
    28f4:	f800283a 	ret
    28f8:	2080040c 	andi	r2,r4,16
    28fc:	10002e26 	beq	r2,zero,29b8 <__swsetup_r+0x13c>
    2900:	2080010c 	andi	r2,r4,4
    2904:	10001e1e 	bne	r2,zero,2980 <__swsetup_r+0x104>
    2908:	80c00417 	ldw	r3,16(r16)
    290c:	20800214 	ori	r2,r4,8
    2910:	8080030d 	sth	r2,12(r16)
    2914:	183feb1e 	bne	r3,zero,28c4 <__swsetup_r+0x48>
    2918:	1100a00c 	andi	r4,r2,640
    291c:	01408004 	movi	r5,512
    2920:	217fe826 	beq	r4,r5,28c4 <__swsetup_r+0x48>
    2924:	800b883a 	mov	r5,r16
    2928:	8809883a 	mov	r4,r17
    292c:	00054380 	call	5438 <__smakebuf_r>
    2930:	8080030b 	ldhu	r2,12(r16)
    2934:	80c00417 	ldw	r3,16(r16)
    2938:	003fe206 	br	28c4 <__swsetup_r+0x48>
    293c:	80800517 	ldw	r2,20(r16)
    2940:	80000215 	stw	zero,8(r16)
    2944:	0085c83a 	sub	r2,zero,r2
    2948:	80800615 	stw	r2,24(r16)
    294c:	183fe41e 	bne	r3,zero,28e0 <__swsetup_r+0x64>
    2950:	80c0030b 	ldhu	r3,12(r16)
    2954:	0005883a 	mov	r2,zero
    2958:	1900200c 	andi	r4,r3,128
    295c:	203fe126 	beq	r4,zero,28e4 <__swsetup_r+0x68>
    2960:	18c01014 	ori	r3,r3,64
    2964:	80c0030d 	sth	r3,12(r16)
    2968:	00bfffc4 	movi	r2,-1
    296c:	003fdd06 	br	28e4 <__swsetup_r+0x68>
    2970:	00048880 	call	4888 <__sinit>
    2974:	003fcd06 	br	28ac <__swsetup_r+0x30>
    2978:	0005883a 	mov	r2,zero
    297c:	003fd606 	br	28d8 <__swsetup_r+0x5c>
    2980:	81400c17 	ldw	r5,48(r16)
    2984:	28000626 	beq	r5,zero,29a0 <__swsetup_r+0x124>
    2988:	80801004 	addi	r2,r16,64
    298c:	28800326 	beq	r5,r2,299c <__swsetup_r+0x120>
    2990:	8809883a 	mov	r4,r17
    2994:	00049fc0 	call	49fc <_free_r>
    2998:	8100030b 	ldhu	r4,12(r16)
    299c:	80000c15 	stw	zero,48(r16)
    29a0:	80c00417 	ldw	r3,16(r16)
    29a4:	00bff6c4 	movi	r2,-37
    29a8:	1108703a 	and	r4,r2,r4
    29ac:	80000115 	stw	zero,4(r16)
    29b0:	80c00015 	stw	r3,0(r16)
    29b4:	003fd506 	br	290c <__swsetup_r+0x90>
    29b8:	00800244 	movi	r2,9
    29bc:	88800015 	stw	r2,0(r17)
    29c0:	20801014 	ori	r2,r4,64
    29c4:	8080030d 	sth	r2,12(r16)
    29c8:	00bfffc4 	movi	r2,-1
    29cc:	003fc506 	br	28e4 <__swsetup_r+0x68>

000029d0 <quorem>:
    29d0:	defff204 	addi	sp,sp,-56
    29d4:	ddc00b15 	stw	r23,44(sp)
    29d8:	20800417 	ldw	r2,16(r4)
    29dc:	2dc00417 	ldw	r23,16(r5)
    29e0:	dfc00d15 	stw	ra,52(sp)
    29e4:	df000c15 	stw	fp,48(sp)
    29e8:	dd800a15 	stw	r22,40(sp)
    29ec:	dd400915 	stw	r21,36(sp)
    29f0:	dd000815 	stw	r20,32(sp)
    29f4:	dcc00715 	stw	r19,28(sp)
    29f8:	dc800615 	stw	r18,24(sp)
    29fc:	dc400515 	stw	r17,20(sp)
    2a00:	dc000415 	stw	r16,16(sp)
    2a04:	15c07a16 	blt	r2,r23,2bf0 <quorem+0x220>
    2a08:	bdffffc4 	addi	r23,r23,-1
    2a0c:	bde9883a 	add	r20,r23,r23
    2a10:	28c00504 	addi	r3,r5,20
    2a14:	a529883a 	add	r20,r20,r20
    2a18:	1d39883a 	add	fp,r3,r20
    2a1c:	24c00504 	addi	r19,r4,20
    2a20:	d9400215 	stw	r5,8(sp)
    2a24:	9d29883a 	add	r20,r19,r20
    2a28:	e1400017 	ldw	r5,0(fp)
    2a2c:	d9000015 	stw	r4,0(sp)
    2a30:	a1000017 	ldw	r4,0(r20)
    2a34:	29400044 	addi	r5,r5,1
    2a38:	d8c00115 	stw	r3,4(sp)
    2a3c:	dd000315 	stw	r20,12(sp)
    2a40:	000a8a80 	call	a8a8 <__udivsi3>
    2a44:	1025883a 	mov	r18,r2
    2a48:	10003026 	beq	r2,zero,2b0c <quorem+0x13c>
    2a4c:	dc400117 	ldw	r17,4(sp)
    2a50:	9829883a 	mov	r20,r19
    2a54:	002d883a 	mov	r22,zero
    2a58:	0021883a 	mov	r16,zero
    2a5c:	8d400017 	ldw	r21,0(r17)
    2a60:	900b883a 	mov	r5,r18
    2a64:	8c400104 	addi	r17,r17,4
    2a68:	a93fffcc 	andi	r4,r21,65535
    2a6c:	000a9640 	call	a964 <__mulsi3>
    2a70:	a808d43a 	srli	r4,r21,16
    2a74:	900b883a 	mov	r5,r18
    2a78:	15ad883a 	add	r22,r2,r22
    2a7c:	000a9640 	call	a964 <__mulsi3>
    2a80:	a1000017 	ldw	r4,0(r20)
    2a84:	b00cd43a 	srli	r6,r22,16
    2a88:	b0ffffcc 	andi	r3,r22,65535
    2a8c:	217fffcc 	andi	r5,r4,65535
    2a90:	2c21883a 	add	r16,r5,r16
    2a94:	80c7c83a 	sub	r3,r16,r3
    2a98:	2008d43a 	srli	r4,r4,16
    2a9c:	1185883a 	add	r2,r2,r6
    2aa0:	1821d43a 	srai	r16,r3,16
    2aa4:	117fffcc 	andi	r5,r2,65535
    2aa8:	2149c83a 	sub	r4,r4,r5
    2aac:	2421883a 	add	r16,r4,r16
    2ab0:	8008943a 	slli	r4,r16,16
    2ab4:	18ffffcc 	andi	r3,r3,65535
    2ab8:	102cd43a 	srli	r22,r2,16
    2abc:	20c8b03a 	or	r4,r4,r3
    2ac0:	a1000015 	stw	r4,0(r20)
    2ac4:	8021d43a 	srai	r16,r16,16
    2ac8:	a5000104 	addi	r20,r20,4
    2acc:	e47fe32e 	bgeu	fp,r17,2a5c <quorem+0x8c>
    2ad0:	d8c00317 	ldw	r3,12(sp)
    2ad4:	18800017 	ldw	r2,0(r3)
    2ad8:	10000c1e 	bne	r2,zero,2b0c <quorem+0x13c>
    2adc:	18bfff04 	addi	r2,r3,-4
    2ae0:	9880082e 	bgeu	r19,r2,2b04 <quorem+0x134>
    2ae4:	18ffff17 	ldw	r3,-4(r3)
    2ae8:	18000326 	beq	r3,zero,2af8 <quorem+0x128>
    2aec:	00000506 	br	2b04 <quorem+0x134>
    2af0:	10c00017 	ldw	r3,0(r2)
    2af4:	1800031e 	bne	r3,zero,2b04 <quorem+0x134>
    2af8:	10bfff04 	addi	r2,r2,-4
    2afc:	bdffffc4 	addi	r23,r23,-1
    2b00:	98bffb36 	bltu	r19,r2,2af0 <quorem+0x120>
    2b04:	d8c00017 	ldw	r3,0(sp)
    2b08:	1dc00415 	stw	r23,16(r3)
    2b0c:	d9400217 	ldw	r5,8(sp)
    2b10:	d9000017 	ldw	r4,0(sp)
    2b14:	0006c340 	call	6c34 <__mcmp>
    2b18:	10002816 	blt	r2,zero,2bbc <quorem+0x1ec>
    2b1c:	dc400117 	ldw	r17,4(sp)
    2b20:	94800044 	addi	r18,r18,1
    2b24:	980d883a 	mov	r6,r19
    2b28:	0007883a 	mov	r3,zero
    2b2c:	31000017 	ldw	r4,0(r6)
    2b30:	89400017 	ldw	r5,0(r17)
    2b34:	31800104 	addi	r6,r6,4
    2b38:	20bfffcc 	andi	r2,r4,65535
    2b3c:	10c7883a 	add	r3,r2,r3
    2b40:	28bfffcc 	andi	r2,r5,65535
    2b44:	1885c83a 	sub	r2,r3,r2
    2b48:	280ad43a 	srli	r5,r5,16
    2b4c:	2008d43a 	srli	r4,r4,16
    2b50:	1007d43a 	srai	r3,r2,16
    2b54:	10bfffcc 	andi	r2,r2,65535
    2b58:	2149c83a 	sub	r4,r4,r5
    2b5c:	20c9883a 	add	r4,r4,r3
    2b60:	200a943a 	slli	r5,r4,16
    2b64:	8c400104 	addi	r17,r17,4
    2b68:	2007d43a 	srai	r3,r4,16
    2b6c:	2884b03a 	or	r2,r5,r2
    2b70:	30bfff15 	stw	r2,-4(r6)
    2b74:	e47fed2e 	bgeu	fp,r17,2b2c <quorem+0x15c>
    2b78:	bdc5883a 	add	r2,r23,r23
    2b7c:	1085883a 	add	r2,r2,r2
    2b80:	9887883a 	add	r3,r19,r2
    2b84:	18800017 	ldw	r2,0(r3)
    2b88:	10000c1e 	bne	r2,zero,2bbc <quorem+0x1ec>
    2b8c:	18bfff04 	addi	r2,r3,-4
    2b90:	9880082e 	bgeu	r19,r2,2bb4 <quorem+0x1e4>
    2b94:	18ffff17 	ldw	r3,-4(r3)
    2b98:	18000326 	beq	r3,zero,2ba8 <quorem+0x1d8>
    2b9c:	00000506 	br	2bb4 <quorem+0x1e4>
    2ba0:	10c00017 	ldw	r3,0(r2)
    2ba4:	1800031e 	bne	r3,zero,2bb4 <quorem+0x1e4>
    2ba8:	10bfff04 	addi	r2,r2,-4
    2bac:	bdffffc4 	addi	r23,r23,-1
    2bb0:	98bffb36 	bltu	r19,r2,2ba0 <quorem+0x1d0>
    2bb4:	d8c00017 	ldw	r3,0(sp)
    2bb8:	1dc00415 	stw	r23,16(r3)
    2bbc:	9005883a 	mov	r2,r18
    2bc0:	dfc00d17 	ldw	ra,52(sp)
    2bc4:	df000c17 	ldw	fp,48(sp)
    2bc8:	ddc00b17 	ldw	r23,44(sp)
    2bcc:	dd800a17 	ldw	r22,40(sp)
    2bd0:	dd400917 	ldw	r21,36(sp)
    2bd4:	dd000817 	ldw	r20,32(sp)
    2bd8:	dcc00717 	ldw	r19,28(sp)
    2bdc:	dc800617 	ldw	r18,24(sp)
    2be0:	dc400517 	ldw	r17,20(sp)
    2be4:	dc000417 	ldw	r16,16(sp)
    2be8:	dec00e04 	addi	sp,sp,56
    2bec:	f800283a 	ret
    2bf0:	0005883a 	mov	r2,zero
    2bf4:	003ff206 	br	2bc0 <quorem+0x1f0>

00002bf8 <_dtoa_r>:
    2bf8:	20801017 	ldw	r2,64(r4)
    2bfc:	deffde04 	addi	sp,sp,-136
    2c00:	df002015 	stw	fp,128(sp)
    2c04:	dcc01b15 	stw	r19,108(sp)
    2c08:	dc801a15 	stw	r18,104(sp)
    2c0c:	dc401915 	stw	r17,100(sp)
    2c10:	dc001815 	stw	r16,96(sp)
    2c14:	dfc02115 	stw	ra,132(sp)
    2c18:	ddc01f15 	stw	r23,124(sp)
    2c1c:	dd801e15 	stw	r22,120(sp)
    2c20:	dd401d15 	stw	r21,116(sp)
    2c24:	dd001c15 	stw	r20,112(sp)
    2c28:	d9c00315 	stw	r7,12(sp)
    2c2c:	2039883a 	mov	fp,r4
    2c30:	3023883a 	mov	r17,r6
    2c34:	2825883a 	mov	r18,r5
    2c38:	dc002417 	ldw	r16,144(sp)
    2c3c:	3027883a 	mov	r19,r6
    2c40:	10000826 	beq	r2,zero,2c64 <_dtoa_r+0x6c>
    2c44:	21801117 	ldw	r6,68(r4)
    2c48:	00c00044 	movi	r3,1
    2c4c:	100b883a 	mov	r5,r2
    2c50:	1986983a 	sll	r3,r3,r6
    2c54:	11800115 	stw	r6,4(r2)
    2c58:	10c00215 	stw	r3,8(r2)
    2c5c:	00063580 	call	6358 <_Bfree>
    2c60:	e0001015 	stw	zero,64(fp)
    2c64:	88002e16 	blt	r17,zero,2d20 <_dtoa_r+0x128>
    2c68:	80000015 	stw	zero,0(r16)
    2c6c:	889ffc2c 	andhi	r2,r17,32752
    2c70:	00dffc34 	movhi	r3,32752
    2c74:	10c01c26 	beq	r2,r3,2ce8 <_dtoa_r+0xf0>
    2c78:	000d883a 	mov	r6,zero
    2c7c:	000f883a 	mov	r7,zero
    2c80:	9009883a 	mov	r4,r18
    2c84:	980b883a 	mov	r5,r19
    2c88:	000bc080 	call	bc08 <__eqdf2>
    2c8c:	10002b1e 	bne	r2,zero,2d3c <_dtoa_r+0x144>
    2c90:	d9c02317 	ldw	r7,140(sp)
    2c94:	00800044 	movi	r2,1
    2c98:	38800015 	stw	r2,0(r7)
    2c9c:	d8802517 	ldw	r2,148(sp)
    2ca0:	10019e26 	beq	r2,zero,331c <_dtoa_r+0x724>
    2ca4:	d8c02517 	ldw	r3,148(sp)
    2ca8:	00810034 	movhi	r2,1024
    2cac:	10801e44 	addi	r2,r2,121
    2cb0:	18800015 	stw	r2,0(r3)
    2cb4:	10bfffc4 	addi	r2,r2,-1
    2cb8:	dfc02117 	ldw	ra,132(sp)
    2cbc:	df002017 	ldw	fp,128(sp)
    2cc0:	ddc01f17 	ldw	r23,124(sp)
    2cc4:	dd801e17 	ldw	r22,120(sp)
    2cc8:	dd401d17 	ldw	r21,116(sp)
    2ccc:	dd001c17 	ldw	r20,112(sp)
    2cd0:	dcc01b17 	ldw	r19,108(sp)
    2cd4:	dc801a17 	ldw	r18,104(sp)
    2cd8:	dc401917 	ldw	r17,100(sp)
    2cdc:	dc001817 	ldw	r16,96(sp)
    2ce0:	dec02204 	addi	sp,sp,136
    2ce4:	f800283a 	ret
    2ce8:	d8c02317 	ldw	r3,140(sp)
    2cec:	0089c3c4 	movi	r2,9999
    2cf0:	18800015 	stw	r2,0(r3)
    2cf4:	90017726 	beq	r18,zero,32d4 <_dtoa_r+0x6dc>
    2cf8:	00810034 	movhi	r2,1024
    2cfc:	10802a04 	addi	r2,r2,168
    2d00:	d9002517 	ldw	r4,148(sp)
    2d04:	203fec26 	beq	r4,zero,2cb8 <_dtoa_r+0xc0>
    2d08:	10c000c7 	ldb	r3,3(r2)
    2d0c:	1801781e 	bne	r3,zero,32f0 <_dtoa_r+0x6f8>
    2d10:	10c000c4 	addi	r3,r2,3
    2d14:	d9802517 	ldw	r6,148(sp)
    2d18:	30c00015 	stw	r3,0(r6)
    2d1c:	003fe606 	br	2cb8 <_dtoa_r+0xc0>
    2d20:	04e00034 	movhi	r19,32768
    2d24:	9cffffc4 	addi	r19,r19,-1
    2d28:	00800044 	movi	r2,1
    2d2c:	8ce6703a 	and	r19,r17,r19
    2d30:	80800015 	stw	r2,0(r16)
    2d34:	9823883a 	mov	r17,r19
    2d38:	003fcc06 	br	2c6c <_dtoa_r+0x74>
    2d3c:	d8800204 	addi	r2,sp,8
    2d40:	d8800015 	stw	r2,0(sp)
    2d44:	d9c00104 	addi	r7,sp,4
    2d48:	900b883a 	mov	r5,r18
    2d4c:	980d883a 	mov	r6,r19
    2d50:	e009883a 	mov	r4,fp
    2d54:	8820d53a 	srli	r16,r17,20
    2d58:	00070000 	call	7000 <__d2b>
    2d5c:	d8800915 	stw	r2,36(sp)
    2d60:	8001651e 	bne	r16,zero,32f8 <_dtoa_r+0x700>
    2d64:	dd800217 	ldw	r22,8(sp)
    2d68:	dc000117 	ldw	r16,4(sp)
    2d6c:	00800804 	movi	r2,32
    2d70:	b421883a 	add	r16,r22,r16
    2d74:	80c10c84 	addi	r3,r16,1074
    2d78:	10c2d10e 	bge	r2,r3,38c0 <_dtoa_r+0xcc8>
    2d7c:	00801004 	movi	r2,64
    2d80:	81010484 	addi	r4,r16,1042
    2d84:	10c7c83a 	sub	r3,r2,r3
    2d88:	9108d83a 	srl	r4,r18,r4
    2d8c:	88e2983a 	sll	r17,r17,r3
    2d90:	2448b03a 	or	r4,r4,r17
    2d94:	000d1240 	call	d124 <__floatunsidf>
    2d98:	017f8434 	movhi	r5,65040
    2d9c:	01800044 	movi	r6,1
    2da0:	1009883a 	mov	r4,r2
    2da4:	194b883a 	add	r5,r3,r5
    2da8:	843fffc4 	addi	r16,r16,-1
    2dac:	d9801115 	stw	r6,68(sp)
    2db0:	000d883a 	mov	r6,zero
    2db4:	01cffe34 	movhi	r7,16376
    2db8:	000c6cc0 	call	c6cc <__subdf3>
    2dbc:	0198dbf4 	movhi	r6,25455
    2dc0:	01cff4f4 	movhi	r7,16339
    2dc4:	3190d844 	addi	r6,r6,17249
    2dc8:	39e1e9c4 	addi	r7,r7,-30809
    2dcc:	1009883a 	mov	r4,r2
    2dd0:	180b883a 	mov	r5,r3
    2dd4:	000be600 	call	be60 <__muldf3>
    2dd8:	01a2d874 	movhi	r6,35681
    2ddc:	01cff1f4 	movhi	r7,16327
    2de0:	31b22cc4 	addi	r6,r6,-14157
    2de4:	39e28a04 	addi	r7,r7,-30168
    2de8:	180b883a 	mov	r5,r3
    2dec:	1009883a 	mov	r4,r2
    2df0:	000a98c0 	call	a98c <__adddf3>
    2df4:	8009883a 	mov	r4,r16
    2df8:	1029883a 	mov	r20,r2
    2dfc:	1823883a 	mov	r17,r3
    2e00:	000d0480 	call	d048 <__floatsidf>
    2e04:	019427f4 	movhi	r6,20639
    2e08:	01cff4f4 	movhi	r7,16339
    2e0c:	319e7ec4 	addi	r6,r6,31227
    2e10:	39d104c4 	addi	r7,r7,17427
    2e14:	1009883a 	mov	r4,r2
    2e18:	180b883a 	mov	r5,r3
    2e1c:	000be600 	call	be60 <__muldf3>
    2e20:	100d883a 	mov	r6,r2
    2e24:	180f883a 	mov	r7,r3
    2e28:	a009883a 	mov	r4,r20
    2e2c:	880b883a 	mov	r5,r17
    2e30:	000a98c0 	call	a98c <__adddf3>
    2e34:	1009883a 	mov	r4,r2
    2e38:	180b883a 	mov	r5,r3
    2e3c:	1029883a 	mov	r20,r2
    2e40:	1823883a 	mov	r17,r3
    2e44:	000cfc80 	call	cfc8 <__fixdfsi>
    2e48:	000d883a 	mov	r6,zero
    2e4c:	000f883a 	mov	r7,zero
    2e50:	a009883a 	mov	r4,r20
    2e54:	880b883a 	mov	r5,r17
    2e58:	d8800515 	stw	r2,20(sp)
    2e5c:	000bd6c0 	call	bd6c <__ledf2>
    2e60:	10028716 	blt	r2,zero,3880 <_dtoa_r+0xc88>
    2e64:	d8c00517 	ldw	r3,20(sp)
    2e68:	00800584 	movi	r2,22
    2e6c:	10c27536 	bltu	r2,r3,3844 <_dtoa_r+0xc4c>
    2e70:	180490fa 	slli	r2,r3,3
    2e74:	00c10034 	movhi	r3,1024
    2e78:	18c04604 	addi	r3,r3,280
    2e7c:	1885883a 	add	r2,r3,r2
    2e80:	11000017 	ldw	r4,0(r2)
    2e84:	11400117 	ldw	r5,4(r2)
    2e88:	900d883a 	mov	r6,r18
    2e8c:	980f883a 	mov	r7,r19
    2e90:	000bc900 	call	bc90 <__gedf2>
    2e94:	00828d0e 	bge	zero,r2,38cc <_dtoa_r+0xcd4>
    2e98:	d9000517 	ldw	r4,20(sp)
    2e9c:	d8000e15 	stw	zero,56(sp)
    2ea0:	213fffc4 	addi	r4,r4,-1
    2ea4:	d9000515 	stw	r4,20(sp)
    2ea8:	b42dc83a 	sub	r22,r22,r16
    2eac:	b5bfffc4 	addi	r22,r22,-1
    2eb0:	b0026f16 	blt	r22,zero,3870 <_dtoa_r+0xc78>
    2eb4:	d8000815 	stw	zero,32(sp)
    2eb8:	d9c00517 	ldw	r7,20(sp)
    2ebc:	38026416 	blt	r7,zero,3850 <_dtoa_r+0xc58>
    2ec0:	b1ed883a 	add	r22,r22,r7
    2ec4:	d9c00d15 	stw	r7,52(sp)
    2ec8:	d8000a15 	stw	zero,40(sp)
    2ecc:	d9800317 	ldw	r6,12(sp)
    2ed0:	00800244 	movi	r2,9
    2ed4:	11811436 	bltu	r2,r6,3328 <_dtoa_r+0x730>
    2ed8:	00800144 	movi	r2,5
    2edc:	1184e10e 	bge	r2,r6,4264 <_dtoa_r+0x166c>
    2ee0:	31bfff04 	addi	r6,r6,-4
    2ee4:	d9800315 	stw	r6,12(sp)
    2ee8:	0023883a 	mov	r17,zero
    2eec:	d9800317 	ldw	r6,12(sp)
    2ef0:	008000c4 	movi	r2,3
    2ef4:	30836726 	beq	r6,r2,3c94 <_dtoa_r+0x109c>
    2ef8:	1183410e 	bge	r2,r6,3c00 <_dtoa_r+0x1008>
    2efc:	d9c00317 	ldw	r7,12(sp)
    2f00:	00800104 	movi	r2,4
    2f04:	38827c26 	beq	r7,r2,38f8 <_dtoa_r+0xd00>
    2f08:	00800144 	movi	r2,5
    2f0c:	3884c41e 	bne	r7,r2,4220 <_dtoa_r+0x1628>
    2f10:	00800044 	movi	r2,1
    2f14:	d8800b15 	stw	r2,44(sp)
    2f18:	d8c00517 	ldw	r3,20(sp)
    2f1c:	d9002217 	ldw	r4,136(sp)
    2f20:	1907883a 	add	r3,r3,r4
    2f24:	19800044 	addi	r6,r3,1
    2f28:	d8c00c15 	stw	r3,48(sp)
    2f2c:	d9800615 	stw	r6,24(sp)
    2f30:	0183a40e 	bge	zero,r6,3dc4 <_dtoa_r+0x11cc>
    2f34:	d9800617 	ldw	r6,24(sp)
    2f38:	3021883a 	mov	r16,r6
    2f3c:	e0001115 	stw	zero,68(fp)
    2f40:	008005c4 	movi	r2,23
    2f44:	1184c92e 	bgeu	r2,r6,426c <_dtoa_r+0x1674>
    2f48:	00c00044 	movi	r3,1
    2f4c:	00800104 	movi	r2,4
    2f50:	1085883a 	add	r2,r2,r2
    2f54:	11000504 	addi	r4,r2,20
    2f58:	180b883a 	mov	r5,r3
    2f5c:	18c00044 	addi	r3,r3,1
    2f60:	313ffb2e 	bgeu	r6,r4,2f50 <_dtoa_r+0x358>
    2f64:	e1401115 	stw	r5,68(fp)
    2f68:	e009883a 	mov	r4,fp
    2f6c:	00062b00 	call	62b0 <_Balloc>
    2f70:	d8800715 	stw	r2,28(sp)
    2f74:	e0801015 	stw	r2,64(fp)
    2f78:	00800384 	movi	r2,14
    2f7c:	1400f736 	bltu	r2,r16,335c <_dtoa_r+0x764>
    2f80:	8800f626 	beq	r17,zero,335c <_dtoa_r+0x764>
    2f84:	d9c00517 	ldw	r7,20(sp)
    2f88:	01c39a0e 	bge	zero,r7,3df4 <_dtoa_r+0x11fc>
    2f8c:	388003cc 	andi	r2,r7,15
    2f90:	100490fa 	slli	r2,r2,3
    2f94:	382bd13a 	srai	r21,r7,4
    2f98:	00c10034 	movhi	r3,1024
    2f9c:	18c04604 	addi	r3,r3,280
    2fa0:	1885883a 	add	r2,r3,r2
    2fa4:	a8c0040c 	andi	r3,r21,16
    2fa8:	12400017 	ldw	r9,0(r2)
    2fac:	12000117 	ldw	r8,4(r2)
    2fb0:	18037926 	beq	r3,zero,3d98 <_dtoa_r+0x11a0>
    2fb4:	00810034 	movhi	r2,1024
    2fb8:	10803c04 	addi	r2,r2,240
    2fbc:	11800817 	ldw	r6,32(r2)
    2fc0:	11c00917 	ldw	r7,36(r2)
    2fc4:	9009883a 	mov	r4,r18
    2fc8:	980b883a 	mov	r5,r19
    2fcc:	da001715 	stw	r8,92(sp)
    2fd0:	da401615 	stw	r9,88(sp)
    2fd4:	000b2380 	call	b238 <__divdf3>
    2fd8:	da001717 	ldw	r8,92(sp)
    2fdc:	da401617 	ldw	r9,88(sp)
    2fe0:	ad4003cc 	andi	r21,r21,15
    2fe4:	040000c4 	movi	r16,3
    2fe8:	1023883a 	mov	r17,r2
    2fec:	1829883a 	mov	r20,r3
    2ff0:	a8001126 	beq	r21,zero,3038 <_dtoa_r+0x440>
    2ff4:	05c10034 	movhi	r23,1024
    2ff8:	bdc03c04 	addi	r23,r23,240
    2ffc:	4805883a 	mov	r2,r9
    3000:	4007883a 	mov	r3,r8
    3004:	a980004c 	andi	r6,r21,1
    3008:	1009883a 	mov	r4,r2
    300c:	a82bd07a 	srai	r21,r21,1
    3010:	180b883a 	mov	r5,r3
    3014:	30000426 	beq	r6,zero,3028 <_dtoa_r+0x430>
    3018:	b9800017 	ldw	r6,0(r23)
    301c:	b9c00117 	ldw	r7,4(r23)
    3020:	84000044 	addi	r16,r16,1
    3024:	000be600 	call	be60 <__muldf3>
    3028:	bdc00204 	addi	r23,r23,8
    302c:	a83ff51e 	bne	r21,zero,3004 <_dtoa_r+0x40c>
    3030:	1013883a 	mov	r9,r2
    3034:	1811883a 	mov	r8,r3
    3038:	480d883a 	mov	r6,r9
    303c:	400f883a 	mov	r7,r8
    3040:	8809883a 	mov	r4,r17
    3044:	a00b883a 	mov	r5,r20
    3048:	000b2380 	call	b238 <__divdf3>
    304c:	d8800f15 	stw	r2,60(sp)
    3050:	d8c01015 	stw	r3,64(sp)
    3054:	d8c00e17 	ldw	r3,56(sp)
    3058:	18000626 	beq	r3,zero,3074 <_dtoa_r+0x47c>
    305c:	d9000f17 	ldw	r4,60(sp)
    3060:	d9401017 	ldw	r5,64(sp)
    3064:	000d883a 	mov	r6,zero
    3068:	01cffc34 	movhi	r7,16368
    306c:	000bd6c0 	call	bd6c <__ledf2>
    3070:	10040b16 	blt	r2,zero,40a0 <_dtoa_r+0x14a8>
    3074:	8009883a 	mov	r4,r16
    3078:	000d0480 	call	d048 <__floatsidf>
    307c:	d9800f17 	ldw	r6,60(sp)
    3080:	d9c01017 	ldw	r7,64(sp)
    3084:	1009883a 	mov	r4,r2
    3088:	180b883a 	mov	r5,r3
    308c:	000be600 	call	be60 <__muldf3>
    3090:	000d883a 	mov	r6,zero
    3094:	01d00734 	movhi	r7,16412
    3098:	1009883a 	mov	r4,r2
    309c:	180b883a 	mov	r5,r3
    30a0:	000a98c0 	call	a98c <__adddf3>
    30a4:	1021883a 	mov	r16,r2
    30a8:	d8800617 	ldw	r2,24(sp)
    30ac:	047f3034 	movhi	r17,64704
    30b0:	1c63883a 	add	r17,r3,r17
    30b4:	10031826 	beq	r2,zero,3d18 <_dtoa_r+0x1120>
    30b8:	d8c00517 	ldw	r3,20(sp)
    30bc:	db000617 	ldw	r12,24(sp)
    30c0:	d8c01315 	stw	r3,76(sp)
    30c4:	d9000b17 	ldw	r4,44(sp)
    30c8:	20038f26 	beq	r4,zero,3f08 <_dtoa_r+0x1310>
    30cc:	60bfffc4 	addi	r2,r12,-1
    30d0:	100490fa 	slli	r2,r2,3
    30d4:	00c10034 	movhi	r3,1024
    30d8:	18c04604 	addi	r3,r3,280
    30dc:	1885883a 	add	r2,r3,r2
    30e0:	11800017 	ldw	r6,0(r2)
    30e4:	11c00117 	ldw	r7,4(r2)
    30e8:	d8800717 	ldw	r2,28(sp)
    30ec:	0009883a 	mov	r4,zero
    30f0:	014ff834 	movhi	r5,16352
    30f4:	db001615 	stw	r12,88(sp)
    30f8:	15c00044 	addi	r23,r2,1
    30fc:	000b2380 	call	b238 <__divdf3>
    3100:	800d883a 	mov	r6,r16
    3104:	880f883a 	mov	r7,r17
    3108:	1009883a 	mov	r4,r2
    310c:	180b883a 	mov	r5,r3
    3110:	000c6cc0 	call	c6cc <__subdf3>
    3114:	d9401017 	ldw	r5,64(sp)
    3118:	d9000f17 	ldw	r4,60(sp)
    311c:	102b883a 	mov	r21,r2
    3120:	d8c01215 	stw	r3,72(sp)
    3124:	000cfc80 	call	cfc8 <__fixdfsi>
    3128:	1009883a 	mov	r4,r2
    312c:	1029883a 	mov	r20,r2
    3130:	000d0480 	call	d048 <__floatsidf>
    3134:	d9000f17 	ldw	r4,60(sp)
    3138:	d9401017 	ldw	r5,64(sp)
    313c:	100d883a 	mov	r6,r2
    3140:	180f883a 	mov	r7,r3
    3144:	000c6cc0 	call	c6cc <__subdf3>
    3148:	1823883a 	mov	r17,r3
    314c:	d8c00717 	ldw	r3,28(sp)
    3150:	d9401217 	ldw	r5,72(sp)
    3154:	a2000c04 	addi	r8,r20,48
    3158:	1021883a 	mov	r16,r2
    315c:	1a000005 	stb	r8,0(r3)
    3160:	800d883a 	mov	r6,r16
    3164:	880f883a 	mov	r7,r17
    3168:	a809883a 	mov	r4,r21
    316c:	4029883a 	mov	r20,r8
    3170:	000bc900 	call	bc90 <__gedf2>
    3174:	00841d16 	blt	zero,r2,41ec <_dtoa_r+0x15f4>
    3178:	800d883a 	mov	r6,r16
    317c:	880f883a 	mov	r7,r17
    3180:	0009883a 	mov	r4,zero
    3184:	014ffc34 	movhi	r5,16368
    3188:	000c6cc0 	call	c6cc <__subdf3>
    318c:	d9401217 	ldw	r5,72(sp)
    3190:	100d883a 	mov	r6,r2
    3194:	180f883a 	mov	r7,r3
    3198:	a809883a 	mov	r4,r21
    319c:	000bc900 	call	bc90 <__gedf2>
    31a0:	db001617 	ldw	r12,88(sp)
    31a4:	00840e16 	blt	zero,r2,41e0 <_dtoa_r+0x15e8>
    31a8:	00800044 	movi	r2,1
    31ac:	13006b0e 	bge	r2,r12,335c <_dtoa_r+0x764>
    31b0:	d9000717 	ldw	r4,28(sp)
    31b4:	dd800f15 	stw	r22,60(sp)
    31b8:	dcc01015 	stw	r19,64(sp)
    31bc:	2319883a 	add	r12,r4,r12
    31c0:	dcc01217 	ldw	r19,72(sp)
    31c4:	602d883a 	mov	r22,r12
    31c8:	dc801215 	stw	r18,72(sp)
    31cc:	b825883a 	mov	r18,r23
    31d0:	00000906 	br	31f8 <_dtoa_r+0x600>
    31d4:	000c6cc0 	call	c6cc <__subdf3>
    31d8:	a80d883a 	mov	r6,r21
    31dc:	980f883a 	mov	r7,r19
    31e0:	1009883a 	mov	r4,r2
    31e4:	180b883a 	mov	r5,r3
    31e8:	000bd6c0 	call	bd6c <__ledf2>
    31ec:	1003e816 	blt	r2,zero,4190 <_dtoa_r+0x1598>
    31f0:	b825883a 	mov	r18,r23
    31f4:	bd83e926 	beq	r23,r22,419c <_dtoa_r+0x15a4>
    31f8:	a809883a 	mov	r4,r21
    31fc:	980b883a 	mov	r5,r19
    3200:	000d883a 	mov	r6,zero
    3204:	01d00934 	movhi	r7,16420
    3208:	000be600 	call	be60 <__muldf3>
    320c:	000d883a 	mov	r6,zero
    3210:	01d00934 	movhi	r7,16420
    3214:	8009883a 	mov	r4,r16
    3218:	880b883a 	mov	r5,r17
    321c:	102b883a 	mov	r21,r2
    3220:	1827883a 	mov	r19,r3
    3224:	000be600 	call	be60 <__muldf3>
    3228:	180b883a 	mov	r5,r3
    322c:	1009883a 	mov	r4,r2
    3230:	1821883a 	mov	r16,r3
    3234:	1023883a 	mov	r17,r2
    3238:	000cfc80 	call	cfc8 <__fixdfsi>
    323c:	1009883a 	mov	r4,r2
    3240:	1029883a 	mov	r20,r2
    3244:	000d0480 	call	d048 <__floatsidf>
    3248:	8809883a 	mov	r4,r17
    324c:	800b883a 	mov	r5,r16
    3250:	100d883a 	mov	r6,r2
    3254:	180f883a 	mov	r7,r3
    3258:	000c6cc0 	call	c6cc <__subdf3>
    325c:	a5000c04 	addi	r20,r20,48
    3260:	a80d883a 	mov	r6,r21
    3264:	980f883a 	mov	r7,r19
    3268:	1009883a 	mov	r4,r2
    326c:	180b883a 	mov	r5,r3
    3270:	95000005 	stb	r20,0(r18)
    3274:	1021883a 	mov	r16,r2
    3278:	1823883a 	mov	r17,r3
    327c:	000bd6c0 	call	bd6c <__ledf2>
    3280:	bdc00044 	addi	r23,r23,1
    3284:	800d883a 	mov	r6,r16
    3288:	880f883a 	mov	r7,r17
    328c:	0009883a 	mov	r4,zero
    3290:	014ffc34 	movhi	r5,16368
    3294:	103fcf0e 	bge	r2,zero,31d4 <_dtoa_r+0x5dc>
    3298:	d8c01317 	ldw	r3,76(sp)
    329c:	d8c00515 	stw	r3,20(sp)
    32a0:	d9400917 	ldw	r5,36(sp)
    32a4:	e009883a 	mov	r4,fp
    32a8:	00063580 	call	6358 <_Bfree>
    32ac:	d9000517 	ldw	r4,20(sp)
    32b0:	d9802317 	ldw	r6,140(sp)
    32b4:	d9c02517 	ldw	r7,148(sp)
    32b8:	b8000005 	stb	zero,0(r23)
    32bc:	20800044 	addi	r2,r4,1
    32c0:	30800015 	stw	r2,0(r6)
    32c4:	3802aa26 	beq	r7,zero,3d70 <_dtoa_r+0x1178>
    32c8:	3dc00015 	stw	r23,0(r7)
    32cc:	d8800717 	ldw	r2,28(sp)
    32d0:	003e7906 	br	2cb8 <_dtoa_r+0xc0>
    32d4:	00800434 	movhi	r2,16
    32d8:	10bfffc4 	addi	r2,r2,-1
    32dc:	88a2703a 	and	r17,r17,r2
    32e0:	883e851e 	bne	r17,zero,2cf8 <_dtoa_r+0x100>
    32e4:	00810034 	movhi	r2,1024
    32e8:	10802704 	addi	r2,r2,156
    32ec:	003e8406 	br	2d00 <_dtoa_r+0x108>
    32f0:	10c00204 	addi	r3,r2,8
    32f4:	003e8706 	br	2d14 <_dtoa_r+0x11c>
    32f8:	01400434 	movhi	r5,16
    32fc:	297fffc4 	addi	r5,r5,-1
    3300:	994a703a 	and	r5,r19,r5
    3304:	9009883a 	mov	r4,r18
    3308:	843f0044 	addi	r16,r16,-1023
    330c:	294ffc34 	orhi	r5,r5,16368
    3310:	dd800217 	ldw	r22,8(sp)
    3314:	d8001115 	stw	zero,68(sp)
    3318:	003ea506 	br	2db0 <_dtoa_r+0x1b8>
    331c:	00810034 	movhi	r2,1024
    3320:	10801e04 	addi	r2,r2,120
    3324:	003e6406 	br	2cb8 <_dtoa_r+0xc0>
    3328:	e0001115 	stw	zero,68(fp)
    332c:	000b883a 	mov	r5,zero
    3330:	e009883a 	mov	r4,fp
    3334:	00062b00 	call	62b0 <_Balloc>
    3338:	01bfffc4 	movi	r6,-1
    333c:	01c00044 	movi	r7,1
    3340:	d8800715 	stw	r2,28(sp)
    3344:	d9800c15 	stw	r6,48(sp)
    3348:	e0801015 	stw	r2,64(fp)
    334c:	d8000315 	stw	zero,12(sp)
    3350:	d9c00b15 	stw	r7,44(sp)
    3354:	d9800615 	stw	r6,24(sp)
    3358:	d8002215 	stw	zero,136(sp)
    335c:	d8800117 	ldw	r2,4(sp)
    3360:	10008916 	blt	r2,zero,3588 <_dtoa_r+0x990>
    3364:	d9000517 	ldw	r4,20(sp)
    3368:	00c00384 	movi	r3,14
    336c:	19008616 	blt	r3,r4,3588 <_dtoa_r+0x990>
    3370:	200490fa 	slli	r2,r4,3
    3374:	00c10034 	movhi	r3,1024
    3378:	d9802217 	ldw	r6,136(sp)
    337c:	18c04604 	addi	r3,r3,280
    3380:	1885883a 	add	r2,r3,r2
    3384:	14000017 	ldw	r16,0(r2)
    3388:	14400117 	ldw	r17,4(r2)
    338c:	30016316 	blt	r6,zero,391c <_dtoa_r+0xd24>
    3390:	800d883a 	mov	r6,r16
    3394:	880f883a 	mov	r7,r17
    3398:	9009883a 	mov	r4,r18
    339c:	980b883a 	mov	r5,r19
    33a0:	000b2380 	call	b238 <__divdf3>
    33a4:	180b883a 	mov	r5,r3
    33a8:	1009883a 	mov	r4,r2
    33ac:	000cfc80 	call	cfc8 <__fixdfsi>
    33b0:	1009883a 	mov	r4,r2
    33b4:	102b883a 	mov	r21,r2
    33b8:	000d0480 	call	d048 <__floatsidf>
    33bc:	800d883a 	mov	r6,r16
    33c0:	880f883a 	mov	r7,r17
    33c4:	1009883a 	mov	r4,r2
    33c8:	180b883a 	mov	r5,r3
    33cc:	000be600 	call	be60 <__muldf3>
    33d0:	100d883a 	mov	r6,r2
    33d4:	180f883a 	mov	r7,r3
    33d8:	9009883a 	mov	r4,r18
    33dc:	980b883a 	mov	r5,r19
    33e0:	000c6cc0 	call	c6cc <__subdf3>
    33e4:	d9c00717 	ldw	r7,28(sp)
    33e8:	1009883a 	mov	r4,r2
    33ec:	a8800c04 	addi	r2,r21,48
    33f0:	38800005 	stb	r2,0(r7)
    33f4:	3dc00044 	addi	r23,r7,1
    33f8:	d9c00617 	ldw	r7,24(sp)
    33fc:	01800044 	movi	r6,1
    3400:	180b883a 	mov	r5,r3
    3404:	2005883a 	mov	r2,r4
    3408:	39803826 	beq	r7,r6,34ec <_dtoa_r+0x8f4>
    340c:	000d883a 	mov	r6,zero
    3410:	01d00934 	movhi	r7,16420
    3414:	000be600 	call	be60 <__muldf3>
    3418:	000d883a 	mov	r6,zero
    341c:	000f883a 	mov	r7,zero
    3420:	1009883a 	mov	r4,r2
    3424:	180b883a 	mov	r5,r3
    3428:	1025883a 	mov	r18,r2
    342c:	1827883a 	mov	r19,r3
    3430:	000bc080 	call	bc08 <__eqdf2>
    3434:	103f9a26 	beq	r2,zero,32a0 <_dtoa_r+0x6a8>
    3438:	d9c00617 	ldw	r7,24(sp)
    343c:	d8c00717 	ldw	r3,28(sp)
    3440:	b829883a 	mov	r20,r23
    3444:	38bfffc4 	addi	r2,r7,-1
    3448:	18ad883a 	add	r22,r3,r2
    344c:	00000a06 	br	3478 <_dtoa_r+0x880>
    3450:	000be600 	call	be60 <__muldf3>
    3454:	000d883a 	mov	r6,zero
    3458:	000f883a 	mov	r7,zero
    345c:	1009883a 	mov	r4,r2
    3460:	180b883a 	mov	r5,r3
    3464:	1025883a 	mov	r18,r2
    3468:	1827883a 	mov	r19,r3
    346c:	b829883a 	mov	r20,r23
    3470:	000bc080 	call	bc08 <__eqdf2>
    3474:	103f8a26 	beq	r2,zero,32a0 <_dtoa_r+0x6a8>
    3478:	800d883a 	mov	r6,r16
    347c:	880f883a 	mov	r7,r17
    3480:	9009883a 	mov	r4,r18
    3484:	980b883a 	mov	r5,r19
    3488:	000b2380 	call	b238 <__divdf3>
    348c:	180b883a 	mov	r5,r3
    3490:	1009883a 	mov	r4,r2
    3494:	000cfc80 	call	cfc8 <__fixdfsi>
    3498:	1009883a 	mov	r4,r2
    349c:	102b883a 	mov	r21,r2
    34a0:	000d0480 	call	d048 <__floatsidf>
    34a4:	800d883a 	mov	r6,r16
    34a8:	880f883a 	mov	r7,r17
    34ac:	1009883a 	mov	r4,r2
    34b0:	180b883a 	mov	r5,r3
    34b4:	000be600 	call	be60 <__muldf3>
    34b8:	100d883a 	mov	r6,r2
    34bc:	180f883a 	mov	r7,r3
    34c0:	9009883a 	mov	r4,r18
    34c4:	980b883a 	mov	r5,r19
    34c8:	000c6cc0 	call	c6cc <__subdf3>
    34cc:	aa000c04 	addi	r8,r21,48
    34d0:	a2000005 	stb	r8,0(r20)
    34d4:	000d883a 	mov	r6,zero
    34d8:	01d00934 	movhi	r7,16420
    34dc:	1009883a 	mov	r4,r2
    34e0:	180b883a 	mov	r5,r3
    34e4:	a5c00044 	addi	r23,r20,1
    34e8:	b53fd91e 	bne	r22,r20,3450 <_dtoa_r+0x858>
    34ec:	100d883a 	mov	r6,r2
    34f0:	180f883a 	mov	r7,r3
    34f4:	1009883a 	mov	r4,r2
    34f8:	180b883a 	mov	r5,r3
    34fc:	000a98c0 	call	a98c <__adddf3>
    3500:	100d883a 	mov	r6,r2
    3504:	180f883a 	mov	r7,r3
    3508:	8009883a 	mov	r4,r16
    350c:	880b883a 	mov	r5,r17
    3510:	1027883a 	mov	r19,r2
    3514:	1825883a 	mov	r18,r3
    3518:	000bd6c0 	call	bd6c <__ledf2>
    351c:	10000816 	blt	r2,zero,3540 <_dtoa_r+0x948>
    3520:	980d883a 	mov	r6,r19
    3524:	900f883a 	mov	r7,r18
    3528:	8009883a 	mov	r4,r16
    352c:	880b883a 	mov	r5,r17
    3530:	000bc080 	call	bc08 <__eqdf2>
    3534:	103f5a1e 	bne	r2,zero,32a0 <_dtoa_r+0x6a8>
    3538:	ad40004c 	andi	r21,r21,1
    353c:	a83f5826 	beq	r21,zero,32a0 <_dtoa_r+0x6a8>
    3540:	bd3fffc3 	ldbu	r20,-1(r23)
    3544:	b8bfffc4 	addi	r2,r23,-1
    3548:	1007883a 	mov	r3,r2
    354c:	01400e44 	movi	r5,57
    3550:	d9800717 	ldw	r6,28(sp)
    3554:	00000506 	br	356c <_dtoa_r+0x974>
    3558:	18ffffc4 	addi	r3,r3,-1
    355c:	11824726 	beq	r2,r6,3e7c <_dtoa_r+0x1284>
    3560:	1d000003 	ldbu	r20,0(r3)
    3564:	102f883a 	mov	r23,r2
    3568:	10bfffc4 	addi	r2,r2,-1
    356c:	a1003fcc 	andi	r4,r20,255
    3570:	2100201c 	xori	r4,r4,128
    3574:	213fe004 	addi	r4,r4,-128
    3578:	217ff726 	beq	r4,r5,3558 <_dtoa_r+0x960>
    357c:	a2000044 	addi	r8,r20,1
    3580:	12000005 	stb	r8,0(r2)
    3584:	003f4606 	br	32a0 <_dtoa_r+0x6a8>
    3588:	d9000b17 	ldw	r4,44(sp)
    358c:	2000c826 	beq	r4,zero,38b0 <_dtoa_r+0xcb8>
    3590:	d9800317 	ldw	r6,12(sp)
    3594:	00c00044 	movi	r3,1
    3598:	1980f90e 	bge	r3,r6,3980 <_dtoa_r+0xd88>
    359c:	d8800617 	ldw	r2,24(sp)
    35a0:	d8c00a17 	ldw	r3,40(sp)
    35a4:	157fffc4 	addi	r21,r2,-1
    35a8:	1d41f316 	blt	r3,r21,3d78 <_dtoa_r+0x1180>
    35ac:	1d6bc83a 	sub	r21,r3,r21
    35b0:	d9c00617 	ldw	r7,24(sp)
    35b4:	3802aa16 	blt	r7,zero,4060 <_dtoa_r+0x1468>
    35b8:	dd000817 	ldw	r20,32(sp)
    35bc:	d8800617 	ldw	r2,24(sp)
    35c0:	d8c00817 	ldw	r3,32(sp)
    35c4:	01400044 	movi	r5,1
    35c8:	e009883a 	mov	r4,fp
    35cc:	1887883a 	add	r3,r3,r2
    35d0:	d8c00815 	stw	r3,32(sp)
    35d4:	b0ad883a 	add	r22,r22,r2
    35d8:	00066e40 	call	66e4 <__i2b>
    35dc:	1023883a 	mov	r17,r2
    35e0:	a0000826 	beq	r20,zero,3604 <_dtoa_r+0xa0c>
    35e4:	0580070e 	bge	zero,r22,3604 <_dtoa_r+0xa0c>
    35e8:	a005883a 	mov	r2,r20
    35ec:	b500b916 	blt	r22,r20,38d4 <_dtoa_r+0xcdc>
    35f0:	d9000817 	ldw	r4,32(sp)
    35f4:	a0a9c83a 	sub	r20,r20,r2
    35f8:	b0adc83a 	sub	r22,r22,r2
    35fc:	2089c83a 	sub	r4,r4,r2
    3600:	d9000815 	stw	r4,32(sp)
    3604:	d9800a17 	ldw	r6,40(sp)
    3608:	0181810e 	bge	zero,r6,3c10 <_dtoa_r+0x1018>
    360c:	d9c00b17 	ldw	r7,44(sp)
    3610:	3800b326 	beq	r7,zero,38e0 <_dtoa_r+0xce8>
    3614:	a800b226 	beq	r21,zero,38e0 <_dtoa_r+0xce8>
    3618:	880b883a 	mov	r5,r17
    361c:	a80d883a 	mov	r6,r21
    3620:	e009883a 	mov	r4,fp
    3624:	00069ac0 	call	69ac <__pow5mult>
    3628:	d9800917 	ldw	r6,36(sp)
    362c:	100b883a 	mov	r5,r2
    3630:	e009883a 	mov	r4,fp
    3634:	1023883a 	mov	r17,r2
    3638:	00067200 	call	6720 <__multiply>
    363c:	1021883a 	mov	r16,r2
    3640:	d8800a17 	ldw	r2,40(sp)
    3644:	d9400917 	ldw	r5,36(sp)
    3648:	e009883a 	mov	r4,fp
    364c:	1545c83a 	sub	r2,r2,r21
    3650:	d8800a15 	stw	r2,40(sp)
    3654:	00063580 	call	6358 <_Bfree>
    3658:	d8c00a17 	ldw	r3,40(sp)
    365c:	18009f1e 	bne	r3,zero,38dc <_dtoa_r+0xce4>
    3660:	05c00044 	movi	r23,1
    3664:	e009883a 	mov	r4,fp
    3668:	b80b883a 	mov	r5,r23
    366c:	00066e40 	call	66e4 <__i2b>
    3670:	d9000d17 	ldw	r4,52(sp)
    3674:	102b883a 	mov	r21,r2
    3678:	2000ce26 	beq	r4,zero,39b4 <_dtoa_r+0xdbc>
    367c:	200d883a 	mov	r6,r4
    3680:	100b883a 	mov	r5,r2
    3684:	e009883a 	mov	r4,fp
    3688:	00069ac0 	call	69ac <__pow5mult>
    368c:	d9800317 	ldw	r6,12(sp)
    3690:	102b883a 	mov	r21,r2
    3694:	b981810e 	bge	r23,r6,3c9c <_dtoa_r+0x10a4>
    3698:	0027883a 	mov	r19,zero
    369c:	a8800417 	ldw	r2,16(r21)
    36a0:	05c00804 	movi	r23,32
    36a4:	10800104 	addi	r2,r2,4
    36a8:	1085883a 	add	r2,r2,r2
    36ac:	1085883a 	add	r2,r2,r2
    36b0:	a885883a 	add	r2,r21,r2
    36b4:	11000017 	ldw	r4,0(r2)
    36b8:	00065cc0 	call	65cc <__hi0bits>
    36bc:	b885c83a 	sub	r2,r23,r2
    36c0:	1585883a 	add	r2,r2,r22
    36c4:	108007cc 	andi	r2,r2,31
    36c8:	1000b326 	beq	r2,zero,3998 <_dtoa_r+0xda0>
    36cc:	00c00804 	movi	r3,32
    36d0:	1887c83a 	sub	r3,r3,r2
    36d4:	01000104 	movi	r4,4
    36d8:	20c2cd0e 	bge	r4,r3,4210 <_dtoa_r+0x1618>
    36dc:	00c00704 	movi	r3,28
    36e0:	1885c83a 	sub	r2,r3,r2
    36e4:	d8c00817 	ldw	r3,32(sp)
    36e8:	a0a9883a 	add	r20,r20,r2
    36ec:	b0ad883a 	add	r22,r22,r2
    36f0:	1887883a 	add	r3,r3,r2
    36f4:	d8c00815 	stw	r3,32(sp)
    36f8:	d9800817 	ldw	r6,32(sp)
    36fc:	0180040e 	bge	zero,r6,3710 <_dtoa_r+0xb18>
    3700:	800b883a 	mov	r5,r16
    3704:	e009883a 	mov	r4,fp
    3708:	0006aec0 	call	6aec <__lshift>
    370c:	1021883a 	mov	r16,r2
    3710:	0580050e 	bge	zero,r22,3728 <_dtoa_r+0xb30>
    3714:	a80b883a 	mov	r5,r21
    3718:	b00d883a 	mov	r6,r22
    371c:	e009883a 	mov	r4,fp
    3720:	0006aec0 	call	6aec <__lshift>
    3724:	102b883a 	mov	r21,r2
    3728:	d9c00e17 	ldw	r7,56(sp)
    372c:	3801211e 	bne	r7,zero,3bb4 <_dtoa_r+0xfbc>
    3730:	d9800617 	ldw	r6,24(sp)
    3734:	0181380e 	bge	zero,r6,3c18 <_dtoa_r+0x1020>
    3738:	d8c00b17 	ldw	r3,44(sp)
    373c:	1800ab1e 	bne	r3,zero,39ec <_dtoa_r+0xdf4>
    3740:	dc800717 	ldw	r18,28(sp)
    3744:	dcc00617 	ldw	r19,24(sp)
    3748:	9029883a 	mov	r20,r18
    374c:	00000206 	br	3758 <_dtoa_r+0xb60>
    3750:	00063800 	call	6380 <__multadd>
    3754:	1021883a 	mov	r16,r2
    3758:	a80b883a 	mov	r5,r21
    375c:	8009883a 	mov	r4,r16
    3760:	00029d00 	call	29d0 <quorem>
    3764:	10800c04 	addi	r2,r2,48
    3768:	90800005 	stb	r2,0(r18)
    376c:	94800044 	addi	r18,r18,1
    3770:	9507c83a 	sub	r3,r18,r20
    3774:	000f883a 	mov	r7,zero
    3778:	01800284 	movi	r6,10
    377c:	800b883a 	mov	r5,r16
    3780:	e009883a 	mov	r4,fp
    3784:	1cfff216 	blt	r3,r19,3750 <_dtoa_r+0xb58>
    3788:	1011883a 	mov	r8,r2
    378c:	d8800617 	ldw	r2,24(sp)
    3790:	0082370e 	bge	zero,r2,4070 <_dtoa_r+0x1478>
    3794:	d9000717 	ldw	r4,28(sp)
    3798:	0025883a 	mov	r18,zero
    379c:	20af883a 	add	r23,r4,r2
    37a0:	01800044 	movi	r6,1
    37a4:	800b883a 	mov	r5,r16
    37a8:	e009883a 	mov	r4,fp
    37ac:	da001715 	stw	r8,92(sp)
    37b0:	0006aec0 	call	6aec <__lshift>
    37b4:	a80b883a 	mov	r5,r21
    37b8:	1009883a 	mov	r4,r2
    37bc:	d8800915 	stw	r2,36(sp)
    37c0:	0006c340 	call	6c34 <__mcmp>
    37c4:	da001717 	ldw	r8,92(sp)
    37c8:	0081800e 	bge	zero,r2,3dcc <_dtoa_r+0x11d4>
    37cc:	b93fffc3 	ldbu	r4,-1(r23)
    37d0:	b8bfffc4 	addi	r2,r23,-1
    37d4:	1007883a 	mov	r3,r2
    37d8:	01800e44 	movi	r6,57
    37dc:	d9c00717 	ldw	r7,28(sp)
    37e0:	00000506 	br	37f8 <_dtoa_r+0xc00>
    37e4:	18ffffc4 	addi	r3,r3,-1
    37e8:	11c12326 	beq	r2,r7,3c78 <_dtoa_r+0x1080>
    37ec:	19000003 	ldbu	r4,0(r3)
    37f0:	102f883a 	mov	r23,r2
    37f4:	10bfffc4 	addi	r2,r2,-1
    37f8:	21403fcc 	andi	r5,r4,255
    37fc:	2940201c 	xori	r5,r5,128
    3800:	297fe004 	addi	r5,r5,-128
    3804:	29bff726 	beq	r5,r6,37e4 <_dtoa_r+0xbec>
    3808:	21000044 	addi	r4,r4,1
    380c:	11000005 	stb	r4,0(r2)
    3810:	a80b883a 	mov	r5,r21
    3814:	e009883a 	mov	r4,fp
    3818:	00063580 	call	6358 <_Bfree>
    381c:	883ea026 	beq	r17,zero,32a0 <_dtoa_r+0x6a8>
    3820:	90000426 	beq	r18,zero,3834 <_dtoa_r+0xc3c>
    3824:	94400326 	beq	r18,r17,3834 <_dtoa_r+0xc3c>
    3828:	900b883a 	mov	r5,r18
    382c:	e009883a 	mov	r4,fp
    3830:	00063580 	call	6358 <_Bfree>
    3834:	880b883a 	mov	r5,r17
    3838:	e009883a 	mov	r4,fp
    383c:	00063580 	call	6358 <_Bfree>
    3840:	003e9706 	br	32a0 <_dtoa_r+0x6a8>
    3844:	01800044 	movi	r6,1
    3848:	d9800e15 	stw	r6,56(sp)
    384c:	003d9606 	br	2ea8 <_dtoa_r+0x2b0>
    3850:	d8800817 	ldw	r2,32(sp)
    3854:	d8c00517 	ldw	r3,20(sp)
    3858:	d8000d15 	stw	zero,52(sp)
    385c:	10c5c83a 	sub	r2,r2,r3
    3860:	00c9c83a 	sub	r4,zero,r3
    3864:	d8800815 	stw	r2,32(sp)
    3868:	d9000a15 	stw	r4,40(sp)
    386c:	003d9706 	br	2ecc <_dtoa_r+0x2d4>
    3870:	05adc83a 	sub	r22,zero,r22
    3874:	dd800815 	stw	r22,32(sp)
    3878:	002d883a 	mov	r22,zero
    387c:	003d8e06 	br	2eb8 <_dtoa_r+0x2c0>
    3880:	d9000517 	ldw	r4,20(sp)
    3884:	000d0480 	call	d048 <__floatsidf>
    3888:	100d883a 	mov	r6,r2
    388c:	180f883a 	mov	r7,r3
    3890:	a009883a 	mov	r4,r20
    3894:	880b883a 	mov	r5,r17
    3898:	000bc080 	call	bc08 <__eqdf2>
    389c:	103d7126 	beq	r2,zero,2e64 <_dtoa_r+0x26c>
    38a0:	d9c00517 	ldw	r7,20(sp)
    38a4:	39ffffc4 	addi	r7,r7,-1
    38a8:	d9c00515 	stw	r7,20(sp)
    38ac:	003d6d06 	br	2e64 <_dtoa_r+0x26c>
    38b0:	dd400a17 	ldw	r21,40(sp)
    38b4:	dd000817 	ldw	r20,32(sp)
    38b8:	0023883a 	mov	r17,zero
    38bc:	003f4806 	br	35e0 <_dtoa_r+0x9e8>
    38c0:	10e3c83a 	sub	r17,r2,r3
    38c4:	9448983a 	sll	r4,r18,r17
    38c8:	003d3206 	br	2d94 <_dtoa_r+0x19c>
    38cc:	d8000e15 	stw	zero,56(sp)
    38d0:	003d7506 	br	2ea8 <_dtoa_r+0x2b0>
    38d4:	b005883a 	mov	r2,r22
    38d8:	003f4506 	br	35f0 <_dtoa_r+0x9f8>
    38dc:	dc000915 	stw	r16,36(sp)
    38e0:	d9800a17 	ldw	r6,40(sp)
    38e4:	d9400917 	ldw	r5,36(sp)
    38e8:	e009883a 	mov	r4,fp
    38ec:	00069ac0 	call	69ac <__pow5mult>
    38f0:	1021883a 	mov	r16,r2
    38f4:	003f5a06 	br	3660 <_dtoa_r+0xa68>
    38f8:	01c00044 	movi	r7,1
    38fc:	d9c00b15 	stw	r7,44(sp)
    3900:	d8802217 	ldw	r2,136(sp)
    3904:	0081280e 	bge	zero,r2,3da8 <_dtoa_r+0x11b0>
    3908:	100d883a 	mov	r6,r2
    390c:	1021883a 	mov	r16,r2
    3910:	d8800c15 	stw	r2,48(sp)
    3914:	d8800615 	stw	r2,24(sp)
    3918:	003d8806 	br	2f3c <_dtoa_r+0x344>
    391c:	d8800617 	ldw	r2,24(sp)
    3920:	00be9b16 	blt	zero,r2,3390 <_dtoa_r+0x798>
    3924:	10010f1e 	bne	r2,zero,3d64 <_dtoa_r+0x116c>
    3928:	880b883a 	mov	r5,r17
    392c:	000d883a 	mov	r6,zero
    3930:	01d00534 	movhi	r7,16404
    3934:	8009883a 	mov	r4,r16
    3938:	000be600 	call	be60 <__muldf3>
    393c:	900d883a 	mov	r6,r18
    3940:	980f883a 	mov	r7,r19
    3944:	1009883a 	mov	r4,r2
    3948:	180b883a 	mov	r5,r3
    394c:	000bc900 	call	bc90 <__gedf2>
    3950:	002b883a 	mov	r21,zero
    3954:	0023883a 	mov	r17,zero
    3958:	1000bf16 	blt	r2,zero,3c58 <_dtoa_r+0x1060>
    395c:	d9802217 	ldw	r6,136(sp)
    3960:	ddc00717 	ldw	r23,28(sp)
    3964:	018c303a 	nor	r6,zero,r6
    3968:	d9800515 	stw	r6,20(sp)
    396c:	a80b883a 	mov	r5,r21
    3970:	e009883a 	mov	r4,fp
    3974:	00063580 	call	6358 <_Bfree>
    3978:	883e4926 	beq	r17,zero,32a0 <_dtoa_r+0x6a8>
    397c:	003fad06 	br	3834 <_dtoa_r+0xc3c>
    3980:	d9c01117 	ldw	r7,68(sp)
    3984:	3801bc26 	beq	r7,zero,4078 <_dtoa_r+0x1480>
    3988:	10810cc4 	addi	r2,r2,1075
    398c:	dd400a17 	ldw	r21,40(sp)
    3990:	dd000817 	ldw	r20,32(sp)
    3994:	003f0a06 	br	35c0 <_dtoa_r+0x9c8>
    3998:	00800704 	movi	r2,28
    399c:	d9000817 	ldw	r4,32(sp)
    39a0:	a0a9883a 	add	r20,r20,r2
    39a4:	b0ad883a 	add	r22,r22,r2
    39a8:	2089883a 	add	r4,r4,r2
    39ac:	d9000815 	stw	r4,32(sp)
    39b0:	003f5106 	br	36f8 <_dtoa_r+0xb00>
    39b4:	d8c00317 	ldw	r3,12(sp)
    39b8:	b8c1fc0e 	bge	r23,r3,41ac <_dtoa_r+0x15b4>
    39bc:	0027883a 	mov	r19,zero
    39c0:	b805883a 	mov	r2,r23
    39c4:	003f3e06 	br	36c0 <_dtoa_r+0xac8>
    39c8:	880b883a 	mov	r5,r17
    39cc:	e009883a 	mov	r4,fp
    39d0:	000f883a 	mov	r7,zero
    39d4:	01800284 	movi	r6,10
    39d8:	00063800 	call	6380 <__multadd>
    39dc:	d9000c17 	ldw	r4,48(sp)
    39e0:	1023883a 	mov	r17,r2
    39e4:	0102040e 	bge	zero,r4,41f8 <_dtoa_r+0x1600>
    39e8:	d9000615 	stw	r4,24(sp)
    39ec:	0500050e 	bge	zero,r20,3a04 <_dtoa_r+0xe0c>
    39f0:	880b883a 	mov	r5,r17
    39f4:	a00d883a 	mov	r6,r20
    39f8:	e009883a 	mov	r4,fp
    39fc:	0006aec0 	call	6aec <__lshift>
    3a00:	1023883a 	mov	r17,r2
    3a04:	9801241e 	bne	r19,zero,3e98 <_dtoa_r+0x12a0>
    3a08:	8829883a 	mov	r20,r17
    3a0c:	d9000617 	ldw	r4,24(sp)
    3a10:	dcc00717 	ldw	r19,28(sp)
    3a14:	9480004c 	andi	r18,r18,1
    3a18:	20bfffc4 	addi	r2,r4,-1
    3a1c:	9885883a 	add	r2,r19,r2
    3a20:	d8800415 	stw	r2,16(sp)
    3a24:	dc800615 	stw	r18,24(sp)
    3a28:	a80b883a 	mov	r5,r21
    3a2c:	8009883a 	mov	r4,r16
    3a30:	00029d00 	call	29d0 <quorem>
    3a34:	880b883a 	mov	r5,r17
    3a38:	8009883a 	mov	r4,r16
    3a3c:	102f883a 	mov	r23,r2
    3a40:	0006c340 	call	6c34 <__mcmp>
    3a44:	a80b883a 	mov	r5,r21
    3a48:	a00d883a 	mov	r6,r20
    3a4c:	e009883a 	mov	r4,fp
    3a50:	102d883a 	mov	r22,r2
    3a54:	0006c940 	call	6c94 <__mdiff>
    3a58:	1007883a 	mov	r3,r2
    3a5c:	10800317 	ldw	r2,12(r2)
    3a60:	bc800c04 	addi	r18,r23,48
    3a64:	180b883a 	mov	r5,r3
    3a68:	10004e1e 	bne	r2,zero,3ba4 <_dtoa_r+0xfac>
    3a6c:	8009883a 	mov	r4,r16
    3a70:	d8c01615 	stw	r3,88(sp)
    3a74:	0006c340 	call	6c34 <__mcmp>
    3a78:	d8c01617 	ldw	r3,88(sp)
    3a7c:	e009883a 	mov	r4,fp
    3a80:	d8801615 	stw	r2,88(sp)
    3a84:	180b883a 	mov	r5,r3
    3a88:	00063580 	call	6358 <_Bfree>
    3a8c:	d8801617 	ldw	r2,88(sp)
    3a90:	1000041e 	bne	r2,zero,3aa4 <_dtoa_r+0xeac>
    3a94:	d9800317 	ldw	r6,12(sp)
    3a98:	3000021e 	bne	r6,zero,3aa4 <_dtoa_r+0xeac>
    3a9c:	d8c00617 	ldw	r3,24(sp)
    3aa0:	18003726 	beq	r3,zero,3b80 <_dtoa_r+0xf88>
    3aa4:	b0002016 	blt	r22,zero,3b28 <_dtoa_r+0xf30>
    3aa8:	b000041e 	bne	r22,zero,3abc <_dtoa_r+0xec4>
    3aac:	d9000317 	ldw	r4,12(sp)
    3ab0:	2000021e 	bne	r4,zero,3abc <_dtoa_r+0xec4>
    3ab4:	d8c00617 	ldw	r3,24(sp)
    3ab8:	18001b26 	beq	r3,zero,3b28 <_dtoa_r+0xf30>
    3abc:	00810716 	blt	zero,r2,3edc <_dtoa_r+0x12e4>
    3ac0:	d8c00417 	ldw	r3,16(sp)
    3ac4:	9d800044 	addi	r22,r19,1
    3ac8:	9c800005 	stb	r18,0(r19)
    3acc:	b02f883a 	mov	r23,r22
    3ad0:	98c10626 	beq	r19,r3,3eec <_dtoa_r+0x12f4>
    3ad4:	800b883a 	mov	r5,r16
    3ad8:	000f883a 	mov	r7,zero
    3adc:	01800284 	movi	r6,10
    3ae0:	e009883a 	mov	r4,fp
    3ae4:	00063800 	call	6380 <__multadd>
    3ae8:	1021883a 	mov	r16,r2
    3aec:	000f883a 	mov	r7,zero
    3af0:	01800284 	movi	r6,10
    3af4:	880b883a 	mov	r5,r17
    3af8:	e009883a 	mov	r4,fp
    3afc:	8d002526 	beq	r17,r20,3b94 <_dtoa_r+0xf9c>
    3b00:	00063800 	call	6380 <__multadd>
    3b04:	a00b883a 	mov	r5,r20
    3b08:	000f883a 	mov	r7,zero
    3b0c:	01800284 	movi	r6,10
    3b10:	e009883a 	mov	r4,fp
    3b14:	1023883a 	mov	r17,r2
    3b18:	00063800 	call	6380 <__multadd>
    3b1c:	1029883a 	mov	r20,r2
    3b20:	b027883a 	mov	r19,r22
    3b24:	003fc006 	br	3a28 <_dtoa_r+0xe30>
    3b28:	9011883a 	mov	r8,r18
    3b2c:	00800e0e 	bge	zero,r2,3b68 <_dtoa_r+0xf70>
    3b30:	800b883a 	mov	r5,r16
    3b34:	01800044 	movi	r6,1
    3b38:	e009883a 	mov	r4,fp
    3b3c:	da001715 	stw	r8,92(sp)
    3b40:	0006aec0 	call	6aec <__lshift>
    3b44:	a80b883a 	mov	r5,r21
    3b48:	1009883a 	mov	r4,r2
    3b4c:	1021883a 	mov	r16,r2
    3b50:	0006c340 	call	6c34 <__mcmp>
    3b54:	da001717 	ldw	r8,92(sp)
    3b58:	0081960e 	bge	zero,r2,41b4 <_dtoa_r+0x15bc>
    3b5c:	00800e44 	movi	r2,57
    3b60:	40817026 	beq	r8,r2,4124 <_dtoa_r+0x152c>
    3b64:	ba000c44 	addi	r8,r23,49
    3b68:	8825883a 	mov	r18,r17
    3b6c:	9dc00044 	addi	r23,r19,1
    3b70:	9a000005 	stb	r8,0(r19)
    3b74:	a023883a 	mov	r17,r20
    3b78:	dc000915 	stw	r16,36(sp)
    3b7c:	003f2406 	br	3810 <_dtoa_r+0xc18>
    3b80:	00800e44 	movi	r2,57
    3b84:	9011883a 	mov	r8,r18
    3b88:	90816626 	beq	r18,r2,4124 <_dtoa_r+0x152c>
    3b8c:	05bff516 	blt	zero,r22,3b64 <_dtoa_r+0xf6c>
    3b90:	003ff506 	br	3b68 <_dtoa_r+0xf70>
    3b94:	00063800 	call	6380 <__multadd>
    3b98:	1023883a 	mov	r17,r2
    3b9c:	1029883a 	mov	r20,r2
    3ba0:	003fdf06 	br	3b20 <_dtoa_r+0xf28>
    3ba4:	e009883a 	mov	r4,fp
    3ba8:	00063580 	call	6358 <_Bfree>
    3bac:	00800044 	movi	r2,1
    3bb0:	003fbc06 	br	3aa4 <_dtoa_r+0xeac>
    3bb4:	a80b883a 	mov	r5,r21
    3bb8:	8009883a 	mov	r4,r16
    3bbc:	0006c340 	call	6c34 <__mcmp>
    3bc0:	103edb0e 	bge	r2,zero,3730 <_dtoa_r+0xb38>
    3bc4:	800b883a 	mov	r5,r16
    3bc8:	000f883a 	mov	r7,zero
    3bcc:	01800284 	movi	r6,10
    3bd0:	e009883a 	mov	r4,fp
    3bd4:	00063800 	call	6380 <__multadd>
    3bd8:	1021883a 	mov	r16,r2
    3bdc:	d8800517 	ldw	r2,20(sp)
    3be0:	d8c00b17 	ldw	r3,44(sp)
    3be4:	10bfffc4 	addi	r2,r2,-1
    3be8:	d8800515 	stw	r2,20(sp)
    3bec:	183f761e 	bne	r3,zero,39c8 <_dtoa_r+0xdd0>
    3bf0:	d9000c17 	ldw	r4,48(sp)
    3bf4:	0101730e 	bge	zero,r4,41c4 <_dtoa_r+0x15cc>
    3bf8:	d9000615 	stw	r4,24(sp)
    3bfc:	003ed006 	br	3740 <_dtoa_r+0xb48>
    3c00:	00800084 	movi	r2,2
    3c04:	3081861e 	bne	r6,r2,4220 <_dtoa_r+0x1628>
    3c08:	d8000b15 	stw	zero,44(sp)
    3c0c:	003f3c06 	br	3900 <_dtoa_r+0xd08>
    3c10:	dc000917 	ldw	r16,36(sp)
    3c14:	003e9206 	br	3660 <_dtoa_r+0xa68>
    3c18:	d9c00317 	ldw	r7,12(sp)
    3c1c:	00800084 	movi	r2,2
    3c20:	11fec50e 	bge	r2,r7,3738 <_dtoa_r+0xb40>
    3c24:	d9000617 	ldw	r4,24(sp)
    3c28:	20013c1e 	bne	r4,zero,411c <_dtoa_r+0x1524>
    3c2c:	a80b883a 	mov	r5,r21
    3c30:	000f883a 	mov	r7,zero
    3c34:	01800144 	movi	r6,5
    3c38:	e009883a 	mov	r4,fp
    3c3c:	00063800 	call	6380 <__multadd>
    3c40:	100b883a 	mov	r5,r2
    3c44:	8009883a 	mov	r4,r16
    3c48:	102b883a 	mov	r21,r2
    3c4c:	0006c340 	call	6c34 <__mcmp>
    3c50:	dc000915 	stw	r16,36(sp)
    3c54:	00bf410e 	bge	zero,r2,395c <_dtoa_r+0xd64>
    3c58:	d9c00717 	ldw	r7,28(sp)
    3c5c:	00800c44 	movi	r2,49
    3c60:	38800005 	stb	r2,0(r7)
    3c64:	d8800517 	ldw	r2,20(sp)
    3c68:	3dc00044 	addi	r23,r7,1
    3c6c:	10800044 	addi	r2,r2,1
    3c70:	d8800515 	stw	r2,20(sp)
    3c74:	003f3d06 	br	396c <_dtoa_r+0xd74>
    3c78:	d9800517 	ldw	r6,20(sp)
    3c7c:	d9c00717 	ldw	r7,28(sp)
    3c80:	00800c44 	movi	r2,49
    3c84:	31800044 	addi	r6,r6,1
    3c88:	d9800515 	stw	r6,20(sp)
    3c8c:	38800005 	stb	r2,0(r7)
    3c90:	003edf06 	br	3810 <_dtoa_r+0xc18>
    3c94:	d8000b15 	stw	zero,44(sp)
    3c98:	003c9f06 	br	2f18 <_dtoa_r+0x320>
    3c9c:	903e7e1e 	bne	r18,zero,3698 <_dtoa_r+0xaa0>
    3ca0:	00800434 	movhi	r2,16
    3ca4:	10bfffc4 	addi	r2,r2,-1
    3ca8:	9884703a 	and	r2,r19,r2
    3cac:	1000ea1e 	bne	r2,zero,4058 <_dtoa_r+0x1460>
    3cb0:	9cdffc2c 	andhi	r19,r19,32752
    3cb4:	9800e826 	beq	r19,zero,4058 <_dtoa_r+0x1460>
    3cb8:	d9c00817 	ldw	r7,32(sp)
    3cbc:	b5800044 	addi	r22,r22,1
    3cc0:	04c00044 	movi	r19,1
    3cc4:	39c00044 	addi	r7,r7,1
    3cc8:	d9c00815 	stw	r7,32(sp)
    3ccc:	d8800d17 	ldw	r2,52(sp)
    3cd0:	103e721e 	bne	r2,zero,369c <_dtoa_r+0xaa4>
    3cd4:	00800044 	movi	r2,1
    3cd8:	003e7906 	br	36c0 <_dtoa_r+0xac8>
    3cdc:	8009883a 	mov	r4,r16
    3ce0:	000d0480 	call	d048 <__floatsidf>
    3ce4:	d9800f17 	ldw	r6,60(sp)
    3ce8:	d9c01017 	ldw	r7,64(sp)
    3cec:	1009883a 	mov	r4,r2
    3cf0:	180b883a 	mov	r5,r3
    3cf4:	000be600 	call	be60 <__muldf3>
    3cf8:	000d883a 	mov	r6,zero
    3cfc:	01d00734 	movhi	r7,16412
    3d00:	1009883a 	mov	r4,r2
    3d04:	180b883a 	mov	r5,r3
    3d08:	000a98c0 	call	a98c <__adddf3>
    3d0c:	047f3034 	movhi	r17,64704
    3d10:	1021883a 	mov	r16,r2
    3d14:	1c63883a 	add	r17,r3,r17
    3d18:	d9000f17 	ldw	r4,60(sp)
    3d1c:	d9401017 	ldw	r5,64(sp)
    3d20:	000d883a 	mov	r6,zero
    3d24:	01d00534 	movhi	r7,16404
    3d28:	000c6cc0 	call	c6cc <__subdf3>
    3d2c:	800d883a 	mov	r6,r16
    3d30:	880f883a 	mov	r7,r17
    3d34:	1009883a 	mov	r4,r2
    3d38:	180b883a 	mov	r5,r3
    3d3c:	102b883a 	mov	r21,r2
    3d40:	1829883a 	mov	r20,r3
    3d44:	000bc900 	call	bc90 <__gedf2>
    3d48:	00806c16 	blt	zero,r2,3efc <_dtoa_r+0x1304>
    3d4c:	89e0003c 	xorhi	r7,r17,32768
    3d50:	800d883a 	mov	r6,r16
    3d54:	a809883a 	mov	r4,r21
    3d58:	a00b883a 	mov	r5,r20
    3d5c:	000bd6c0 	call	bd6c <__ledf2>
    3d60:	103d7e0e 	bge	r2,zero,335c <_dtoa_r+0x764>
    3d64:	002b883a 	mov	r21,zero
    3d68:	0023883a 	mov	r17,zero
    3d6c:	003efb06 	br	395c <_dtoa_r+0xd64>
    3d70:	d8800717 	ldw	r2,28(sp)
    3d74:	003bd006 	br	2cb8 <_dtoa_r+0xc0>
    3d78:	d9000a17 	ldw	r4,40(sp)
    3d7c:	d9800d17 	ldw	r6,52(sp)
    3d80:	dd400a15 	stw	r21,40(sp)
    3d84:	a905c83a 	sub	r2,r21,r4
    3d88:	308d883a 	add	r6,r6,r2
    3d8c:	d9800d15 	stw	r6,52(sp)
    3d90:	002b883a 	mov	r21,zero
    3d94:	003e0606 	br	35b0 <_dtoa_r+0x9b8>
    3d98:	9023883a 	mov	r17,r18
    3d9c:	9829883a 	mov	r20,r19
    3da0:	04000084 	movi	r16,2
    3da4:	003c9206 	br	2ff0 <_dtoa_r+0x3f8>
    3da8:	04000044 	movi	r16,1
    3dac:	dc000c15 	stw	r16,48(sp)
    3db0:	dc000615 	stw	r16,24(sp)
    3db4:	dc002215 	stw	r16,136(sp)
    3db8:	e0001115 	stw	zero,68(fp)
    3dbc:	000b883a 	mov	r5,zero
    3dc0:	003c6906 	br	2f68 <_dtoa_r+0x370>
    3dc4:	3021883a 	mov	r16,r6
    3dc8:	003ffb06 	br	3db8 <_dtoa_r+0x11c0>
    3dcc:	1000021e 	bne	r2,zero,3dd8 <_dtoa_r+0x11e0>
    3dd0:	4200004c 	andi	r8,r8,1
    3dd4:	403e7d1e 	bne	r8,zero,37cc <_dtoa_r+0xbd4>
    3dd8:	01000c04 	movi	r4,48
    3ddc:	00000106 	br	3de4 <_dtoa_r+0x11ec>
    3de0:	102f883a 	mov	r23,r2
    3de4:	b8bfffc4 	addi	r2,r23,-1
    3de8:	10c00007 	ldb	r3,0(r2)
    3dec:	193ffc26 	beq	r3,r4,3de0 <_dtoa_r+0x11e8>
    3df0:	003e8706 	br	3810 <_dtoa_r+0xc18>
    3df4:	d8800517 	ldw	r2,20(sp)
    3df8:	00a3c83a 	sub	r17,zero,r2
    3dfc:	8800a426 	beq	r17,zero,4090 <_dtoa_r+0x1498>
    3e00:	888003cc 	andi	r2,r17,15
    3e04:	100490fa 	slli	r2,r2,3
    3e08:	00c10034 	movhi	r3,1024
    3e0c:	18c04604 	addi	r3,r3,280
    3e10:	1885883a 	add	r2,r3,r2
    3e14:	11800017 	ldw	r6,0(r2)
    3e18:	11c00117 	ldw	r7,4(r2)
    3e1c:	9009883a 	mov	r4,r18
    3e20:	980b883a 	mov	r5,r19
    3e24:	8823d13a 	srai	r17,r17,4
    3e28:	000be600 	call	be60 <__muldf3>
    3e2c:	d8800f15 	stw	r2,60(sp)
    3e30:	d8c01015 	stw	r3,64(sp)
    3e34:	8800e826 	beq	r17,zero,41d8 <_dtoa_r+0x15e0>
    3e38:	05010034 	movhi	r20,1024
    3e3c:	a5003c04 	addi	r20,r20,240
    3e40:	04000084 	movi	r16,2
    3e44:	8980004c 	andi	r6,r17,1
    3e48:	1009883a 	mov	r4,r2
    3e4c:	8823d07a 	srai	r17,r17,1
    3e50:	180b883a 	mov	r5,r3
    3e54:	30000426 	beq	r6,zero,3e68 <_dtoa_r+0x1270>
    3e58:	a1800017 	ldw	r6,0(r20)
    3e5c:	a1c00117 	ldw	r7,4(r20)
    3e60:	84000044 	addi	r16,r16,1
    3e64:	000be600 	call	be60 <__muldf3>
    3e68:	a5000204 	addi	r20,r20,8
    3e6c:	883ff51e 	bne	r17,zero,3e44 <_dtoa_r+0x124c>
    3e70:	d8800f15 	stw	r2,60(sp)
    3e74:	d8c01015 	stw	r3,64(sp)
    3e78:	003c7606 	br	3054 <_dtoa_r+0x45c>
    3e7c:	00c00c04 	movi	r3,48
    3e80:	10c00005 	stb	r3,0(r2)
    3e84:	d8c00517 	ldw	r3,20(sp)
    3e88:	bd3fffc3 	ldbu	r20,-1(r23)
    3e8c:	18c00044 	addi	r3,r3,1
    3e90:	d8c00515 	stw	r3,20(sp)
    3e94:	003db906 	br	357c <_dtoa_r+0x984>
    3e98:	89400117 	ldw	r5,4(r17)
    3e9c:	e009883a 	mov	r4,fp
    3ea0:	00062b00 	call	62b0 <_Balloc>
    3ea4:	89800417 	ldw	r6,16(r17)
    3ea8:	89400304 	addi	r5,r17,12
    3eac:	11000304 	addi	r4,r2,12
    3eb0:	31800084 	addi	r6,r6,2
    3eb4:	318d883a 	add	r6,r6,r6
    3eb8:	318d883a 	add	r6,r6,r6
    3ebc:	1027883a 	mov	r19,r2
    3ec0:	0005ee40 	call	5ee4 <memcpy>
    3ec4:	01800044 	movi	r6,1
    3ec8:	980b883a 	mov	r5,r19
    3ecc:	e009883a 	mov	r4,fp
    3ed0:	0006aec0 	call	6aec <__lshift>
    3ed4:	1029883a 	mov	r20,r2
    3ed8:	003ecc06 	br	3a0c <_dtoa_r+0xe14>
    3edc:	00800e44 	movi	r2,57
    3ee0:	90809026 	beq	r18,r2,4124 <_dtoa_r+0x152c>
    3ee4:	92000044 	addi	r8,r18,1
    3ee8:	003f1f06 	br	3b68 <_dtoa_r+0xf70>
    3eec:	9011883a 	mov	r8,r18
    3ef0:	8825883a 	mov	r18,r17
    3ef4:	a023883a 	mov	r17,r20
    3ef8:	003e2906 	br	37a0 <_dtoa_r+0xba8>
    3efc:	002b883a 	mov	r21,zero
    3f00:	0023883a 	mov	r17,zero
    3f04:	003f5406 	br	3c58 <_dtoa_r+0x1060>
    3f08:	61bfffc4 	addi	r6,r12,-1
    3f0c:	300490fa 	slli	r2,r6,3
    3f10:	00c10034 	movhi	r3,1024
    3f14:	18c04604 	addi	r3,r3,280
    3f18:	1885883a 	add	r2,r3,r2
    3f1c:	11000017 	ldw	r4,0(r2)
    3f20:	11400117 	ldw	r5,4(r2)
    3f24:	d8800717 	ldw	r2,28(sp)
    3f28:	880f883a 	mov	r7,r17
    3f2c:	d9801215 	stw	r6,72(sp)
    3f30:	800d883a 	mov	r6,r16
    3f34:	db001615 	stw	r12,88(sp)
    3f38:	15c00044 	addi	r23,r2,1
    3f3c:	000be600 	call	be60 <__muldf3>
    3f40:	d9401017 	ldw	r5,64(sp)
    3f44:	d9000f17 	ldw	r4,60(sp)
    3f48:	d8c01515 	stw	r3,84(sp)
    3f4c:	d8801415 	stw	r2,80(sp)
    3f50:	000cfc80 	call	cfc8 <__fixdfsi>
    3f54:	1009883a 	mov	r4,r2
    3f58:	1021883a 	mov	r16,r2
    3f5c:	000d0480 	call	d048 <__floatsidf>
    3f60:	d9000f17 	ldw	r4,60(sp)
    3f64:	d9401017 	ldw	r5,64(sp)
    3f68:	100d883a 	mov	r6,r2
    3f6c:	180f883a 	mov	r7,r3
    3f70:	000c6cc0 	call	c6cc <__subdf3>
    3f74:	1829883a 	mov	r20,r3
    3f78:	d8c00717 	ldw	r3,28(sp)
    3f7c:	84000c04 	addi	r16,r16,48
    3f80:	1023883a 	mov	r17,r2
    3f84:	1c000005 	stb	r16,0(r3)
    3f88:	db001617 	ldw	r12,88(sp)
    3f8c:	00800044 	movi	r2,1
    3f90:	60802226 	beq	r12,r2,401c <_dtoa_r+0x1424>
    3f94:	d9c00717 	ldw	r7,28(sp)
    3f98:	8805883a 	mov	r2,r17
    3f9c:	b82b883a 	mov	r21,r23
    3fa0:	3b19883a 	add	r12,r7,r12
    3fa4:	6023883a 	mov	r17,r12
    3fa8:	a007883a 	mov	r3,r20
    3fac:	dc800f15 	stw	r18,60(sp)
    3fb0:	000d883a 	mov	r6,zero
    3fb4:	01d00934 	movhi	r7,16420
    3fb8:	1009883a 	mov	r4,r2
    3fbc:	180b883a 	mov	r5,r3
    3fc0:	000be600 	call	be60 <__muldf3>
    3fc4:	180b883a 	mov	r5,r3
    3fc8:	1009883a 	mov	r4,r2
    3fcc:	1829883a 	mov	r20,r3
    3fd0:	1025883a 	mov	r18,r2
    3fd4:	000cfc80 	call	cfc8 <__fixdfsi>
    3fd8:	1009883a 	mov	r4,r2
    3fdc:	1021883a 	mov	r16,r2
    3fe0:	000d0480 	call	d048 <__floatsidf>
    3fe4:	100d883a 	mov	r6,r2
    3fe8:	180f883a 	mov	r7,r3
    3fec:	9009883a 	mov	r4,r18
    3ff0:	a00b883a 	mov	r5,r20
    3ff4:	84000c04 	addi	r16,r16,48
    3ff8:	000c6cc0 	call	c6cc <__subdf3>
    3ffc:	ad400044 	addi	r21,r21,1
    4000:	ac3fffc5 	stb	r16,-1(r21)
    4004:	ac7fea1e 	bne	r21,r17,3fb0 <_dtoa_r+0x13b8>
    4008:	1023883a 	mov	r17,r2
    400c:	d8801217 	ldw	r2,72(sp)
    4010:	dc800f17 	ldw	r18,60(sp)
    4014:	1829883a 	mov	r20,r3
    4018:	b8af883a 	add	r23,r23,r2
    401c:	d9001417 	ldw	r4,80(sp)
    4020:	d9401517 	ldw	r5,84(sp)
    4024:	000d883a 	mov	r6,zero
    4028:	01cff834 	movhi	r7,16352
    402c:	000a98c0 	call	a98c <__adddf3>
    4030:	880d883a 	mov	r6,r17
    4034:	a00f883a 	mov	r7,r20
    4038:	1009883a 	mov	r4,r2
    403c:	180b883a 	mov	r5,r3
    4040:	000bd6c0 	call	bd6c <__ledf2>
    4044:	10003e0e 	bge	r2,zero,4140 <_dtoa_r+0x1548>
    4048:	d9001317 	ldw	r4,76(sp)
    404c:	bd3fffc3 	ldbu	r20,-1(r23)
    4050:	d9000515 	stw	r4,20(sp)
    4054:	003d3b06 	br	3544 <_dtoa_r+0x94c>
    4058:	0027883a 	mov	r19,zero
    405c:	003f1b06 	br	3ccc <_dtoa_r+0x10d4>
    4060:	d8800817 	ldw	r2,32(sp)
    4064:	11e9c83a 	sub	r20,r2,r7
    4068:	0005883a 	mov	r2,zero
    406c:	003d5406 	br	35c0 <_dtoa_r+0x9c8>
    4070:	00800044 	movi	r2,1
    4074:	003dc706 	br	3794 <_dtoa_r+0xb9c>
    4078:	d8c00217 	ldw	r3,8(sp)
    407c:	00800d84 	movi	r2,54
    4080:	dd400a17 	ldw	r21,40(sp)
    4084:	10c5c83a 	sub	r2,r2,r3
    4088:	dd000817 	ldw	r20,32(sp)
    408c:	003d4c06 	br	35c0 <_dtoa_r+0x9c8>
    4090:	dc800f15 	stw	r18,60(sp)
    4094:	dcc01015 	stw	r19,64(sp)
    4098:	04000084 	movi	r16,2
    409c:	003bed06 	br	3054 <_dtoa_r+0x45c>
    40a0:	d9000617 	ldw	r4,24(sp)
    40a4:	203f0d26 	beq	r4,zero,3cdc <_dtoa_r+0x10e4>
    40a8:	d9800c17 	ldw	r6,48(sp)
    40ac:	01bcab0e 	bge	zero,r6,335c <_dtoa_r+0x764>
    40b0:	d9401017 	ldw	r5,64(sp)
    40b4:	d9000f17 	ldw	r4,60(sp)
    40b8:	000d883a 	mov	r6,zero
    40bc:	01d00934 	movhi	r7,16420
    40c0:	000be600 	call	be60 <__muldf3>
    40c4:	81000044 	addi	r4,r16,1
    40c8:	d8800f15 	stw	r2,60(sp)
    40cc:	d8c01015 	stw	r3,64(sp)
    40d0:	000d0480 	call	d048 <__floatsidf>
    40d4:	d9800f17 	ldw	r6,60(sp)
    40d8:	d9c01017 	ldw	r7,64(sp)
    40dc:	1009883a 	mov	r4,r2
    40e0:	180b883a 	mov	r5,r3
    40e4:	000be600 	call	be60 <__muldf3>
    40e8:	01d00734 	movhi	r7,16412
    40ec:	000d883a 	mov	r6,zero
    40f0:	1009883a 	mov	r4,r2
    40f4:	180b883a 	mov	r5,r3
    40f8:	000a98c0 	call	a98c <__adddf3>
    40fc:	d9c00517 	ldw	r7,20(sp)
    4100:	047f3034 	movhi	r17,64704
    4104:	1021883a 	mov	r16,r2
    4108:	39ffffc4 	addi	r7,r7,-1
    410c:	d9c01315 	stw	r7,76(sp)
    4110:	1c63883a 	add	r17,r3,r17
    4114:	db000c17 	ldw	r12,48(sp)
    4118:	003bea06 	br	30c4 <_dtoa_r+0x4cc>
    411c:	dc000915 	stw	r16,36(sp)
    4120:	003e0e06 	br	395c <_dtoa_r+0xd64>
    4124:	01000e44 	movi	r4,57
    4128:	8825883a 	mov	r18,r17
    412c:	9dc00044 	addi	r23,r19,1
    4130:	99000005 	stb	r4,0(r19)
    4134:	a023883a 	mov	r17,r20
    4138:	dc000915 	stw	r16,36(sp)
    413c:	003da406 	br	37d0 <_dtoa_r+0xbd8>
    4140:	d9801417 	ldw	r6,80(sp)
    4144:	d9c01517 	ldw	r7,84(sp)
    4148:	0009883a 	mov	r4,zero
    414c:	014ff834 	movhi	r5,16352
    4150:	000c6cc0 	call	c6cc <__subdf3>
    4154:	880d883a 	mov	r6,r17
    4158:	a00f883a 	mov	r7,r20
    415c:	1009883a 	mov	r4,r2
    4160:	180b883a 	mov	r5,r3
    4164:	000bc900 	call	bc90 <__gedf2>
    4168:	00bc7c0e 	bge	zero,r2,335c <_dtoa_r+0x764>
    416c:	01000c04 	movi	r4,48
    4170:	00000106 	br	4178 <_dtoa_r+0x1580>
    4174:	102f883a 	mov	r23,r2
    4178:	b8bfffc4 	addi	r2,r23,-1
    417c:	10c00007 	ldb	r3,0(r2)
    4180:	193ffc26 	beq	r3,r4,4174 <_dtoa_r+0x157c>
    4184:	d9801317 	ldw	r6,76(sp)
    4188:	d9800515 	stw	r6,20(sp)
    418c:	003c4406 	br	32a0 <_dtoa_r+0x6a8>
    4190:	d9801317 	ldw	r6,76(sp)
    4194:	d9800515 	stw	r6,20(sp)
    4198:	003cea06 	br	3544 <_dtoa_r+0x94c>
    419c:	dd800f17 	ldw	r22,60(sp)
    41a0:	dcc01017 	ldw	r19,64(sp)
    41a4:	dc801217 	ldw	r18,72(sp)
    41a8:	003c6c06 	br	335c <_dtoa_r+0x764>
    41ac:	903e031e 	bne	r18,zero,39bc <_dtoa_r+0xdc4>
    41b0:	003ebb06 	br	3ca0 <_dtoa_r+0x10a8>
    41b4:	103e6c1e 	bne	r2,zero,3b68 <_dtoa_r+0xf70>
    41b8:	4080004c 	andi	r2,r8,1
    41bc:	103e6a26 	beq	r2,zero,3b68 <_dtoa_r+0xf70>
    41c0:	003e6606 	br	3b5c <_dtoa_r+0xf64>
    41c4:	d8c00317 	ldw	r3,12(sp)
    41c8:	00800084 	movi	r2,2
    41cc:	10c02916 	blt	r2,r3,4274 <_dtoa_r+0x167c>
    41d0:	d9000c17 	ldw	r4,48(sp)
    41d4:	003e8806 	br	3bf8 <_dtoa_r+0x1000>
    41d8:	04000084 	movi	r16,2
    41dc:	003b9d06 	br	3054 <_dtoa_r+0x45c>
    41e0:	d9001317 	ldw	r4,76(sp)
    41e4:	d9000515 	stw	r4,20(sp)
    41e8:	003cd606 	br	3544 <_dtoa_r+0x94c>
    41ec:	d8801317 	ldw	r2,76(sp)
    41f0:	d8800515 	stw	r2,20(sp)
    41f4:	003c2a06 	br	32a0 <_dtoa_r+0x6a8>
    41f8:	d9800317 	ldw	r6,12(sp)
    41fc:	00800084 	movi	r2,2
    4200:	11801516 	blt	r2,r6,4258 <_dtoa_r+0x1660>
    4204:	d9c00c17 	ldw	r7,48(sp)
    4208:	d9c00615 	stw	r7,24(sp)
    420c:	003df706 	br	39ec <_dtoa_r+0xdf4>
    4210:	193d3926 	beq	r3,r4,36f8 <_dtoa_r+0xb00>
    4214:	00c00f04 	movi	r3,60
    4218:	1885c83a 	sub	r2,r3,r2
    421c:	003ddf06 	br	399c <_dtoa_r+0xda4>
    4220:	e009883a 	mov	r4,fp
    4224:	e0001115 	stw	zero,68(fp)
    4228:	000b883a 	mov	r5,zero
    422c:	00062b00 	call	62b0 <_Balloc>
    4230:	d8800715 	stw	r2,28(sp)
    4234:	d8c00717 	ldw	r3,28(sp)
    4238:	00bfffc4 	movi	r2,-1
    423c:	01000044 	movi	r4,1
    4240:	d8800c15 	stw	r2,48(sp)
    4244:	e0c01015 	stw	r3,64(fp)
    4248:	d9000b15 	stw	r4,44(sp)
    424c:	d8800615 	stw	r2,24(sp)
    4250:	d8002215 	stw	zero,136(sp)
    4254:	003c4106 	br	335c <_dtoa_r+0x764>
    4258:	d8c00c17 	ldw	r3,48(sp)
    425c:	d8c00615 	stw	r3,24(sp)
    4260:	003e7006 	br	3c24 <_dtoa_r+0x102c>
    4264:	04400044 	movi	r17,1
    4268:	003b2006 	br	2eec <_dtoa_r+0x2f4>
    426c:	000b883a 	mov	r5,zero
    4270:	003b3d06 	br	2f68 <_dtoa_r+0x370>
    4274:	d8800c17 	ldw	r2,48(sp)
    4278:	d8800615 	stw	r2,24(sp)
    427c:	003e6906 	br	3c24 <_dtoa_r+0x102c>

00004280 <__sflush_r>:
    4280:	2880030b 	ldhu	r2,12(r5)
    4284:	defffb04 	addi	sp,sp,-20
    4288:	dcc00315 	stw	r19,12(sp)
    428c:	dc400115 	stw	r17,4(sp)
    4290:	dfc00415 	stw	ra,16(sp)
    4294:	dc800215 	stw	r18,8(sp)
    4298:	dc000015 	stw	r16,0(sp)
    429c:	10c0020c 	andi	r3,r2,8
    42a0:	2823883a 	mov	r17,r5
    42a4:	2027883a 	mov	r19,r4
    42a8:	1800311e 	bne	r3,zero,4370 <__sflush_r+0xf0>
    42ac:	28c00117 	ldw	r3,4(r5)
    42b0:	10820014 	ori	r2,r2,2048
    42b4:	2880030d 	sth	r2,12(r5)
    42b8:	00c04b0e 	bge	zero,r3,43e8 <__sflush_r+0x168>
    42bc:	8a000a17 	ldw	r8,40(r17)
    42c0:	40002326 	beq	r8,zero,4350 <__sflush_r+0xd0>
    42c4:	9c000017 	ldw	r16,0(r19)
    42c8:	10c4000c 	andi	r3,r2,4096
    42cc:	98000015 	stw	zero,0(r19)
    42d0:	18004826 	beq	r3,zero,43f4 <__sflush_r+0x174>
    42d4:	89801417 	ldw	r6,80(r17)
    42d8:	10c0010c 	andi	r3,r2,4
    42dc:	18000626 	beq	r3,zero,42f8 <__sflush_r+0x78>
    42e0:	88c00117 	ldw	r3,4(r17)
    42e4:	88800c17 	ldw	r2,48(r17)
    42e8:	30cdc83a 	sub	r6,r6,r3
    42ec:	10000226 	beq	r2,zero,42f8 <__sflush_r+0x78>
    42f0:	88800f17 	ldw	r2,60(r17)
    42f4:	308dc83a 	sub	r6,r6,r2
    42f8:	89400717 	ldw	r5,28(r17)
    42fc:	000f883a 	mov	r7,zero
    4300:	9809883a 	mov	r4,r19
    4304:	403ee83a 	callr	r8
    4308:	00ffffc4 	movi	r3,-1
    430c:	10c04426 	beq	r2,r3,4420 <__sflush_r+0x1a0>
    4310:	88c0030b 	ldhu	r3,12(r17)
    4314:	89000417 	ldw	r4,16(r17)
    4318:	88000115 	stw	zero,4(r17)
    431c:	197dffcc 	andi	r5,r3,63487
    4320:	8940030d 	sth	r5,12(r17)
    4324:	89000015 	stw	r4,0(r17)
    4328:	18c4000c 	andi	r3,r3,4096
    432c:	18002c1e 	bne	r3,zero,43e0 <__sflush_r+0x160>
    4330:	89400c17 	ldw	r5,48(r17)
    4334:	9c000015 	stw	r16,0(r19)
    4338:	28000526 	beq	r5,zero,4350 <__sflush_r+0xd0>
    433c:	88801004 	addi	r2,r17,64
    4340:	28800226 	beq	r5,r2,434c <__sflush_r+0xcc>
    4344:	9809883a 	mov	r4,r19
    4348:	00049fc0 	call	49fc <_free_r>
    434c:	88000c15 	stw	zero,48(r17)
    4350:	0005883a 	mov	r2,zero
    4354:	dfc00417 	ldw	ra,16(sp)
    4358:	dcc00317 	ldw	r19,12(sp)
    435c:	dc800217 	ldw	r18,8(sp)
    4360:	dc400117 	ldw	r17,4(sp)
    4364:	dc000017 	ldw	r16,0(sp)
    4368:	dec00504 	addi	sp,sp,20
    436c:	f800283a 	ret
    4370:	2c800417 	ldw	r18,16(r5)
    4374:	903ff626 	beq	r18,zero,4350 <__sflush_r+0xd0>
    4378:	2c000017 	ldw	r16,0(r5)
    437c:	108000cc 	andi	r2,r2,3
    4380:	2c800015 	stw	r18,0(r5)
    4384:	84a1c83a 	sub	r16,r16,r18
    4388:	1000131e 	bne	r2,zero,43d8 <__sflush_r+0x158>
    438c:	28800517 	ldw	r2,20(r5)
    4390:	88800215 	stw	r2,8(r17)
    4394:	04000316 	blt	zero,r16,43a4 <__sflush_r+0x124>
    4398:	003fed06 	br	4350 <__sflush_r+0xd0>
    439c:	90a5883a 	add	r18,r18,r2
    43a0:	043feb0e 	bge	zero,r16,4350 <__sflush_r+0xd0>
    43a4:	88800917 	ldw	r2,36(r17)
    43a8:	89400717 	ldw	r5,28(r17)
    43ac:	800f883a 	mov	r7,r16
    43b0:	900d883a 	mov	r6,r18
    43b4:	9809883a 	mov	r4,r19
    43b8:	103ee83a 	callr	r2
    43bc:	80a1c83a 	sub	r16,r16,r2
    43c0:	00bff616 	blt	zero,r2,439c <__sflush_r+0x11c>
    43c4:	88c0030b 	ldhu	r3,12(r17)
    43c8:	00bfffc4 	movi	r2,-1
    43cc:	18c01014 	ori	r3,r3,64
    43d0:	88c0030d 	sth	r3,12(r17)
    43d4:	003fdf06 	br	4354 <__sflush_r+0xd4>
    43d8:	0005883a 	mov	r2,zero
    43dc:	003fec06 	br	4390 <__sflush_r+0x110>
    43e0:	88801415 	stw	r2,80(r17)
    43e4:	003fd206 	br	4330 <__sflush_r+0xb0>
    43e8:	28c00f17 	ldw	r3,60(r5)
    43ec:	00ffb316 	blt	zero,r3,42bc <__sflush_r+0x3c>
    43f0:	003fd706 	br	4350 <__sflush_r+0xd0>
    43f4:	89400717 	ldw	r5,28(r17)
    43f8:	000d883a 	mov	r6,zero
    43fc:	01c00044 	movi	r7,1
    4400:	9809883a 	mov	r4,r19
    4404:	403ee83a 	callr	r8
    4408:	100d883a 	mov	r6,r2
    440c:	00bfffc4 	movi	r2,-1
    4410:	30801426 	beq	r6,r2,4464 <__sflush_r+0x1e4>
    4414:	8880030b 	ldhu	r2,12(r17)
    4418:	8a000a17 	ldw	r8,40(r17)
    441c:	003fae06 	br	42d8 <__sflush_r+0x58>
    4420:	98c00017 	ldw	r3,0(r19)
    4424:	183fba26 	beq	r3,zero,4310 <__sflush_r+0x90>
    4428:	01000744 	movi	r4,29
    442c:	19000626 	beq	r3,r4,4448 <__sflush_r+0x1c8>
    4430:	01000584 	movi	r4,22
    4434:	19000426 	beq	r3,r4,4448 <__sflush_r+0x1c8>
    4438:	88c0030b 	ldhu	r3,12(r17)
    443c:	18c01014 	ori	r3,r3,64
    4440:	88c0030d 	sth	r3,12(r17)
    4444:	003fc306 	br	4354 <__sflush_r+0xd4>
    4448:	8880030b 	ldhu	r2,12(r17)
    444c:	88c00417 	ldw	r3,16(r17)
    4450:	88000115 	stw	zero,4(r17)
    4454:	10bdffcc 	andi	r2,r2,63487
    4458:	8880030d 	sth	r2,12(r17)
    445c:	88c00015 	stw	r3,0(r17)
    4460:	003fb306 	br	4330 <__sflush_r+0xb0>
    4464:	98800017 	ldw	r2,0(r19)
    4468:	103fea26 	beq	r2,zero,4414 <__sflush_r+0x194>
    446c:	00c00744 	movi	r3,29
    4470:	10c00226 	beq	r2,r3,447c <__sflush_r+0x1fc>
    4474:	00c00584 	movi	r3,22
    4478:	10c0031e 	bne	r2,r3,4488 <__sflush_r+0x208>
    447c:	9c000015 	stw	r16,0(r19)
    4480:	0005883a 	mov	r2,zero
    4484:	003fb306 	br	4354 <__sflush_r+0xd4>
    4488:	88c0030b 	ldhu	r3,12(r17)
    448c:	3005883a 	mov	r2,r6
    4490:	18c01014 	ori	r3,r3,64
    4494:	88c0030d 	sth	r3,12(r17)
    4498:	003fae06 	br	4354 <__sflush_r+0xd4>

0000449c <_fflush_r>:
    449c:	defffd04 	addi	sp,sp,-12
    44a0:	dc000115 	stw	r16,4(sp)
    44a4:	dfc00215 	stw	ra,8(sp)
    44a8:	2021883a 	mov	r16,r4
    44ac:	20000226 	beq	r4,zero,44b8 <_fflush_r+0x1c>
    44b0:	20800e17 	ldw	r2,56(r4)
    44b4:	10000c26 	beq	r2,zero,44e8 <_fflush_r+0x4c>
    44b8:	2880030f 	ldh	r2,12(r5)
    44bc:	1000051e 	bne	r2,zero,44d4 <_fflush_r+0x38>
    44c0:	0005883a 	mov	r2,zero
    44c4:	dfc00217 	ldw	ra,8(sp)
    44c8:	dc000117 	ldw	r16,4(sp)
    44cc:	dec00304 	addi	sp,sp,12
    44d0:	f800283a 	ret
    44d4:	8009883a 	mov	r4,r16
    44d8:	dfc00217 	ldw	ra,8(sp)
    44dc:	dc000117 	ldw	r16,4(sp)
    44e0:	dec00304 	addi	sp,sp,12
    44e4:	00042801 	jmpi	4280 <__sflush_r>
    44e8:	d9400015 	stw	r5,0(sp)
    44ec:	00048880 	call	4888 <__sinit>
    44f0:	d9400017 	ldw	r5,0(sp)
    44f4:	003ff006 	br	44b8 <_fflush_r+0x1c>

000044f8 <fflush>:
    44f8:	20000526 	beq	r4,zero,4510 <fflush+0x18>
    44fc:	00810034 	movhi	r2,1024
    4500:	10877904 	addi	r2,r2,7652
    4504:	200b883a 	mov	r5,r4
    4508:	11000017 	ldw	r4,0(r2)
    450c:	000449c1 	jmpi	449c <_fflush_r>
    4510:	00810034 	movhi	r2,1024
    4514:	10877804 	addi	r2,r2,7648
    4518:	11000017 	ldw	r4,0(r2)
    451c:	01400034 	movhi	r5,0
    4520:	29512704 	addi	r5,r5,17564
    4524:	00052981 	jmpi	5298 <_fwalk_reent>

00004528 <__fp_unlock>:
    4528:	0005883a 	mov	r2,zero
    452c:	f800283a 	ret

00004530 <_cleanup_r>:
    4530:	01400074 	movhi	r5,1
    4534:	29650d04 	addi	r5,r5,-27596
    4538:	00052981 	jmpi	5298 <_fwalk_reent>

0000453c <__sinit.part.1>:
    453c:	defff704 	addi	sp,sp,-36
    4540:	00c00034 	movhi	r3,0
    4544:	dfc00815 	stw	ra,32(sp)
    4548:	ddc00715 	stw	r23,28(sp)
    454c:	dd800615 	stw	r22,24(sp)
    4550:	dd400515 	stw	r21,20(sp)
    4554:	dd000415 	stw	r20,16(sp)
    4558:	dcc00315 	stw	r19,12(sp)
    455c:	dc800215 	stw	r18,8(sp)
    4560:	dc400115 	stw	r17,4(sp)
    4564:	dc000015 	stw	r16,0(sp)
    4568:	18d14c04 	addi	r3,r3,17712
    456c:	24000117 	ldw	r16,4(r4)
    4570:	20c00f15 	stw	r3,60(r4)
    4574:	2080bb04 	addi	r2,r4,748
    4578:	00c000c4 	movi	r3,3
    457c:	20c0b915 	stw	r3,740(r4)
    4580:	2080ba15 	stw	r2,744(r4)
    4584:	2000b815 	stw	zero,736(r4)
    4588:	05c00204 	movi	r23,8
    458c:	00800104 	movi	r2,4
    4590:	2025883a 	mov	r18,r4
    4594:	b80d883a 	mov	r6,r23
    4598:	81001704 	addi	r4,r16,92
    459c:	000b883a 	mov	r5,zero
    45a0:	80000015 	stw	zero,0(r16)
    45a4:	80000115 	stw	zero,4(r16)
    45a8:	80000215 	stw	zero,8(r16)
    45ac:	8080030d 	sth	r2,12(r16)
    45b0:	80001915 	stw	zero,100(r16)
    45b4:	8000038d 	sth	zero,14(r16)
    45b8:	80000415 	stw	zero,16(r16)
    45bc:	80000515 	stw	zero,20(r16)
    45c0:	80000615 	stw	zero,24(r16)
    45c4:	00061880 	call	6188 <memset>
    45c8:	05800034 	movhi	r22,0
    45cc:	94400217 	ldw	r17,8(r18)
    45d0:	05400034 	movhi	r21,0
    45d4:	05000034 	movhi	r20,0
    45d8:	04c00034 	movhi	r19,0
    45dc:	b59e6504 	addi	r22,r22,31124
    45e0:	ad5e7c04 	addi	r21,r21,31216
    45e4:	a51e9b04 	addi	r20,r20,31340
    45e8:	9cdeb204 	addi	r19,r19,31432
    45ec:	85800815 	stw	r22,32(r16)
    45f0:	85400915 	stw	r21,36(r16)
    45f4:	85000a15 	stw	r20,40(r16)
    45f8:	84c00b15 	stw	r19,44(r16)
    45fc:	84000715 	stw	r16,28(r16)
    4600:	00800284 	movi	r2,10
    4604:	8880030d 	sth	r2,12(r17)
    4608:	00800044 	movi	r2,1
    460c:	b80d883a 	mov	r6,r23
    4610:	89001704 	addi	r4,r17,92
    4614:	000b883a 	mov	r5,zero
    4618:	88000015 	stw	zero,0(r17)
    461c:	88000115 	stw	zero,4(r17)
    4620:	88000215 	stw	zero,8(r17)
    4624:	88001915 	stw	zero,100(r17)
    4628:	8880038d 	sth	r2,14(r17)
    462c:	88000415 	stw	zero,16(r17)
    4630:	88000515 	stw	zero,20(r17)
    4634:	88000615 	stw	zero,24(r17)
    4638:	00061880 	call	6188 <memset>
    463c:	94000317 	ldw	r16,12(r18)
    4640:	00800484 	movi	r2,18
    4644:	8c400715 	stw	r17,28(r17)
    4648:	8d800815 	stw	r22,32(r17)
    464c:	8d400915 	stw	r21,36(r17)
    4650:	8d000a15 	stw	r20,40(r17)
    4654:	8cc00b15 	stw	r19,44(r17)
    4658:	8080030d 	sth	r2,12(r16)
    465c:	00800084 	movi	r2,2
    4660:	80000015 	stw	zero,0(r16)
    4664:	80000115 	stw	zero,4(r16)
    4668:	80000215 	stw	zero,8(r16)
    466c:	80001915 	stw	zero,100(r16)
    4670:	8080038d 	sth	r2,14(r16)
    4674:	80000415 	stw	zero,16(r16)
    4678:	80000515 	stw	zero,20(r16)
    467c:	80000615 	stw	zero,24(r16)
    4680:	b80d883a 	mov	r6,r23
    4684:	000b883a 	mov	r5,zero
    4688:	81001704 	addi	r4,r16,92
    468c:	00061880 	call	6188 <memset>
    4690:	00800044 	movi	r2,1
    4694:	84000715 	stw	r16,28(r16)
    4698:	85800815 	stw	r22,32(r16)
    469c:	85400915 	stw	r21,36(r16)
    46a0:	85000a15 	stw	r20,40(r16)
    46a4:	84c00b15 	stw	r19,44(r16)
    46a8:	90800e15 	stw	r2,56(r18)
    46ac:	dfc00817 	ldw	ra,32(sp)
    46b0:	ddc00717 	ldw	r23,28(sp)
    46b4:	dd800617 	ldw	r22,24(sp)
    46b8:	dd400517 	ldw	r21,20(sp)
    46bc:	dd000417 	ldw	r20,16(sp)
    46c0:	dcc00317 	ldw	r19,12(sp)
    46c4:	dc800217 	ldw	r18,8(sp)
    46c8:	dc400117 	ldw	r17,4(sp)
    46cc:	dc000017 	ldw	r16,0(sp)
    46d0:	dec00904 	addi	sp,sp,36
    46d4:	f800283a 	ret

000046d8 <__fp_lock>:
    46d8:	0005883a 	mov	r2,zero
    46dc:	f800283a 	ret

000046e0 <__sfmoreglue>:
    46e0:	defffc04 	addi	sp,sp,-16
    46e4:	dc800215 	stw	r18,8(sp)
    46e8:	2825883a 	mov	r18,r5
    46ec:	dc000015 	stw	r16,0(sp)
    46f0:	01401a04 	movi	r5,104
    46f4:	2021883a 	mov	r16,r4
    46f8:	913fffc4 	addi	r4,r18,-1
    46fc:	dfc00315 	stw	ra,12(sp)
    4700:	dc400115 	stw	r17,4(sp)
    4704:	000a9640 	call	a964 <__mulsi3>
    4708:	8009883a 	mov	r4,r16
    470c:	11401d04 	addi	r5,r2,116
    4710:	1023883a 	mov	r17,r2
    4714:	00055f40 	call	55f4 <_malloc_r>
    4718:	1021883a 	mov	r16,r2
    471c:	10000726 	beq	r2,zero,473c <__sfmoreglue+0x5c>
    4720:	11000304 	addi	r4,r2,12
    4724:	10000015 	stw	zero,0(r2)
    4728:	14800115 	stw	r18,4(r2)
    472c:	11000215 	stw	r4,8(r2)
    4730:	89801a04 	addi	r6,r17,104
    4734:	000b883a 	mov	r5,zero
    4738:	00061880 	call	6188 <memset>
    473c:	8005883a 	mov	r2,r16
    4740:	dfc00317 	ldw	ra,12(sp)
    4744:	dc800217 	ldw	r18,8(sp)
    4748:	dc400117 	ldw	r17,4(sp)
    474c:	dc000017 	ldw	r16,0(sp)
    4750:	dec00404 	addi	sp,sp,16
    4754:	f800283a 	ret

00004758 <__sfp>:
    4758:	defffb04 	addi	sp,sp,-20
    475c:	dc000015 	stw	r16,0(sp)
    4760:	04010034 	movhi	r16,1024
    4764:	84077804 	addi	r16,r16,7648
    4768:	dcc00315 	stw	r19,12(sp)
    476c:	2027883a 	mov	r19,r4
    4770:	81000017 	ldw	r4,0(r16)
    4774:	dfc00415 	stw	ra,16(sp)
    4778:	dc800215 	stw	r18,8(sp)
    477c:	20800e17 	ldw	r2,56(r4)
    4780:	dc400115 	stw	r17,4(sp)
    4784:	1000021e 	bne	r2,zero,4790 <__sfp+0x38>
    4788:	000453c0 	call	453c <__sinit.part.1>
    478c:	81000017 	ldw	r4,0(r16)
    4790:	2480b804 	addi	r18,r4,736
    4794:	047fffc4 	movi	r17,-1
    4798:	91000117 	ldw	r4,4(r18)
    479c:	94000217 	ldw	r16,8(r18)
    47a0:	213fffc4 	addi	r4,r4,-1
    47a4:	20000a16 	blt	r4,zero,47d0 <__sfp+0x78>
    47a8:	8080030f 	ldh	r2,12(r16)
    47ac:	10000c26 	beq	r2,zero,47e0 <__sfp+0x88>
    47b0:	80c01d04 	addi	r3,r16,116
    47b4:	00000206 	br	47c0 <__sfp+0x68>
    47b8:	18bfe60f 	ldh	r2,-104(r3)
    47bc:	10000826 	beq	r2,zero,47e0 <__sfp+0x88>
    47c0:	213fffc4 	addi	r4,r4,-1
    47c4:	1c3ffd04 	addi	r16,r3,-12
    47c8:	18c01a04 	addi	r3,r3,104
    47cc:	247ffa1e 	bne	r4,r17,47b8 <__sfp+0x60>
    47d0:	90800017 	ldw	r2,0(r18)
    47d4:	10001d26 	beq	r2,zero,484c <__sfp+0xf4>
    47d8:	1025883a 	mov	r18,r2
    47dc:	003fee06 	br	4798 <__sfp+0x40>
    47e0:	00bfffc4 	movi	r2,-1
    47e4:	8080038d 	sth	r2,14(r16)
    47e8:	00800044 	movi	r2,1
    47ec:	8080030d 	sth	r2,12(r16)
    47f0:	80001915 	stw	zero,100(r16)
    47f4:	80000015 	stw	zero,0(r16)
    47f8:	80000215 	stw	zero,8(r16)
    47fc:	80000115 	stw	zero,4(r16)
    4800:	80000415 	stw	zero,16(r16)
    4804:	80000515 	stw	zero,20(r16)
    4808:	80000615 	stw	zero,24(r16)
    480c:	01800204 	movi	r6,8
    4810:	000b883a 	mov	r5,zero
    4814:	81001704 	addi	r4,r16,92
    4818:	00061880 	call	6188 <memset>
    481c:	8005883a 	mov	r2,r16
    4820:	80000c15 	stw	zero,48(r16)
    4824:	80000d15 	stw	zero,52(r16)
    4828:	80001115 	stw	zero,68(r16)
    482c:	80001215 	stw	zero,72(r16)
    4830:	dfc00417 	ldw	ra,16(sp)
    4834:	dcc00317 	ldw	r19,12(sp)
    4838:	dc800217 	ldw	r18,8(sp)
    483c:	dc400117 	ldw	r17,4(sp)
    4840:	dc000017 	ldw	r16,0(sp)
    4844:	dec00504 	addi	sp,sp,20
    4848:	f800283a 	ret
    484c:	01400104 	movi	r5,4
    4850:	9809883a 	mov	r4,r19
    4854:	00046e00 	call	46e0 <__sfmoreglue>
    4858:	90800015 	stw	r2,0(r18)
    485c:	103fde1e 	bne	r2,zero,47d8 <__sfp+0x80>
    4860:	00800304 	movi	r2,12
    4864:	98800015 	stw	r2,0(r19)
    4868:	0005883a 	mov	r2,zero
    486c:	003ff006 	br	4830 <__sfp+0xd8>

00004870 <_cleanup>:
    4870:	00810034 	movhi	r2,1024
    4874:	10877804 	addi	r2,r2,7648
    4878:	11000017 	ldw	r4,0(r2)
    487c:	01400074 	movhi	r5,1
    4880:	29650d04 	addi	r5,r5,-27596
    4884:	00052981 	jmpi	5298 <_fwalk_reent>

00004888 <__sinit>:
    4888:	20800e17 	ldw	r2,56(r4)
    488c:	10000126 	beq	r2,zero,4894 <__sinit+0xc>
    4890:	f800283a 	ret
    4894:	000453c1 	jmpi	453c <__sinit.part.1>

00004898 <__sfp_lock_acquire>:
    4898:	f800283a 	ret

0000489c <__sfp_lock_release>:
    489c:	f800283a 	ret

000048a0 <__sinit_lock_acquire>:
    48a0:	f800283a 	ret

000048a4 <__sinit_lock_release>:
    48a4:	f800283a 	ret

000048a8 <__fp_lock_all>:
    48a8:	00810034 	movhi	r2,1024
    48ac:	10877904 	addi	r2,r2,7652
    48b0:	11000017 	ldw	r4,0(r2)
    48b4:	01400034 	movhi	r5,0
    48b8:	2951b604 	addi	r5,r5,18136
    48bc:	00051d41 	jmpi	51d4 <_fwalk>

000048c0 <__fp_unlock_all>:
    48c0:	00810034 	movhi	r2,1024
    48c4:	10877904 	addi	r2,r2,7652
    48c8:	11000017 	ldw	r4,0(r2)
    48cc:	01400034 	movhi	r5,0
    48d0:	29514a04 	addi	r5,r5,17704
    48d4:	00051d41 	jmpi	51d4 <_fwalk>

000048d8 <_malloc_trim_r>:
    48d8:	defffb04 	addi	sp,sp,-20
    48dc:	dcc00315 	stw	r19,12(sp)
    48e0:	04c10034 	movhi	r19,1024
    48e4:	dc800215 	stw	r18,8(sp)
    48e8:	dc400115 	stw	r17,4(sp)
    48ec:	dc000015 	stw	r16,0(sp)
    48f0:	dfc00415 	stw	ra,16(sp)
    48f4:	2821883a 	mov	r16,r5
    48f8:	9cc1f404 	addi	r19,r19,2000
    48fc:	2025883a 	mov	r18,r4
    4900:	000d7cc0 	call	d7cc <__malloc_lock>
    4904:	98800217 	ldw	r2,8(r19)
    4908:	14400117 	ldw	r17,4(r2)
    490c:	00bfff04 	movi	r2,-4
    4910:	88a2703a 	and	r17,r17,r2
    4914:	8c21c83a 	sub	r16,r17,r16
    4918:	8403fbc4 	addi	r16,r16,4079
    491c:	8020d33a 	srli	r16,r16,12
    4920:	0083ffc4 	movi	r2,4095
    4924:	843fffc4 	addi	r16,r16,-1
    4928:	8020933a 	slli	r16,r16,12
    492c:	1400060e 	bge	r2,r16,4948 <_malloc_trim_r+0x70>
    4930:	000b883a 	mov	r5,zero
    4934:	9009883a 	mov	r4,r18
    4938:	00079400 	call	7940 <_sbrk_r>
    493c:	98c00217 	ldw	r3,8(r19)
    4940:	1c47883a 	add	r3,r3,r17
    4944:	10c00a26 	beq	r2,r3,4970 <_malloc_trim_r+0x98>
    4948:	9009883a 	mov	r4,r18
    494c:	000d7f00 	call	d7f0 <__malloc_unlock>
    4950:	0005883a 	mov	r2,zero
    4954:	dfc00417 	ldw	ra,16(sp)
    4958:	dcc00317 	ldw	r19,12(sp)
    495c:	dc800217 	ldw	r18,8(sp)
    4960:	dc400117 	ldw	r17,4(sp)
    4964:	dc000017 	ldw	r16,0(sp)
    4968:	dec00504 	addi	sp,sp,20
    496c:	f800283a 	ret
    4970:	040bc83a 	sub	r5,zero,r16
    4974:	9009883a 	mov	r4,r18
    4978:	00079400 	call	7940 <_sbrk_r>
    497c:	00ffffc4 	movi	r3,-1
    4980:	10c00d26 	beq	r2,r3,49b8 <_malloc_trim_r+0xe0>
    4984:	00c10034 	movhi	r3,1024
    4988:	18c79604 	addi	r3,r3,7768
    498c:	18800017 	ldw	r2,0(r3)
    4990:	99000217 	ldw	r4,8(r19)
    4994:	8c23c83a 	sub	r17,r17,r16
    4998:	8c400054 	ori	r17,r17,1
    499c:	1421c83a 	sub	r16,r2,r16
    49a0:	24400115 	stw	r17,4(r4)
    49a4:	9009883a 	mov	r4,r18
    49a8:	1c000015 	stw	r16,0(r3)
    49ac:	000d7f00 	call	d7f0 <__malloc_unlock>
    49b0:	00800044 	movi	r2,1
    49b4:	003fe706 	br	4954 <_malloc_trim_r+0x7c>
    49b8:	000b883a 	mov	r5,zero
    49bc:	9009883a 	mov	r4,r18
    49c0:	00079400 	call	7940 <_sbrk_r>
    49c4:	99000217 	ldw	r4,8(r19)
    49c8:	014003c4 	movi	r5,15
    49cc:	1107c83a 	sub	r3,r2,r4
    49d0:	28ffdd0e 	bge	r5,r3,4948 <_malloc_trim_r+0x70>
    49d4:	01410034 	movhi	r5,1024
    49d8:	29477b04 	addi	r5,r5,7660
    49dc:	29400017 	ldw	r5,0(r5)
    49e0:	18c00054 	ori	r3,r3,1
    49e4:	20c00115 	stw	r3,4(r4)
    49e8:	00c10034 	movhi	r3,1024
    49ec:	1145c83a 	sub	r2,r2,r5
    49f0:	18c79604 	addi	r3,r3,7768
    49f4:	18800015 	stw	r2,0(r3)
    49f8:	003fd306 	br	4948 <_malloc_trim_r+0x70>

000049fc <_free_r>:
    49fc:	28004126 	beq	r5,zero,4b04 <_free_r+0x108>
    4a00:	defffd04 	addi	sp,sp,-12
    4a04:	dc400115 	stw	r17,4(sp)
    4a08:	dc000015 	stw	r16,0(sp)
    4a0c:	2023883a 	mov	r17,r4
    4a10:	2821883a 	mov	r16,r5
    4a14:	dfc00215 	stw	ra,8(sp)
    4a18:	000d7cc0 	call	d7cc <__malloc_lock>
    4a1c:	81ffff17 	ldw	r7,-4(r16)
    4a20:	00bfff84 	movi	r2,-2
    4a24:	01010034 	movhi	r4,1024
    4a28:	81bffe04 	addi	r6,r16,-8
    4a2c:	3884703a 	and	r2,r7,r2
    4a30:	2101f404 	addi	r4,r4,2000
    4a34:	308b883a 	add	r5,r6,r2
    4a38:	2a400117 	ldw	r9,4(r5)
    4a3c:	22000217 	ldw	r8,8(r4)
    4a40:	00ffff04 	movi	r3,-4
    4a44:	48c6703a 	and	r3,r9,r3
    4a48:	2a005726 	beq	r5,r8,4ba8 <_free_r+0x1ac>
    4a4c:	28c00115 	stw	r3,4(r5)
    4a50:	39c0004c 	andi	r7,r7,1
    4a54:	3800091e 	bne	r7,zero,4a7c <_free_r+0x80>
    4a58:	823ffe17 	ldw	r8,-8(r16)
    4a5c:	22400204 	addi	r9,r4,8
    4a60:	320dc83a 	sub	r6,r6,r8
    4a64:	31c00217 	ldw	r7,8(r6)
    4a68:	1205883a 	add	r2,r2,r8
    4a6c:	3a406526 	beq	r7,r9,4c04 <_free_r+0x208>
    4a70:	32000317 	ldw	r8,12(r6)
    4a74:	3a000315 	stw	r8,12(r7)
    4a78:	41c00215 	stw	r7,8(r8)
    4a7c:	28cf883a 	add	r7,r5,r3
    4a80:	39c00117 	ldw	r7,4(r7)
    4a84:	39c0004c 	andi	r7,r7,1
    4a88:	38003a26 	beq	r7,zero,4b74 <_free_r+0x178>
    4a8c:	10c00054 	ori	r3,r2,1
    4a90:	30c00115 	stw	r3,4(r6)
    4a94:	3087883a 	add	r3,r6,r2
    4a98:	18800015 	stw	r2,0(r3)
    4a9c:	00c07fc4 	movi	r3,511
    4aa0:	18801936 	bltu	r3,r2,4b08 <_free_r+0x10c>
    4aa4:	1004d0fa 	srli	r2,r2,3
    4aa8:	01c00044 	movi	r7,1
    4aac:	21400117 	ldw	r5,4(r4)
    4ab0:	10c00044 	addi	r3,r2,1
    4ab4:	18c7883a 	add	r3,r3,r3
    4ab8:	1005d0ba 	srai	r2,r2,2
    4abc:	18c7883a 	add	r3,r3,r3
    4ac0:	18c7883a 	add	r3,r3,r3
    4ac4:	1907883a 	add	r3,r3,r4
    4ac8:	3884983a 	sll	r2,r7,r2
    4acc:	19c00017 	ldw	r7,0(r3)
    4ad0:	1a3ffe04 	addi	r8,r3,-8
    4ad4:	1144b03a 	or	r2,r2,r5
    4ad8:	32000315 	stw	r8,12(r6)
    4adc:	31c00215 	stw	r7,8(r6)
    4ae0:	20800115 	stw	r2,4(r4)
    4ae4:	19800015 	stw	r6,0(r3)
    4ae8:	39800315 	stw	r6,12(r7)
    4aec:	8809883a 	mov	r4,r17
    4af0:	dfc00217 	ldw	ra,8(sp)
    4af4:	dc400117 	ldw	r17,4(sp)
    4af8:	dc000017 	ldw	r16,0(sp)
    4afc:	dec00304 	addi	sp,sp,12
    4b00:	000d7f01 	jmpi	d7f0 <__malloc_unlock>
    4b04:	f800283a 	ret
    4b08:	100ad27a 	srli	r5,r2,9
    4b0c:	00c00104 	movi	r3,4
    4b10:	19404a36 	bltu	r3,r5,4c3c <_free_r+0x240>
    4b14:	100ad1ba 	srli	r5,r2,6
    4b18:	28c00e44 	addi	r3,r5,57
    4b1c:	18c7883a 	add	r3,r3,r3
    4b20:	29400e04 	addi	r5,r5,56
    4b24:	18c7883a 	add	r3,r3,r3
    4b28:	18c7883a 	add	r3,r3,r3
    4b2c:	1909883a 	add	r4,r3,r4
    4b30:	20c00017 	ldw	r3,0(r4)
    4b34:	01c10034 	movhi	r7,1024
    4b38:	213ffe04 	addi	r4,r4,-8
    4b3c:	39c1f404 	addi	r7,r7,2000
    4b40:	20c04426 	beq	r4,r3,4c54 <_free_r+0x258>
    4b44:	01ffff04 	movi	r7,-4
    4b48:	19400117 	ldw	r5,4(r3)
    4b4c:	29ca703a 	and	r5,r5,r7
    4b50:	1140022e 	bgeu	r2,r5,4b5c <_free_r+0x160>
    4b54:	18c00217 	ldw	r3,8(r3)
    4b58:	20fffb1e 	bne	r4,r3,4b48 <_free_r+0x14c>
    4b5c:	19000317 	ldw	r4,12(r3)
    4b60:	31000315 	stw	r4,12(r6)
    4b64:	30c00215 	stw	r3,8(r6)
    4b68:	21800215 	stw	r6,8(r4)
    4b6c:	19800315 	stw	r6,12(r3)
    4b70:	003fde06 	br	4aec <_free_r+0xf0>
    4b74:	29c00217 	ldw	r7,8(r5)
    4b78:	10c5883a 	add	r2,r2,r3
    4b7c:	00c10034 	movhi	r3,1024
    4b80:	18c1f604 	addi	r3,r3,2008
    4b84:	38c03b26 	beq	r7,r3,4c74 <_free_r+0x278>
    4b88:	2a000317 	ldw	r8,12(r5)
    4b8c:	11400054 	ori	r5,r2,1
    4b90:	3087883a 	add	r3,r6,r2
    4b94:	3a000315 	stw	r8,12(r7)
    4b98:	41c00215 	stw	r7,8(r8)
    4b9c:	31400115 	stw	r5,4(r6)
    4ba0:	18800015 	stw	r2,0(r3)
    4ba4:	003fbd06 	br	4a9c <_free_r+0xa0>
    4ba8:	39c0004c 	andi	r7,r7,1
    4bac:	10c5883a 	add	r2,r2,r3
    4bb0:	3800071e 	bne	r7,zero,4bd0 <_free_r+0x1d4>
    4bb4:	81fffe17 	ldw	r7,-8(r16)
    4bb8:	31cdc83a 	sub	r6,r6,r7
    4bbc:	30c00317 	ldw	r3,12(r6)
    4bc0:	31400217 	ldw	r5,8(r6)
    4bc4:	11c5883a 	add	r2,r2,r7
    4bc8:	28c00315 	stw	r3,12(r5)
    4bcc:	19400215 	stw	r5,8(r3)
    4bd0:	10c00054 	ori	r3,r2,1
    4bd4:	30c00115 	stw	r3,4(r6)
    4bd8:	00c10034 	movhi	r3,1024
    4bdc:	18c77c04 	addi	r3,r3,7664
    4be0:	18c00017 	ldw	r3,0(r3)
    4be4:	21800215 	stw	r6,8(r4)
    4be8:	10ffc036 	bltu	r2,r3,4aec <_free_r+0xf0>
    4bec:	00810034 	movhi	r2,1024
    4bf0:	10878d04 	addi	r2,r2,7732
    4bf4:	11400017 	ldw	r5,0(r2)
    4bf8:	8809883a 	mov	r4,r17
    4bfc:	00048d80 	call	48d8 <_malloc_trim_r>
    4c00:	003fba06 	br	4aec <_free_r+0xf0>
    4c04:	28c9883a 	add	r4,r5,r3
    4c08:	21000117 	ldw	r4,4(r4)
    4c0c:	2100004c 	andi	r4,r4,1
    4c10:	2000391e 	bne	r4,zero,4cf8 <_free_r+0x2fc>
    4c14:	29c00217 	ldw	r7,8(r5)
    4c18:	29000317 	ldw	r4,12(r5)
    4c1c:	1885883a 	add	r2,r3,r2
    4c20:	10c00054 	ori	r3,r2,1
    4c24:	39000315 	stw	r4,12(r7)
    4c28:	21c00215 	stw	r7,8(r4)
    4c2c:	30c00115 	stw	r3,4(r6)
    4c30:	308d883a 	add	r6,r6,r2
    4c34:	30800015 	stw	r2,0(r6)
    4c38:	003fac06 	br	4aec <_free_r+0xf0>
    4c3c:	00c00504 	movi	r3,20
    4c40:	19401536 	bltu	r3,r5,4c98 <_free_r+0x29c>
    4c44:	28c01704 	addi	r3,r5,92
    4c48:	18c7883a 	add	r3,r3,r3
    4c4c:	294016c4 	addi	r5,r5,91
    4c50:	003fb406 	br	4b24 <_free_r+0x128>
    4c54:	280bd0ba 	srai	r5,r5,2
    4c58:	00c00044 	movi	r3,1
    4c5c:	38800117 	ldw	r2,4(r7)
    4c60:	194a983a 	sll	r5,r3,r5
    4c64:	2007883a 	mov	r3,r4
    4c68:	2884b03a 	or	r2,r5,r2
    4c6c:	38800115 	stw	r2,4(r7)
    4c70:	003fbb06 	br	4b60 <_free_r+0x164>
    4c74:	21800515 	stw	r6,20(r4)
    4c78:	21800415 	stw	r6,16(r4)
    4c7c:	10c00054 	ori	r3,r2,1
    4c80:	31c00315 	stw	r7,12(r6)
    4c84:	31c00215 	stw	r7,8(r6)
    4c88:	30c00115 	stw	r3,4(r6)
    4c8c:	308d883a 	add	r6,r6,r2
    4c90:	30800015 	stw	r2,0(r6)
    4c94:	003f9506 	br	4aec <_free_r+0xf0>
    4c98:	00c01504 	movi	r3,84
    4c9c:	19400536 	bltu	r3,r5,4cb4 <_free_r+0x2b8>
    4ca0:	100ad33a 	srli	r5,r2,12
    4ca4:	28c01bc4 	addi	r3,r5,111
    4ca8:	18c7883a 	add	r3,r3,r3
    4cac:	29401b84 	addi	r5,r5,110
    4cb0:	003f9c06 	br	4b24 <_free_r+0x128>
    4cb4:	00c05504 	movi	r3,340
    4cb8:	19400536 	bltu	r3,r5,4cd0 <_free_r+0x2d4>
    4cbc:	100ad3fa 	srli	r5,r2,15
    4cc0:	28c01e04 	addi	r3,r5,120
    4cc4:	18c7883a 	add	r3,r3,r3
    4cc8:	29401dc4 	addi	r5,r5,119
    4ccc:	003f9506 	br	4b24 <_free_r+0x128>
    4cd0:	00c15504 	movi	r3,1364
    4cd4:	19400536 	bltu	r3,r5,4cec <_free_r+0x2f0>
    4cd8:	100ad4ba 	srli	r5,r2,18
    4cdc:	28c01f44 	addi	r3,r5,125
    4ce0:	18c7883a 	add	r3,r3,r3
    4ce4:	29401f04 	addi	r5,r5,124
    4ce8:	003f8e06 	br	4b24 <_free_r+0x128>
    4cec:	00c03f84 	movi	r3,254
    4cf0:	01401f84 	movi	r5,126
    4cf4:	003f8b06 	br	4b24 <_free_r+0x128>
    4cf8:	10c00054 	ori	r3,r2,1
    4cfc:	30c00115 	stw	r3,4(r6)
    4d00:	308d883a 	add	r6,r6,r2
    4d04:	30800015 	stw	r2,0(r6)
    4d08:	003f7806 	br	4aec <_free_r+0xf0>

00004d0c <__sfvwrite_r>:
    4d0c:	30800217 	ldw	r2,8(r6)
    4d10:	10006726 	beq	r2,zero,4eb0 <__sfvwrite_r+0x1a4>
    4d14:	28c0030b 	ldhu	r3,12(r5)
    4d18:	defff404 	addi	sp,sp,-48
    4d1c:	dd400715 	stw	r21,28(sp)
    4d20:	dd000615 	stw	r20,24(sp)
    4d24:	dc000215 	stw	r16,8(sp)
    4d28:	dfc00b15 	stw	ra,44(sp)
    4d2c:	df000a15 	stw	fp,40(sp)
    4d30:	ddc00915 	stw	r23,36(sp)
    4d34:	dd800815 	stw	r22,32(sp)
    4d38:	dcc00515 	stw	r19,20(sp)
    4d3c:	dc800415 	stw	r18,16(sp)
    4d40:	dc400315 	stw	r17,12(sp)
    4d44:	1880020c 	andi	r2,r3,8
    4d48:	2821883a 	mov	r16,r5
    4d4c:	202b883a 	mov	r21,r4
    4d50:	3029883a 	mov	r20,r6
    4d54:	10002726 	beq	r2,zero,4df4 <__sfvwrite_r+0xe8>
    4d58:	28800417 	ldw	r2,16(r5)
    4d5c:	10002526 	beq	r2,zero,4df4 <__sfvwrite_r+0xe8>
    4d60:	1880008c 	andi	r2,r3,2
    4d64:	a4400017 	ldw	r17,0(r20)
    4d68:	10002a26 	beq	r2,zero,4e14 <__sfvwrite_r+0x108>
    4d6c:	05a00034 	movhi	r22,32768
    4d70:	0027883a 	mov	r19,zero
    4d74:	0025883a 	mov	r18,zero
    4d78:	b5bf0004 	addi	r22,r22,-1024
    4d7c:	980d883a 	mov	r6,r19
    4d80:	a809883a 	mov	r4,r21
    4d84:	90004626 	beq	r18,zero,4ea0 <__sfvwrite_r+0x194>
    4d88:	900f883a 	mov	r7,r18
    4d8c:	b480022e 	bgeu	r22,r18,4d98 <__sfvwrite_r+0x8c>
    4d90:	01e00034 	movhi	r7,32768
    4d94:	39ff0004 	addi	r7,r7,-1024
    4d98:	80800917 	ldw	r2,36(r16)
    4d9c:	81400717 	ldw	r5,28(r16)
    4da0:	103ee83a 	callr	r2
    4da4:	00805a0e 	bge	zero,r2,4f10 <__sfvwrite_r+0x204>
    4da8:	a0c00217 	ldw	r3,8(r20)
    4dac:	98a7883a 	add	r19,r19,r2
    4db0:	90a5c83a 	sub	r18,r18,r2
    4db4:	1885c83a 	sub	r2,r3,r2
    4db8:	a0800215 	stw	r2,8(r20)
    4dbc:	103fef1e 	bne	r2,zero,4d7c <__sfvwrite_r+0x70>
    4dc0:	0005883a 	mov	r2,zero
    4dc4:	dfc00b17 	ldw	ra,44(sp)
    4dc8:	df000a17 	ldw	fp,40(sp)
    4dcc:	ddc00917 	ldw	r23,36(sp)
    4dd0:	dd800817 	ldw	r22,32(sp)
    4dd4:	dd400717 	ldw	r21,28(sp)
    4dd8:	dd000617 	ldw	r20,24(sp)
    4ddc:	dcc00517 	ldw	r19,20(sp)
    4de0:	dc800417 	ldw	r18,16(sp)
    4de4:	dc400317 	ldw	r17,12(sp)
    4de8:	dc000217 	ldw	r16,8(sp)
    4dec:	dec00c04 	addi	sp,sp,48
    4df0:	f800283a 	ret
    4df4:	800b883a 	mov	r5,r16
    4df8:	a809883a 	mov	r4,r21
    4dfc:	000287c0 	call	287c <__swsetup_r>
    4e00:	1000ee1e 	bne	r2,zero,51bc <__sfvwrite_r+0x4b0>
    4e04:	80c0030b 	ldhu	r3,12(r16)
    4e08:	a4400017 	ldw	r17,0(r20)
    4e0c:	1880008c 	andi	r2,r3,2
    4e10:	103fd61e 	bne	r2,zero,4d6c <__sfvwrite_r+0x60>
    4e14:	1880004c 	andi	r2,r3,1
    4e18:	1000421e 	bne	r2,zero,4f24 <__sfvwrite_r+0x218>
    4e1c:	0039883a 	mov	fp,zero
    4e20:	0025883a 	mov	r18,zero
    4e24:	90001a26 	beq	r18,zero,4e90 <__sfvwrite_r+0x184>
    4e28:	1880800c 	andi	r2,r3,512
    4e2c:	84c00217 	ldw	r19,8(r16)
    4e30:	10002126 	beq	r2,zero,4eb8 <__sfvwrite_r+0x1ac>
    4e34:	982f883a 	mov	r23,r19
    4e38:	94c09636 	bltu	r18,r19,5094 <__sfvwrite_r+0x388>
    4e3c:	1881200c 	andi	r2,r3,1152
    4e40:	1000a11e 	bne	r2,zero,50c8 <__sfvwrite_r+0x3bc>
    4e44:	81000017 	ldw	r4,0(r16)
    4e48:	b80d883a 	mov	r6,r23
    4e4c:	e00b883a 	mov	r5,fp
    4e50:	000602c0 	call	602c <memmove>
    4e54:	80c00217 	ldw	r3,8(r16)
    4e58:	81000017 	ldw	r4,0(r16)
    4e5c:	9005883a 	mov	r2,r18
    4e60:	1ce7c83a 	sub	r19,r3,r19
    4e64:	25cf883a 	add	r7,r4,r23
    4e68:	84c00215 	stw	r19,8(r16)
    4e6c:	81c00015 	stw	r7,0(r16)
    4e70:	a0c00217 	ldw	r3,8(r20)
    4e74:	e0b9883a 	add	fp,fp,r2
    4e78:	90a5c83a 	sub	r18,r18,r2
    4e7c:	18a7c83a 	sub	r19,r3,r2
    4e80:	a4c00215 	stw	r19,8(r20)
    4e84:	983fce26 	beq	r19,zero,4dc0 <__sfvwrite_r+0xb4>
    4e88:	80c0030b 	ldhu	r3,12(r16)
    4e8c:	903fe61e 	bne	r18,zero,4e28 <__sfvwrite_r+0x11c>
    4e90:	8f000017 	ldw	fp,0(r17)
    4e94:	8c800117 	ldw	r18,4(r17)
    4e98:	8c400204 	addi	r17,r17,8
    4e9c:	003fe106 	br	4e24 <__sfvwrite_r+0x118>
    4ea0:	8cc00017 	ldw	r19,0(r17)
    4ea4:	8c800117 	ldw	r18,4(r17)
    4ea8:	8c400204 	addi	r17,r17,8
    4eac:	003fb306 	br	4d7c <__sfvwrite_r+0x70>
    4eb0:	0005883a 	mov	r2,zero
    4eb4:	f800283a 	ret
    4eb8:	81000017 	ldw	r4,0(r16)
    4ebc:	80800417 	ldw	r2,16(r16)
    4ec0:	11005a36 	bltu	r2,r4,502c <__sfvwrite_r+0x320>
    4ec4:	85c00517 	ldw	r23,20(r16)
    4ec8:	95c05836 	bltu	r18,r23,502c <__sfvwrite_r+0x320>
    4ecc:	00a00034 	movhi	r2,32768
    4ed0:	10bfffc4 	addi	r2,r2,-1
    4ed4:	9009883a 	mov	r4,r18
    4ed8:	1480012e 	bgeu	r2,r18,4ee0 <__sfvwrite_r+0x1d4>
    4edc:	1009883a 	mov	r4,r2
    4ee0:	b80b883a 	mov	r5,r23
    4ee4:	000a7b00 	call	a7b0 <__divsi3>
    4ee8:	b80b883a 	mov	r5,r23
    4eec:	1009883a 	mov	r4,r2
    4ef0:	000a9640 	call	a964 <__mulsi3>
    4ef4:	81400717 	ldw	r5,28(r16)
    4ef8:	80c00917 	ldw	r3,36(r16)
    4efc:	100f883a 	mov	r7,r2
    4f00:	e00d883a 	mov	r6,fp
    4f04:	a809883a 	mov	r4,r21
    4f08:	183ee83a 	callr	r3
    4f0c:	00bfd816 	blt	zero,r2,4e70 <__sfvwrite_r+0x164>
    4f10:	8080030b 	ldhu	r2,12(r16)
    4f14:	10801014 	ori	r2,r2,64
    4f18:	8080030d 	sth	r2,12(r16)
    4f1c:	00bfffc4 	movi	r2,-1
    4f20:	003fa806 	br	4dc4 <__sfvwrite_r+0xb8>
    4f24:	0027883a 	mov	r19,zero
    4f28:	0011883a 	mov	r8,zero
    4f2c:	0039883a 	mov	fp,zero
    4f30:	0025883a 	mov	r18,zero
    4f34:	90001f26 	beq	r18,zero,4fb4 <__sfvwrite_r+0x2a8>
    4f38:	40005a26 	beq	r8,zero,50a4 <__sfvwrite_r+0x398>
    4f3c:	982d883a 	mov	r22,r19
    4f40:	94c0012e 	bgeu	r18,r19,4f48 <__sfvwrite_r+0x23c>
    4f44:	902d883a 	mov	r22,r18
    4f48:	81000017 	ldw	r4,0(r16)
    4f4c:	80800417 	ldw	r2,16(r16)
    4f50:	b02f883a 	mov	r23,r22
    4f54:	81c00517 	ldw	r7,20(r16)
    4f58:	1100032e 	bgeu	r2,r4,4f68 <__sfvwrite_r+0x25c>
    4f5c:	80c00217 	ldw	r3,8(r16)
    4f60:	38c7883a 	add	r3,r7,r3
    4f64:	1d801816 	blt	r3,r22,4fc8 <__sfvwrite_r+0x2bc>
    4f68:	b1c03e16 	blt	r22,r7,5064 <__sfvwrite_r+0x358>
    4f6c:	80800917 	ldw	r2,36(r16)
    4f70:	81400717 	ldw	r5,28(r16)
    4f74:	e00d883a 	mov	r6,fp
    4f78:	da000115 	stw	r8,4(sp)
    4f7c:	a809883a 	mov	r4,r21
    4f80:	103ee83a 	callr	r2
    4f84:	102f883a 	mov	r23,r2
    4f88:	da000117 	ldw	r8,4(sp)
    4f8c:	00bfe00e 	bge	zero,r2,4f10 <__sfvwrite_r+0x204>
    4f90:	9de7c83a 	sub	r19,r19,r23
    4f94:	98001f26 	beq	r19,zero,5014 <__sfvwrite_r+0x308>
    4f98:	a0800217 	ldw	r2,8(r20)
    4f9c:	e5f9883a 	add	fp,fp,r23
    4fa0:	95e5c83a 	sub	r18,r18,r23
    4fa4:	15efc83a 	sub	r23,r2,r23
    4fa8:	a5c00215 	stw	r23,8(r20)
    4fac:	b83f8426 	beq	r23,zero,4dc0 <__sfvwrite_r+0xb4>
    4fb0:	903fe11e 	bne	r18,zero,4f38 <__sfvwrite_r+0x22c>
    4fb4:	8f000017 	ldw	fp,0(r17)
    4fb8:	8c800117 	ldw	r18,4(r17)
    4fbc:	0011883a 	mov	r8,zero
    4fc0:	8c400204 	addi	r17,r17,8
    4fc4:	003fdb06 	br	4f34 <__sfvwrite_r+0x228>
    4fc8:	180d883a 	mov	r6,r3
    4fcc:	e00b883a 	mov	r5,fp
    4fd0:	da000115 	stw	r8,4(sp)
    4fd4:	d8c00015 	stw	r3,0(sp)
    4fd8:	000602c0 	call	602c <memmove>
    4fdc:	d8c00017 	ldw	r3,0(sp)
    4fe0:	80800017 	ldw	r2,0(r16)
    4fe4:	800b883a 	mov	r5,r16
    4fe8:	a809883a 	mov	r4,r21
    4fec:	10c5883a 	add	r2,r2,r3
    4ff0:	80800015 	stw	r2,0(r16)
    4ff4:	d8c00015 	stw	r3,0(sp)
    4ff8:	000449c0 	call	449c <_fflush_r>
    4ffc:	d8c00017 	ldw	r3,0(sp)
    5000:	da000117 	ldw	r8,4(sp)
    5004:	103fc21e 	bne	r2,zero,4f10 <__sfvwrite_r+0x204>
    5008:	182f883a 	mov	r23,r3
    500c:	9de7c83a 	sub	r19,r19,r23
    5010:	983fe11e 	bne	r19,zero,4f98 <__sfvwrite_r+0x28c>
    5014:	800b883a 	mov	r5,r16
    5018:	a809883a 	mov	r4,r21
    501c:	000449c0 	call	449c <_fflush_r>
    5020:	103fbb1e 	bne	r2,zero,4f10 <__sfvwrite_r+0x204>
    5024:	0011883a 	mov	r8,zero
    5028:	003fdb06 	br	4f98 <__sfvwrite_r+0x28c>
    502c:	94c0012e 	bgeu	r18,r19,5034 <__sfvwrite_r+0x328>
    5030:	9027883a 	mov	r19,r18
    5034:	980d883a 	mov	r6,r19
    5038:	e00b883a 	mov	r5,fp
    503c:	000602c0 	call	602c <memmove>
    5040:	80800217 	ldw	r2,8(r16)
    5044:	80c00017 	ldw	r3,0(r16)
    5048:	14c5c83a 	sub	r2,r2,r19
    504c:	1cc7883a 	add	r3,r3,r19
    5050:	80800215 	stw	r2,8(r16)
    5054:	80c00015 	stw	r3,0(r16)
    5058:	10004326 	beq	r2,zero,5168 <__sfvwrite_r+0x45c>
    505c:	9805883a 	mov	r2,r19
    5060:	003f8306 	br	4e70 <__sfvwrite_r+0x164>
    5064:	b00d883a 	mov	r6,r22
    5068:	e00b883a 	mov	r5,fp
    506c:	da000115 	stw	r8,4(sp)
    5070:	000602c0 	call	602c <memmove>
    5074:	80800217 	ldw	r2,8(r16)
    5078:	80c00017 	ldw	r3,0(r16)
    507c:	da000117 	ldw	r8,4(sp)
    5080:	1585c83a 	sub	r2,r2,r22
    5084:	1dad883a 	add	r22,r3,r22
    5088:	80800215 	stw	r2,8(r16)
    508c:	85800015 	stw	r22,0(r16)
    5090:	003fbf06 	br	4f90 <__sfvwrite_r+0x284>
    5094:	81000017 	ldw	r4,0(r16)
    5098:	9027883a 	mov	r19,r18
    509c:	902f883a 	mov	r23,r18
    50a0:	003f6906 	br	4e48 <__sfvwrite_r+0x13c>
    50a4:	900d883a 	mov	r6,r18
    50a8:	01400284 	movi	r5,10
    50ac:	e009883a 	mov	r4,fp
    50b0:	0005e000 	call	5e00 <memchr>
    50b4:	10003e26 	beq	r2,zero,51b0 <__sfvwrite_r+0x4a4>
    50b8:	10800044 	addi	r2,r2,1
    50bc:	1727c83a 	sub	r19,r2,fp
    50c0:	02000044 	movi	r8,1
    50c4:	003f9d06 	br	4f3c <__sfvwrite_r+0x230>
    50c8:	80800517 	ldw	r2,20(r16)
    50cc:	81400417 	ldw	r5,16(r16)
    50d0:	81c00017 	ldw	r7,0(r16)
    50d4:	10a7883a 	add	r19,r2,r2
    50d8:	9885883a 	add	r2,r19,r2
    50dc:	1026d7fa 	srli	r19,r2,31
    50e0:	396dc83a 	sub	r22,r7,r5
    50e4:	b1000044 	addi	r4,r22,1
    50e8:	9885883a 	add	r2,r19,r2
    50ec:	1027d07a 	srai	r19,r2,1
    50f0:	2485883a 	add	r2,r4,r18
    50f4:	980d883a 	mov	r6,r19
    50f8:	9880022e 	bgeu	r19,r2,5104 <__sfvwrite_r+0x3f8>
    50fc:	1027883a 	mov	r19,r2
    5100:	100d883a 	mov	r6,r2
    5104:	18c1000c 	andi	r3,r3,1024
    5108:	18001c26 	beq	r3,zero,517c <__sfvwrite_r+0x470>
    510c:	300b883a 	mov	r5,r6
    5110:	a809883a 	mov	r4,r21
    5114:	00055f40 	call	55f4 <_malloc_r>
    5118:	102f883a 	mov	r23,r2
    511c:	10002926 	beq	r2,zero,51c4 <__sfvwrite_r+0x4b8>
    5120:	81400417 	ldw	r5,16(r16)
    5124:	b00d883a 	mov	r6,r22
    5128:	1009883a 	mov	r4,r2
    512c:	0005ee40 	call	5ee4 <memcpy>
    5130:	8080030b 	ldhu	r2,12(r16)
    5134:	00fedfc4 	movi	r3,-1153
    5138:	10c4703a 	and	r2,r2,r3
    513c:	10802014 	ori	r2,r2,128
    5140:	8080030d 	sth	r2,12(r16)
    5144:	bd89883a 	add	r4,r23,r22
    5148:	9d8fc83a 	sub	r7,r19,r22
    514c:	85c00415 	stw	r23,16(r16)
    5150:	84c00515 	stw	r19,20(r16)
    5154:	81000015 	stw	r4,0(r16)
    5158:	9027883a 	mov	r19,r18
    515c:	81c00215 	stw	r7,8(r16)
    5160:	902f883a 	mov	r23,r18
    5164:	003f3806 	br	4e48 <__sfvwrite_r+0x13c>
    5168:	800b883a 	mov	r5,r16
    516c:	a809883a 	mov	r4,r21
    5170:	000449c0 	call	449c <_fflush_r>
    5174:	103fb926 	beq	r2,zero,505c <__sfvwrite_r+0x350>
    5178:	003f6506 	br	4f10 <__sfvwrite_r+0x204>
    517c:	a809883a 	mov	r4,r21
    5180:	00073680 	call	7368 <_realloc_r>
    5184:	102f883a 	mov	r23,r2
    5188:	103fee1e 	bne	r2,zero,5144 <__sfvwrite_r+0x438>
    518c:	81400417 	ldw	r5,16(r16)
    5190:	a809883a 	mov	r4,r21
    5194:	00049fc0 	call	49fc <_free_r>
    5198:	8080030b 	ldhu	r2,12(r16)
    519c:	00ffdfc4 	movi	r3,-129
    51a0:	1884703a 	and	r2,r3,r2
    51a4:	00c00304 	movi	r3,12
    51a8:	a8c00015 	stw	r3,0(r21)
    51ac:	003f5906 	br	4f14 <__sfvwrite_r+0x208>
    51b0:	94c00044 	addi	r19,r18,1
    51b4:	02000044 	movi	r8,1
    51b8:	003f6006 	br	4f3c <__sfvwrite_r+0x230>
    51bc:	00bfffc4 	movi	r2,-1
    51c0:	003f0006 	br	4dc4 <__sfvwrite_r+0xb8>
    51c4:	00800304 	movi	r2,12
    51c8:	a8800015 	stw	r2,0(r21)
    51cc:	8080030b 	ldhu	r2,12(r16)
    51d0:	003f5006 	br	4f14 <__sfvwrite_r+0x208>

000051d4 <_fwalk>:
    51d4:	defff704 	addi	sp,sp,-36
    51d8:	dd000415 	stw	r20,16(sp)
    51dc:	dfc00815 	stw	ra,32(sp)
    51e0:	ddc00715 	stw	r23,28(sp)
    51e4:	dd800615 	stw	r22,24(sp)
    51e8:	dd400515 	stw	r21,20(sp)
    51ec:	dcc00315 	stw	r19,12(sp)
    51f0:	dc800215 	stw	r18,8(sp)
    51f4:	dc400115 	stw	r17,4(sp)
    51f8:	dc000015 	stw	r16,0(sp)
    51fc:	2500b804 	addi	r20,r4,736
    5200:	a0002326 	beq	r20,zero,5290 <_fwalk+0xbc>
    5204:	282b883a 	mov	r21,r5
    5208:	002f883a 	mov	r23,zero
    520c:	05800044 	movi	r22,1
    5210:	04ffffc4 	movi	r19,-1
    5214:	a4400117 	ldw	r17,4(r20)
    5218:	a4800217 	ldw	r18,8(r20)
    521c:	8c7fffc4 	addi	r17,r17,-1
    5220:	88000d16 	blt	r17,zero,5258 <_fwalk+0x84>
    5224:	94000304 	addi	r16,r18,12
    5228:	94800384 	addi	r18,r18,14
    522c:	8080000b 	ldhu	r2,0(r16)
    5230:	8c7fffc4 	addi	r17,r17,-1
    5234:	813ffd04 	addi	r4,r16,-12
    5238:	b080042e 	bgeu	r22,r2,524c <_fwalk+0x78>
    523c:	9080000f 	ldh	r2,0(r18)
    5240:	14c00226 	beq	r2,r19,524c <_fwalk+0x78>
    5244:	a83ee83a 	callr	r21
    5248:	b8aeb03a 	or	r23,r23,r2
    524c:	84001a04 	addi	r16,r16,104
    5250:	94801a04 	addi	r18,r18,104
    5254:	8cfff51e 	bne	r17,r19,522c <_fwalk+0x58>
    5258:	a5000017 	ldw	r20,0(r20)
    525c:	a03fed1e 	bne	r20,zero,5214 <_fwalk+0x40>
    5260:	b805883a 	mov	r2,r23
    5264:	dfc00817 	ldw	ra,32(sp)
    5268:	ddc00717 	ldw	r23,28(sp)
    526c:	dd800617 	ldw	r22,24(sp)
    5270:	dd400517 	ldw	r21,20(sp)
    5274:	dd000417 	ldw	r20,16(sp)
    5278:	dcc00317 	ldw	r19,12(sp)
    527c:	dc800217 	ldw	r18,8(sp)
    5280:	dc400117 	ldw	r17,4(sp)
    5284:	dc000017 	ldw	r16,0(sp)
    5288:	dec00904 	addi	sp,sp,36
    528c:	f800283a 	ret
    5290:	002f883a 	mov	r23,zero
    5294:	003ff206 	br	5260 <_fwalk+0x8c>

00005298 <_fwalk_reent>:
    5298:	defff704 	addi	sp,sp,-36
    529c:	dd000415 	stw	r20,16(sp)
    52a0:	dfc00815 	stw	ra,32(sp)
    52a4:	ddc00715 	stw	r23,28(sp)
    52a8:	dd800615 	stw	r22,24(sp)
    52ac:	dd400515 	stw	r21,20(sp)
    52b0:	dcc00315 	stw	r19,12(sp)
    52b4:	dc800215 	stw	r18,8(sp)
    52b8:	dc400115 	stw	r17,4(sp)
    52bc:	dc000015 	stw	r16,0(sp)
    52c0:	2500b804 	addi	r20,r4,736
    52c4:	a0002326 	beq	r20,zero,5354 <_fwalk_reent+0xbc>
    52c8:	282b883a 	mov	r21,r5
    52cc:	2027883a 	mov	r19,r4
    52d0:	002f883a 	mov	r23,zero
    52d4:	05800044 	movi	r22,1
    52d8:	04bfffc4 	movi	r18,-1
    52dc:	a4400117 	ldw	r17,4(r20)
    52e0:	a4000217 	ldw	r16,8(r20)
    52e4:	8c7fffc4 	addi	r17,r17,-1
    52e8:	88000c16 	blt	r17,zero,531c <_fwalk_reent+0x84>
    52ec:	84000304 	addi	r16,r16,12
    52f0:	8080000b 	ldhu	r2,0(r16)
    52f4:	8c7fffc4 	addi	r17,r17,-1
    52f8:	817ffd04 	addi	r5,r16,-12
    52fc:	b080052e 	bgeu	r22,r2,5314 <_fwalk_reent+0x7c>
    5300:	8080008f 	ldh	r2,2(r16)
    5304:	9809883a 	mov	r4,r19
    5308:	14800226 	beq	r2,r18,5314 <_fwalk_reent+0x7c>
    530c:	a83ee83a 	callr	r21
    5310:	b8aeb03a 	or	r23,r23,r2
    5314:	84001a04 	addi	r16,r16,104
    5318:	8cbff51e 	bne	r17,r18,52f0 <_fwalk_reent+0x58>
    531c:	a5000017 	ldw	r20,0(r20)
    5320:	a03fee1e 	bne	r20,zero,52dc <_fwalk_reent+0x44>
    5324:	b805883a 	mov	r2,r23
    5328:	dfc00817 	ldw	ra,32(sp)
    532c:	ddc00717 	ldw	r23,28(sp)
    5330:	dd800617 	ldw	r22,24(sp)
    5334:	dd400517 	ldw	r21,20(sp)
    5338:	dd000417 	ldw	r20,16(sp)
    533c:	dcc00317 	ldw	r19,12(sp)
    5340:	dc800217 	ldw	r18,8(sp)
    5344:	dc400117 	ldw	r17,4(sp)
    5348:	dc000017 	ldw	r16,0(sp)
    534c:	dec00904 	addi	sp,sp,36
    5350:	f800283a 	ret
    5354:	002f883a 	mov	r23,zero
    5358:	003ff206 	br	5324 <_fwalk_reent+0x8c>

0000535c <_setlocale_r>:
    535c:	30001b26 	beq	r6,zero,53cc <_setlocale_r+0x70>
    5360:	01410034 	movhi	r5,1024
    5364:	defffe04 	addi	sp,sp,-8
    5368:	29402c04 	addi	r5,r5,176
    536c:	3009883a 	mov	r4,r6
    5370:	dc000015 	stw	r16,0(sp)
    5374:	dfc00115 	stw	ra,4(sp)
    5378:	3021883a 	mov	r16,r6
    537c:	0007ad00 	call	7ad0 <strcmp>
    5380:	1000061e 	bne	r2,zero,539c <_setlocale_r+0x40>
    5384:	00810034 	movhi	r2,1024
    5388:	10802b04 	addi	r2,r2,172
    538c:	dfc00117 	ldw	ra,4(sp)
    5390:	dc000017 	ldw	r16,0(sp)
    5394:	dec00204 	addi	sp,sp,8
    5398:	f800283a 	ret
    539c:	01410034 	movhi	r5,1024
    53a0:	29402b04 	addi	r5,r5,172
    53a4:	8009883a 	mov	r4,r16
    53a8:	0007ad00 	call	7ad0 <strcmp>
    53ac:	103ff526 	beq	r2,zero,5384 <_setlocale_r+0x28>
    53b0:	01410034 	movhi	r5,1024
    53b4:	29401604 	addi	r5,r5,88
    53b8:	8009883a 	mov	r4,r16
    53bc:	0007ad00 	call	7ad0 <strcmp>
    53c0:	103ff026 	beq	r2,zero,5384 <_setlocale_r+0x28>
    53c4:	0005883a 	mov	r2,zero
    53c8:	003ff006 	br	538c <_setlocale_r+0x30>
    53cc:	00810034 	movhi	r2,1024
    53d0:	10802b04 	addi	r2,r2,172
    53d4:	f800283a 	ret

000053d8 <__locale_charset>:
    53d8:	00810034 	movhi	r2,1024
    53dc:	1081de04 	addi	r2,r2,1912
    53e0:	f800283a 	ret

000053e4 <__locale_mb_cur_max>:
    53e4:	00810034 	movhi	r2,1024
    53e8:	10877a04 	addi	r2,r2,7656
    53ec:	10800017 	ldw	r2,0(r2)
    53f0:	f800283a 	ret

000053f4 <__locale_msgcharset>:
    53f4:	00810034 	movhi	r2,1024
    53f8:	1081d604 	addi	r2,r2,1880
    53fc:	f800283a 	ret

00005400 <__locale_cjk_lang>:
    5400:	0005883a 	mov	r2,zero
    5404:	f800283a 	ret

00005408 <_localeconv_r>:
    5408:	00810034 	movhi	r2,1024
    540c:	1081e604 	addi	r2,r2,1944
    5410:	f800283a 	ret

00005414 <setlocale>:
    5414:	00810034 	movhi	r2,1024
    5418:	10877904 	addi	r2,r2,7652
    541c:	280d883a 	mov	r6,r5
    5420:	200b883a 	mov	r5,r4
    5424:	11000017 	ldw	r4,0(r2)
    5428:	000535c1 	jmpi	535c <_setlocale_r>

0000542c <localeconv>:
    542c:	00810034 	movhi	r2,1024
    5430:	1081e604 	addi	r2,r2,1944
    5434:	f800283a 	ret

00005438 <__smakebuf_r>:
    5438:	2880030b 	ldhu	r2,12(r5)
    543c:	10c0008c 	andi	r3,r2,2
    5440:	1800411e 	bne	r3,zero,5548 <__smakebuf_r+0x110>
    5444:	deffec04 	addi	sp,sp,-80
    5448:	dc000f15 	stw	r16,60(sp)
    544c:	2821883a 	mov	r16,r5
    5450:	2940038f 	ldh	r5,14(r5)
    5454:	dc401015 	stw	r17,64(sp)
    5458:	dfc01315 	stw	ra,76(sp)
    545c:	dcc01215 	stw	r19,72(sp)
    5460:	dc801115 	stw	r18,68(sp)
    5464:	2023883a 	mov	r17,r4
    5468:	28001c16 	blt	r5,zero,54dc <__smakebuf_r+0xa4>
    546c:	d80d883a 	mov	r6,sp
    5470:	00097400 	call	9740 <_fstat_r>
    5474:	10001816 	blt	r2,zero,54d8 <__smakebuf_r+0xa0>
    5478:	d8800117 	ldw	r2,4(sp)
    547c:	00e00014 	movui	r3,32768
    5480:	10bc000c 	andi	r2,r2,61440
    5484:	14c80020 	cmpeqi	r19,r2,8192
    5488:	10c03726 	beq	r2,r3,5568 <__smakebuf_r+0x130>
    548c:	80c0030b 	ldhu	r3,12(r16)
    5490:	18c20014 	ori	r3,r3,2048
    5494:	80c0030d 	sth	r3,12(r16)
    5498:	00c80004 	movi	r3,8192
    549c:	10c0521e 	bne	r2,r3,55e8 <__smakebuf_r+0x1b0>
    54a0:	8140038f 	ldh	r5,14(r16)
    54a4:	8809883a 	mov	r4,r17
    54a8:	000979c0 	call	979c <_isatty_r>
    54ac:	10004c26 	beq	r2,zero,55e0 <__smakebuf_r+0x1a8>
    54b0:	8080030b 	ldhu	r2,12(r16)
    54b4:	80c010c4 	addi	r3,r16,67
    54b8:	80c00015 	stw	r3,0(r16)
    54bc:	10800054 	ori	r2,r2,1
    54c0:	8080030d 	sth	r2,12(r16)
    54c4:	00800044 	movi	r2,1
    54c8:	80c00415 	stw	r3,16(r16)
    54cc:	80800515 	stw	r2,20(r16)
    54d0:	04810004 	movi	r18,1024
    54d4:	00000706 	br	54f4 <__smakebuf_r+0xbc>
    54d8:	8080030b 	ldhu	r2,12(r16)
    54dc:	10c0200c 	andi	r3,r2,128
    54e0:	18001f1e 	bne	r3,zero,5560 <__smakebuf_r+0x128>
    54e4:	04810004 	movi	r18,1024
    54e8:	10820014 	ori	r2,r2,2048
    54ec:	8080030d 	sth	r2,12(r16)
    54f0:	0027883a 	mov	r19,zero
    54f4:	900b883a 	mov	r5,r18
    54f8:	8809883a 	mov	r4,r17
    54fc:	00055f40 	call	55f4 <_malloc_r>
    5500:	10002c26 	beq	r2,zero,55b4 <__smakebuf_r+0x17c>
    5504:	80c0030b 	ldhu	r3,12(r16)
    5508:	01000034 	movhi	r4,0
    550c:	21114c04 	addi	r4,r4,17712
    5510:	89000f15 	stw	r4,60(r17)
    5514:	18c02014 	ori	r3,r3,128
    5518:	80c0030d 	sth	r3,12(r16)
    551c:	80800015 	stw	r2,0(r16)
    5520:	80800415 	stw	r2,16(r16)
    5524:	84800515 	stw	r18,20(r16)
    5528:	98001a1e 	bne	r19,zero,5594 <__smakebuf_r+0x15c>
    552c:	dfc01317 	ldw	ra,76(sp)
    5530:	dcc01217 	ldw	r19,72(sp)
    5534:	dc801117 	ldw	r18,68(sp)
    5538:	dc401017 	ldw	r17,64(sp)
    553c:	dc000f17 	ldw	r16,60(sp)
    5540:	dec01404 	addi	sp,sp,80
    5544:	f800283a 	ret
    5548:	288010c4 	addi	r2,r5,67
    554c:	28800015 	stw	r2,0(r5)
    5550:	28800415 	stw	r2,16(r5)
    5554:	00800044 	movi	r2,1
    5558:	28800515 	stw	r2,20(r5)
    555c:	f800283a 	ret
    5560:	04801004 	movi	r18,64
    5564:	003fe006 	br	54e8 <__smakebuf_r+0xb0>
    5568:	81000a17 	ldw	r4,40(r16)
    556c:	00c00034 	movhi	r3,0
    5570:	18de9b04 	addi	r3,r3,31340
    5574:	20ffc51e 	bne	r4,r3,548c <__smakebuf_r+0x54>
    5578:	8080030b 	ldhu	r2,12(r16)
    557c:	04810004 	movi	r18,1024
    5580:	84801315 	stw	r18,76(r16)
    5584:	1484b03a 	or	r2,r2,r18
    5588:	8080030d 	sth	r2,12(r16)
    558c:	0027883a 	mov	r19,zero
    5590:	003fd806 	br	54f4 <__smakebuf_r+0xbc>
    5594:	8140038f 	ldh	r5,14(r16)
    5598:	8809883a 	mov	r4,r17
    559c:	000979c0 	call	979c <_isatty_r>
    55a0:	103fe226 	beq	r2,zero,552c <__smakebuf_r+0xf4>
    55a4:	8080030b 	ldhu	r2,12(r16)
    55a8:	10800054 	ori	r2,r2,1
    55ac:	8080030d 	sth	r2,12(r16)
    55b0:	003fde06 	br	552c <__smakebuf_r+0xf4>
    55b4:	8080030b 	ldhu	r2,12(r16)
    55b8:	10c0800c 	andi	r3,r2,512
    55bc:	183fdb1e 	bne	r3,zero,552c <__smakebuf_r+0xf4>
    55c0:	10800094 	ori	r2,r2,2
    55c4:	80c010c4 	addi	r3,r16,67
    55c8:	8080030d 	sth	r2,12(r16)
    55cc:	00800044 	movi	r2,1
    55d0:	80c00015 	stw	r3,0(r16)
    55d4:	80c00415 	stw	r3,16(r16)
    55d8:	80800515 	stw	r2,20(r16)
    55dc:	003fd306 	br	552c <__smakebuf_r+0xf4>
    55e0:	04810004 	movi	r18,1024
    55e4:	003fc306 	br	54f4 <__smakebuf_r+0xbc>
    55e8:	0027883a 	mov	r19,zero
    55ec:	04810004 	movi	r18,1024
    55f0:	003fc006 	br	54f4 <__smakebuf_r+0xbc>

000055f4 <_malloc_r>:
    55f4:	defff504 	addi	sp,sp,-44
    55f8:	dc800315 	stw	r18,12(sp)
    55fc:	dfc00a15 	stw	ra,40(sp)
    5600:	df000915 	stw	fp,36(sp)
    5604:	ddc00815 	stw	r23,32(sp)
    5608:	dd800715 	stw	r22,28(sp)
    560c:	dd400615 	stw	r21,24(sp)
    5610:	dd000515 	stw	r20,20(sp)
    5614:	dcc00415 	stw	r19,16(sp)
    5618:	dc400215 	stw	r17,8(sp)
    561c:	dc000115 	stw	r16,4(sp)
    5620:	288002c4 	addi	r2,r5,11
    5624:	00c00584 	movi	r3,22
    5628:	2025883a 	mov	r18,r4
    562c:	18807f2e 	bgeu	r3,r2,582c <_malloc_r+0x238>
    5630:	047ffe04 	movi	r17,-8
    5634:	1462703a 	and	r17,r2,r17
    5638:	8800a316 	blt	r17,zero,58c8 <_malloc_r+0x2d4>
    563c:	8940a236 	bltu	r17,r5,58c8 <_malloc_r+0x2d4>
    5640:	000d7cc0 	call	d7cc <__malloc_lock>
    5644:	00807dc4 	movi	r2,503
    5648:	1441e92e 	bgeu	r2,r17,5df0 <_malloc_r+0x7fc>
    564c:	8804d27a 	srli	r2,r17,9
    5650:	1000a126 	beq	r2,zero,58d8 <_malloc_r+0x2e4>
    5654:	00c00104 	movi	r3,4
    5658:	18811e36 	bltu	r3,r2,5ad4 <_malloc_r+0x4e0>
    565c:	8804d1ba 	srli	r2,r17,6
    5660:	12000e44 	addi	r8,r2,57
    5664:	11c00e04 	addi	r7,r2,56
    5668:	4209883a 	add	r4,r8,r8
    566c:	04c10034 	movhi	r19,1024
    5670:	2109883a 	add	r4,r4,r4
    5674:	9cc1f404 	addi	r19,r19,2000
    5678:	2109883a 	add	r4,r4,r4
    567c:	9909883a 	add	r4,r19,r4
    5680:	24000117 	ldw	r16,4(r4)
    5684:	213ffe04 	addi	r4,r4,-8
    5688:	24009726 	beq	r4,r16,58e8 <_malloc_r+0x2f4>
    568c:	80800117 	ldw	r2,4(r16)
    5690:	01bfff04 	movi	r6,-4
    5694:	014003c4 	movi	r5,15
    5698:	1184703a 	and	r2,r2,r6
    569c:	1447c83a 	sub	r3,r2,r17
    56a0:	28c00716 	blt	r5,r3,56c0 <_malloc_r+0xcc>
    56a4:	1800920e 	bge	r3,zero,58f0 <_malloc_r+0x2fc>
    56a8:	84000317 	ldw	r16,12(r16)
    56ac:	24008e26 	beq	r4,r16,58e8 <_malloc_r+0x2f4>
    56b0:	80800117 	ldw	r2,4(r16)
    56b4:	1184703a 	and	r2,r2,r6
    56b8:	1447c83a 	sub	r3,r2,r17
    56bc:	28fff90e 	bge	r5,r3,56a4 <_malloc_r+0xb0>
    56c0:	3809883a 	mov	r4,r7
    56c4:	01810034 	movhi	r6,1024
    56c8:	9c000417 	ldw	r16,16(r19)
    56cc:	3181f404 	addi	r6,r6,2000
    56d0:	32000204 	addi	r8,r6,8
    56d4:	82013426 	beq	r16,r8,5ba8 <_malloc_r+0x5b4>
    56d8:	80c00117 	ldw	r3,4(r16)
    56dc:	00bfff04 	movi	r2,-4
    56e0:	188e703a 	and	r7,r3,r2
    56e4:	3c45c83a 	sub	r2,r7,r17
    56e8:	00c003c4 	movi	r3,15
    56ec:	18811f16 	blt	r3,r2,5b6c <_malloc_r+0x578>
    56f0:	32000515 	stw	r8,20(r6)
    56f4:	32000415 	stw	r8,16(r6)
    56f8:	10007f0e 	bge	r2,zero,58f8 <_malloc_r+0x304>
    56fc:	00807fc4 	movi	r2,511
    5700:	11c0fd36 	bltu	r2,r7,5af8 <_malloc_r+0x504>
    5704:	3806d0fa 	srli	r3,r7,3
    5708:	01c00044 	movi	r7,1
    570c:	30800117 	ldw	r2,4(r6)
    5710:	19400044 	addi	r5,r3,1
    5714:	294b883a 	add	r5,r5,r5
    5718:	1807d0ba 	srai	r3,r3,2
    571c:	294b883a 	add	r5,r5,r5
    5720:	294b883a 	add	r5,r5,r5
    5724:	298b883a 	add	r5,r5,r6
    5728:	38c6983a 	sll	r3,r7,r3
    572c:	29c00017 	ldw	r7,0(r5)
    5730:	2a7ffe04 	addi	r9,r5,-8
    5734:	1886b03a 	or	r3,r3,r2
    5738:	82400315 	stw	r9,12(r16)
    573c:	81c00215 	stw	r7,8(r16)
    5740:	30c00115 	stw	r3,4(r6)
    5744:	2c000015 	stw	r16,0(r5)
    5748:	3c000315 	stw	r16,12(r7)
    574c:	2005d0ba 	srai	r2,r4,2
    5750:	01400044 	movi	r5,1
    5754:	288a983a 	sll	r5,r5,r2
    5758:	19406f36 	bltu	r3,r5,5918 <_malloc_r+0x324>
    575c:	28c4703a 	and	r2,r5,r3
    5760:	10000a1e 	bne	r2,zero,578c <_malloc_r+0x198>
    5764:	00bfff04 	movi	r2,-4
    5768:	294b883a 	add	r5,r5,r5
    576c:	2088703a 	and	r4,r4,r2
    5770:	28c4703a 	and	r2,r5,r3
    5774:	21000104 	addi	r4,r4,4
    5778:	1000041e 	bne	r2,zero,578c <_malloc_r+0x198>
    577c:	294b883a 	add	r5,r5,r5
    5780:	28c4703a 	and	r2,r5,r3
    5784:	21000104 	addi	r4,r4,4
    5788:	103ffc26 	beq	r2,zero,577c <_malloc_r+0x188>
    578c:	02bfff04 	movi	r10,-4
    5790:	024003c4 	movi	r9,15
    5794:	21800044 	addi	r6,r4,1
    5798:	318d883a 	add	r6,r6,r6
    579c:	318d883a 	add	r6,r6,r6
    57a0:	318d883a 	add	r6,r6,r6
    57a4:	998d883a 	add	r6,r19,r6
    57a8:	333ffe04 	addi	r12,r6,-8
    57ac:	2017883a 	mov	r11,r4
    57b0:	31800104 	addi	r6,r6,4
    57b4:	34000017 	ldw	r16,0(r6)
    57b8:	31fffd04 	addi	r7,r6,-12
    57bc:	81c0041e 	bne	r16,r7,57d0 <_malloc_r+0x1dc>
    57c0:	0000fb06 	br	5bb0 <_malloc_r+0x5bc>
    57c4:	1801030e 	bge	r3,zero,5bd4 <_malloc_r+0x5e0>
    57c8:	84000317 	ldw	r16,12(r16)
    57cc:	81c0f826 	beq	r16,r7,5bb0 <_malloc_r+0x5bc>
    57d0:	80800117 	ldw	r2,4(r16)
    57d4:	1284703a 	and	r2,r2,r10
    57d8:	1447c83a 	sub	r3,r2,r17
    57dc:	48fff90e 	bge	r9,r3,57c4 <_malloc_r+0x1d0>
    57e0:	80800317 	ldw	r2,12(r16)
    57e4:	81000217 	ldw	r4,8(r16)
    57e8:	89400054 	ori	r5,r17,1
    57ec:	81400115 	stw	r5,4(r16)
    57f0:	20800315 	stw	r2,12(r4)
    57f4:	11000215 	stw	r4,8(r2)
    57f8:	8463883a 	add	r17,r16,r17
    57fc:	9c400515 	stw	r17,20(r19)
    5800:	9c400415 	stw	r17,16(r19)
    5804:	18800054 	ori	r2,r3,1
    5808:	88800115 	stw	r2,4(r17)
    580c:	8a000315 	stw	r8,12(r17)
    5810:	8a000215 	stw	r8,8(r17)
    5814:	88e3883a 	add	r17,r17,r3
    5818:	88c00015 	stw	r3,0(r17)
    581c:	9009883a 	mov	r4,r18
    5820:	000d7f00 	call	d7f0 <__malloc_unlock>
    5824:	80800204 	addi	r2,r16,8
    5828:	00001b06 	br	5898 <_malloc_r+0x2a4>
    582c:	04400404 	movi	r17,16
    5830:	89402536 	bltu	r17,r5,58c8 <_malloc_r+0x2d4>
    5834:	000d7cc0 	call	d7cc <__malloc_lock>
    5838:	00800184 	movi	r2,6
    583c:	01000084 	movi	r4,2
    5840:	04c10034 	movhi	r19,1024
    5844:	1085883a 	add	r2,r2,r2
    5848:	9cc1f404 	addi	r19,r19,2000
    584c:	1085883a 	add	r2,r2,r2
    5850:	9885883a 	add	r2,r19,r2
    5854:	14000117 	ldw	r16,4(r2)
    5858:	10fffe04 	addi	r3,r2,-8
    585c:	80c0d926 	beq	r16,r3,5bc4 <_malloc_r+0x5d0>
    5860:	80c00117 	ldw	r3,4(r16)
    5864:	81000317 	ldw	r4,12(r16)
    5868:	00bfff04 	movi	r2,-4
    586c:	1884703a 	and	r2,r3,r2
    5870:	81400217 	ldw	r5,8(r16)
    5874:	8085883a 	add	r2,r16,r2
    5878:	10c00117 	ldw	r3,4(r2)
    587c:	29000315 	stw	r4,12(r5)
    5880:	21400215 	stw	r5,8(r4)
    5884:	18c00054 	ori	r3,r3,1
    5888:	10c00115 	stw	r3,4(r2)
    588c:	9009883a 	mov	r4,r18
    5890:	000d7f00 	call	d7f0 <__malloc_unlock>
    5894:	80800204 	addi	r2,r16,8
    5898:	dfc00a17 	ldw	ra,40(sp)
    589c:	df000917 	ldw	fp,36(sp)
    58a0:	ddc00817 	ldw	r23,32(sp)
    58a4:	dd800717 	ldw	r22,28(sp)
    58a8:	dd400617 	ldw	r21,24(sp)
    58ac:	dd000517 	ldw	r20,20(sp)
    58b0:	dcc00417 	ldw	r19,16(sp)
    58b4:	dc800317 	ldw	r18,12(sp)
    58b8:	dc400217 	ldw	r17,8(sp)
    58bc:	dc000117 	ldw	r16,4(sp)
    58c0:	dec00b04 	addi	sp,sp,44
    58c4:	f800283a 	ret
    58c8:	00800304 	movi	r2,12
    58cc:	90800015 	stw	r2,0(r18)
    58d0:	0005883a 	mov	r2,zero
    58d4:	003ff006 	br	5898 <_malloc_r+0x2a4>
    58d8:	01002004 	movi	r4,128
    58dc:	02001004 	movi	r8,64
    58e0:	01c00fc4 	movi	r7,63
    58e4:	003f6106 	br	566c <_malloc_r+0x78>
    58e8:	4009883a 	mov	r4,r8
    58ec:	003f7506 	br	56c4 <_malloc_r+0xd0>
    58f0:	81000317 	ldw	r4,12(r16)
    58f4:	003fde06 	br	5870 <_malloc_r+0x27c>
    58f8:	81c5883a 	add	r2,r16,r7
    58fc:	11400117 	ldw	r5,4(r2)
    5900:	9009883a 	mov	r4,r18
    5904:	29400054 	ori	r5,r5,1
    5908:	11400115 	stw	r5,4(r2)
    590c:	000d7f00 	call	d7f0 <__malloc_unlock>
    5910:	80800204 	addi	r2,r16,8
    5914:	003fe006 	br	5898 <_malloc_r+0x2a4>
    5918:	9c000217 	ldw	r16,8(r19)
    591c:	00bfff04 	movi	r2,-4
    5920:	85800117 	ldw	r22,4(r16)
    5924:	b0ac703a 	and	r22,r22,r2
    5928:	b4400336 	bltu	r22,r17,5938 <_malloc_r+0x344>
    592c:	b445c83a 	sub	r2,r22,r17
    5930:	00c003c4 	movi	r3,15
    5934:	18805d16 	blt	r3,r2,5aac <_malloc_r+0x4b8>
    5938:	05c10034 	movhi	r23,1024
    593c:	00810034 	movhi	r2,1024
    5940:	10878d04 	addi	r2,r2,7732
    5944:	bdc77b04 	addi	r23,r23,7660
    5948:	15400017 	ldw	r21,0(r2)
    594c:	b8c00017 	ldw	r3,0(r23)
    5950:	00bfffc4 	movi	r2,-1
    5954:	858d883a 	add	r6,r16,r22
    5958:	8d6b883a 	add	r21,r17,r21
    595c:	1880ea26 	beq	r3,r2,5d08 <_malloc_r+0x714>
    5960:	ad4403c4 	addi	r21,r21,4111
    5964:	00bc0004 	movi	r2,-4096
    5968:	a8aa703a 	and	r21,r21,r2
    596c:	a80b883a 	mov	r5,r21
    5970:	9009883a 	mov	r4,r18
    5974:	d9800015 	stw	r6,0(sp)
    5978:	00079400 	call	7940 <_sbrk_r>
    597c:	1029883a 	mov	r20,r2
    5980:	00bfffc4 	movi	r2,-1
    5984:	d9800017 	ldw	r6,0(sp)
    5988:	a080e826 	beq	r20,r2,5d2c <_malloc_r+0x738>
    598c:	a180a636 	bltu	r20,r6,5c28 <_malloc_r+0x634>
    5990:	07010034 	movhi	fp,1024
    5994:	e7079604 	addi	fp,fp,7768
    5998:	e0800017 	ldw	r2,0(fp)
    599c:	a887883a 	add	r3,r21,r2
    59a0:	e0c00015 	stw	r3,0(fp)
    59a4:	3500e626 	beq	r6,r20,5d40 <_malloc_r+0x74c>
    59a8:	b9000017 	ldw	r4,0(r23)
    59ac:	00bfffc4 	movi	r2,-1
    59b0:	2080ee26 	beq	r4,r2,5d6c <_malloc_r+0x778>
    59b4:	a185c83a 	sub	r2,r20,r6
    59b8:	10c5883a 	add	r2,r2,r3
    59bc:	e0800015 	stw	r2,0(fp)
    59c0:	a0c001cc 	andi	r3,r20,7
    59c4:	1800bc26 	beq	r3,zero,5cb8 <_malloc_r+0x6c4>
    59c8:	a0e9c83a 	sub	r20,r20,r3
    59cc:	00840204 	movi	r2,4104
    59d0:	a5000204 	addi	r20,r20,8
    59d4:	10c7c83a 	sub	r3,r2,r3
    59d8:	a545883a 	add	r2,r20,r21
    59dc:	1083ffcc 	andi	r2,r2,4095
    59e0:	18abc83a 	sub	r21,r3,r2
    59e4:	a80b883a 	mov	r5,r21
    59e8:	9009883a 	mov	r4,r18
    59ec:	00079400 	call	7940 <_sbrk_r>
    59f0:	00ffffc4 	movi	r3,-1
    59f4:	10c0e126 	beq	r2,r3,5d7c <_malloc_r+0x788>
    59f8:	1505c83a 	sub	r2,r2,r20
    59fc:	1545883a 	add	r2,r2,r21
    5a00:	10800054 	ori	r2,r2,1
    5a04:	e0c00017 	ldw	r3,0(fp)
    5a08:	9d000215 	stw	r20,8(r19)
    5a0c:	a0800115 	stw	r2,4(r20)
    5a10:	a8c7883a 	add	r3,r21,r3
    5a14:	e0c00015 	stw	r3,0(fp)
    5a18:	84c00e26 	beq	r16,r19,5a54 <_malloc_r+0x460>
    5a1c:	018003c4 	movi	r6,15
    5a20:	3580a72e 	bgeu	r6,r22,5cc0 <_malloc_r+0x6cc>
    5a24:	81400117 	ldw	r5,4(r16)
    5a28:	013ffe04 	movi	r4,-8
    5a2c:	b0bffd04 	addi	r2,r22,-12
    5a30:	1104703a 	and	r2,r2,r4
    5a34:	2900004c 	andi	r4,r5,1
    5a38:	2088b03a 	or	r4,r4,r2
    5a3c:	81000115 	stw	r4,4(r16)
    5a40:	01400144 	movi	r5,5
    5a44:	8089883a 	add	r4,r16,r2
    5a48:	21400115 	stw	r5,4(r4)
    5a4c:	21400215 	stw	r5,8(r4)
    5a50:	3080cd36 	bltu	r6,r2,5d88 <_malloc_r+0x794>
    5a54:	00810034 	movhi	r2,1024
    5a58:	10878c04 	addi	r2,r2,7728
    5a5c:	11000017 	ldw	r4,0(r2)
    5a60:	20c0012e 	bgeu	r4,r3,5a68 <_malloc_r+0x474>
    5a64:	10c00015 	stw	r3,0(r2)
    5a68:	00810034 	movhi	r2,1024
    5a6c:	10878b04 	addi	r2,r2,7724
    5a70:	11000017 	ldw	r4,0(r2)
    5a74:	9c000217 	ldw	r16,8(r19)
    5a78:	20c0012e 	bgeu	r4,r3,5a80 <_malloc_r+0x48c>
    5a7c:	10c00015 	stw	r3,0(r2)
    5a80:	80c00117 	ldw	r3,4(r16)
    5a84:	00bfff04 	movi	r2,-4
    5a88:	1886703a 	and	r3,r3,r2
    5a8c:	1c45c83a 	sub	r2,r3,r17
    5a90:	1c400236 	bltu	r3,r17,5a9c <_malloc_r+0x4a8>
    5a94:	00c003c4 	movi	r3,15
    5a98:	18800416 	blt	r3,r2,5aac <_malloc_r+0x4b8>
    5a9c:	9009883a 	mov	r4,r18
    5aa0:	000d7f00 	call	d7f0 <__malloc_unlock>
    5aa4:	0005883a 	mov	r2,zero
    5aa8:	003f7b06 	br	5898 <_malloc_r+0x2a4>
    5aac:	88c00054 	ori	r3,r17,1
    5ab0:	80c00115 	stw	r3,4(r16)
    5ab4:	8463883a 	add	r17,r16,r17
    5ab8:	10800054 	ori	r2,r2,1
    5abc:	9c400215 	stw	r17,8(r19)
    5ac0:	88800115 	stw	r2,4(r17)
    5ac4:	9009883a 	mov	r4,r18
    5ac8:	000d7f00 	call	d7f0 <__malloc_unlock>
    5acc:	80800204 	addi	r2,r16,8
    5ad0:	003f7106 	br	5898 <_malloc_r+0x2a4>
    5ad4:	00c00504 	movi	r3,20
    5ad8:	18804a2e 	bgeu	r3,r2,5c04 <_malloc_r+0x610>
    5adc:	00c01504 	movi	r3,84
    5ae0:	18806e36 	bltu	r3,r2,5c9c <_malloc_r+0x6a8>
    5ae4:	8804d33a 	srli	r2,r17,12
    5ae8:	12001bc4 	addi	r8,r2,111
    5aec:	11c01b84 	addi	r7,r2,110
    5af0:	4209883a 	add	r4,r8,r8
    5af4:	003edd06 	br	566c <_malloc_r+0x78>
    5af8:	3804d27a 	srli	r2,r7,9
    5afc:	00c00104 	movi	r3,4
    5b00:	1880442e 	bgeu	r3,r2,5c14 <_malloc_r+0x620>
    5b04:	00c00504 	movi	r3,20
    5b08:	18808136 	bltu	r3,r2,5d10 <_malloc_r+0x71c>
    5b0c:	11401704 	addi	r5,r2,92
    5b10:	10c016c4 	addi	r3,r2,91
    5b14:	294b883a 	add	r5,r5,r5
    5b18:	294b883a 	add	r5,r5,r5
    5b1c:	294b883a 	add	r5,r5,r5
    5b20:	994b883a 	add	r5,r19,r5
    5b24:	28800017 	ldw	r2,0(r5)
    5b28:	01810034 	movhi	r6,1024
    5b2c:	297ffe04 	addi	r5,r5,-8
    5b30:	3181f404 	addi	r6,r6,2000
    5b34:	28806526 	beq	r5,r2,5ccc <_malloc_r+0x6d8>
    5b38:	01bfff04 	movi	r6,-4
    5b3c:	10c00117 	ldw	r3,4(r2)
    5b40:	1986703a 	and	r3,r3,r6
    5b44:	38c0022e 	bgeu	r7,r3,5b50 <_malloc_r+0x55c>
    5b48:	10800217 	ldw	r2,8(r2)
    5b4c:	28bffb1e 	bne	r5,r2,5b3c <_malloc_r+0x548>
    5b50:	11400317 	ldw	r5,12(r2)
    5b54:	98c00117 	ldw	r3,4(r19)
    5b58:	81400315 	stw	r5,12(r16)
    5b5c:	80800215 	stw	r2,8(r16)
    5b60:	2c000215 	stw	r16,8(r5)
    5b64:	14000315 	stw	r16,12(r2)
    5b68:	003ef806 	br	574c <_malloc_r+0x158>
    5b6c:	88c00054 	ori	r3,r17,1
    5b70:	80c00115 	stw	r3,4(r16)
    5b74:	8463883a 	add	r17,r16,r17
    5b78:	34400515 	stw	r17,20(r6)
    5b7c:	34400415 	stw	r17,16(r6)
    5b80:	10c00054 	ori	r3,r2,1
    5b84:	8a000315 	stw	r8,12(r17)
    5b88:	8a000215 	stw	r8,8(r17)
    5b8c:	88c00115 	stw	r3,4(r17)
    5b90:	88a3883a 	add	r17,r17,r2
    5b94:	88800015 	stw	r2,0(r17)
    5b98:	9009883a 	mov	r4,r18
    5b9c:	000d7f00 	call	d7f0 <__malloc_unlock>
    5ba0:	80800204 	addi	r2,r16,8
    5ba4:	003f3c06 	br	5898 <_malloc_r+0x2a4>
    5ba8:	30c00117 	ldw	r3,4(r6)
    5bac:	003ee706 	br	574c <_malloc_r+0x158>
    5bb0:	5ac00044 	addi	r11,r11,1
    5bb4:	588000cc 	andi	r2,r11,3
    5bb8:	31800204 	addi	r6,r6,8
    5bbc:	103efd1e 	bne	r2,zero,57b4 <_malloc_r+0x1c0>
    5bc0:	00002406 	br	5c54 <_malloc_r+0x660>
    5bc4:	14000317 	ldw	r16,12(r2)
    5bc8:	143f251e 	bne	r2,r16,5860 <_malloc_r+0x26c>
    5bcc:	21000084 	addi	r4,r4,2
    5bd0:	003ebc06 	br	56c4 <_malloc_r+0xd0>
    5bd4:	8085883a 	add	r2,r16,r2
    5bd8:	10c00117 	ldw	r3,4(r2)
    5bdc:	81000317 	ldw	r4,12(r16)
    5be0:	81400217 	ldw	r5,8(r16)
    5be4:	18c00054 	ori	r3,r3,1
    5be8:	10c00115 	stw	r3,4(r2)
    5bec:	29000315 	stw	r4,12(r5)
    5bf0:	21400215 	stw	r5,8(r4)
    5bf4:	9009883a 	mov	r4,r18
    5bf8:	000d7f00 	call	d7f0 <__malloc_unlock>
    5bfc:	80800204 	addi	r2,r16,8
    5c00:	003f2506 	br	5898 <_malloc_r+0x2a4>
    5c04:	12001704 	addi	r8,r2,92
    5c08:	11c016c4 	addi	r7,r2,91
    5c0c:	4209883a 	add	r4,r8,r8
    5c10:	003e9606 	br	566c <_malloc_r+0x78>
    5c14:	3804d1ba 	srli	r2,r7,6
    5c18:	11400e44 	addi	r5,r2,57
    5c1c:	10c00e04 	addi	r3,r2,56
    5c20:	294b883a 	add	r5,r5,r5
    5c24:	003fbc06 	br	5b18 <_malloc_r+0x524>
    5c28:	84ff5926 	beq	r16,r19,5990 <_malloc_r+0x39c>
    5c2c:	00810034 	movhi	r2,1024
    5c30:	1081f404 	addi	r2,r2,2000
    5c34:	14000217 	ldw	r16,8(r2)
    5c38:	00bfff04 	movi	r2,-4
    5c3c:	80c00117 	ldw	r3,4(r16)
    5c40:	1886703a 	and	r3,r3,r2
    5c44:	003f9106 	br	5a8c <_malloc_r+0x498>
    5c48:	60800217 	ldw	r2,8(r12)
    5c4c:	213fffc4 	addi	r4,r4,-1
    5c50:	1300651e 	bne	r2,r12,5de8 <_malloc_r+0x7f4>
    5c54:	208000cc 	andi	r2,r4,3
    5c58:	633ffe04 	addi	r12,r12,-8
    5c5c:	103ffa1e 	bne	r2,zero,5c48 <_malloc_r+0x654>
    5c60:	98800117 	ldw	r2,4(r19)
    5c64:	0146303a 	nor	r3,zero,r5
    5c68:	1884703a 	and	r2,r3,r2
    5c6c:	98800115 	stw	r2,4(r19)
    5c70:	294b883a 	add	r5,r5,r5
    5c74:	117f2836 	bltu	r2,r5,5918 <_malloc_r+0x324>
    5c78:	283f2726 	beq	r5,zero,5918 <_malloc_r+0x324>
    5c7c:	2886703a 	and	r3,r5,r2
    5c80:	5809883a 	mov	r4,r11
    5c84:	183ec31e 	bne	r3,zero,5794 <_malloc_r+0x1a0>
    5c88:	294b883a 	add	r5,r5,r5
    5c8c:	2886703a 	and	r3,r5,r2
    5c90:	21000104 	addi	r4,r4,4
    5c94:	183ffc26 	beq	r3,zero,5c88 <_malloc_r+0x694>
    5c98:	003ebe06 	br	5794 <_malloc_r+0x1a0>
    5c9c:	00c05504 	movi	r3,340
    5ca0:	18801236 	bltu	r3,r2,5cec <_malloc_r+0x6f8>
    5ca4:	8804d3fa 	srli	r2,r17,15
    5ca8:	12001e04 	addi	r8,r2,120
    5cac:	11c01dc4 	addi	r7,r2,119
    5cb0:	4209883a 	add	r4,r8,r8
    5cb4:	003e6d06 	br	566c <_malloc_r+0x78>
    5cb8:	00c40004 	movi	r3,4096
    5cbc:	003f4606 	br	59d8 <_malloc_r+0x3e4>
    5cc0:	00800044 	movi	r2,1
    5cc4:	a0800115 	stw	r2,4(r20)
    5cc8:	003f7406 	br	5a9c <_malloc_r+0x4a8>
    5ccc:	1805d0ba 	srai	r2,r3,2
    5cd0:	01c00044 	movi	r7,1
    5cd4:	30c00117 	ldw	r3,4(r6)
    5cd8:	388e983a 	sll	r7,r7,r2
    5cdc:	2805883a 	mov	r2,r5
    5ce0:	38c6b03a 	or	r3,r7,r3
    5ce4:	30c00115 	stw	r3,4(r6)
    5ce8:	003f9b06 	br	5b58 <_malloc_r+0x564>
    5cec:	00c15504 	movi	r3,1364
    5cf0:	18801a36 	bltu	r3,r2,5d5c <_malloc_r+0x768>
    5cf4:	8804d4ba 	srli	r2,r17,18
    5cf8:	12001f44 	addi	r8,r2,125
    5cfc:	11c01f04 	addi	r7,r2,124
    5d00:	4209883a 	add	r4,r8,r8
    5d04:	003e5906 	br	566c <_malloc_r+0x78>
    5d08:	ad400404 	addi	r21,r21,16
    5d0c:	003f1706 	br	596c <_malloc_r+0x378>
    5d10:	00c01504 	movi	r3,84
    5d14:	18802336 	bltu	r3,r2,5da4 <_malloc_r+0x7b0>
    5d18:	3804d33a 	srli	r2,r7,12
    5d1c:	11401bc4 	addi	r5,r2,111
    5d20:	10c01b84 	addi	r3,r2,110
    5d24:	294b883a 	add	r5,r5,r5
    5d28:	003f7b06 	br	5b18 <_malloc_r+0x524>
    5d2c:	9c000217 	ldw	r16,8(r19)
    5d30:	00bfff04 	movi	r2,-4
    5d34:	80c00117 	ldw	r3,4(r16)
    5d38:	1886703a 	and	r3,r3,r2
    5d3c:	003f5306 	br	5a8c <_malloc_r+0x498>
    5d40:	3083ffcc 	andi	r2,r6,4095
    5d44:	103f181e 	bne	r2,zero,59a8 <_malloc_r+0x3b4>
    5d48:	99000217 	ldw	r4,8(r19)
    5d4c:	b545883a 	add	r2,r22,r21
    5d50:	10800054 	ori	r2,r2,1
    5d54:	20800115 	stw	r2,4(r4)
    5d58:	003f3e06 	br	5a54 <_malloc_r+0x460>
    5d5c:	01003f84 	movi	r4,254
    5d60:	02001fc4 	movi	r8,127
    5d64:	01c01f84 	movi	r7,126
    5d68:	003e4006 	br	566c <_malloc_r+0x78>
    5d6c:	00810034 	movhi	r2,1024
    5d70:	10877b04 	addi	r2,r2,7660
    5d74:	15000015 	stw	r20,0(r2)
    5d78:	003f1106 	br	59c0 <_malloc_r+0x3cc>
    5d7c:	00800044 	movi	r2,1
    5d80:	002b883a 	mov	r21,zero
    5d84:	003f1f06 	br	5a04 <_malloc_r+0x410>
    5d88:	81400204 	addi	r5,r16,8
    5d8c:	9009883a 	mov	r4,r18
    5d90:	00049fc0 	call	49fc <_free_r>
    5d94:	00810034 	movhi	r2,1024
    5d98:	10879604 	addi	r2,r2,7768
    5d9c:	10c00017 	ldw	r3,0(r2)
    5da0:	003f2c06 	br	5a54 <_malloc_r+0x460>
    5da4:	00c05504 	movi	r3,340
    5da8:	18800536 	bltu	r3,r2,5dc0 <_malloc_r+0x7cc>
    5dac:	3804d3fa 	srli	r2,r7,15
    5db0:	11401e04 	addi	r5,r2,120
    5db4:	10c01dc4 	addi	r3,r2,119
    5db8:	294b883a 	add	r5,r5,r5
    5dbc:	003f5606 	br	5b18 <_malloc_r+0x524>
    5dc0:	00c15504 	movi	r3,1364
    5dc4:	18800536 	bltu	r3,r2,5ddc <_malloc_r+0x7e8>
    5dc8:	3804d4ba 	srli	r2,r7,18
    5dcc:	11401f44 	addi	r5,r2,125
    5dd0:	10c01f04 	addi	r3,r2,124
    5dd4:	294b883a 	add	r5,r5,r5
    5dd8:	003f4f06 	br	5b18 <_malloc_r+0x524>
    5ddc:	01403f84 	movi	r5,254
    5de0:	00c01f84 	movi	r3,126
    5de4:	003f4c06 	br	5b18 <_malloc_r+0x524>
    5de8:	98800117 	ldw	r2,4(r19)
    5dec:	003fa006 	br	5c70 <_malloc_r+0x67c>
    5df0:	8808d0fa 	srli	r4,r17,3
    5df4:	20800044 	addi	r2,r4,1
    5df8:	1085883a 	add	r2,r2,r2
    5dfc:	003e9006 	br	5840 <_malloc_r+0x24c>

00005e00 <memchr>:
    5e00:	208000cc 	andi	r2,r4,3
    5e04:	280f883a 	mov	r7,r5
    5e08:	10003426 	beq	r2,zero,5edc <memchr+0xdc>
    5e0c:	30bfffc4 	addi	r2,r6,-1
    5e10:	30001a26 	beq	r6,zero,5e7c <memchr+0x7c>
    5e14:	20c00003 	ldbu	r3,0(r4)
    5e18:	29803fcc 	andi	r6,r5,255
    5e1c:	30c0051e 	bne	r6,r3,5e34 <memchr+0x34>
    5e20:	00001806 	br	5e84 <memchr+0x84>
    5e24:	10001526 	beq	r2,zero,5e7c <memchr+0x7c>
    5e28:	20c00003 	ldbu	r3,0(r4)
    5e2c:	10bfffc4 	addi	r2,r2,-1
    5e30:	30c01426 	beq	r6,r3,5e84 <memchr+0x84>
    5e34:	21000044 	addi	r4,r4,1
    5e38:	20c000cc 	andi	r3,r4,3
    5e3c:	183ff91e 	bne	r3,zero,5e24 <memchr+0x24>
    5e40:	020000c4 	movi	r8,3
    5e44:	40801136 	bltu	r8,r2,5e8c <memchr+0x8c>
    5e48:	10000c26 	beq	r2,zero,5e7c <memchr+0x7c>
    5e4c:	20c00003 	ldbu	r3,0(r4)
    5e50:	29403fcc 	andi	r5,r5,255
    5e54:	28c00b26 	beq	r5,r3,5e84 <memchr+0x84>
    5e58:	20c00044 	addi	r3,r4,1
    5e5c:	39803fcc 	andi	r6,r7,255
    5e60:	2089883a 	add	r4,r4,r2
    5e64:	00000306 	br	5e74 <memchr+0x74>
    5e68:	18c00044 	addi	r3,r3,1
    5e6c:	197fffc3 	ldbu	r5,-1(r3)
    5e70:	31400526 	beq	r6,r5,5e88 <memchr+0x88>
    5e74:	1805883a 	mov	r2,r3
    5e78:	20fffb1e 	bne	r4,r3,5e68 <memchr+0x68>
    5e7c:	0005883a 	mov	r2,zero
    5e80:	f800283a 	ret
    5e84:	2005883a 	mov	r2,r4
    5e88:	f800283a 	ret
    5e8c:	28c03fcc 	andi	r3,r5,255
    5e90:	1812923a 	slli	r9,r3,8
    5e94:	02ffbff4 	movhi	r11,65279
    5e98:	02a02074 	movhi	r10,32897
    5e9c:	48d2b03a 	or	r9,r9,r3
    5ea0:	4806943a 	slli	r3,r9,16
    5ea4:	5affbfc4 	addi	r11,r11,-257
    5ea8:	52a02004 	addi	r10,r10,-32640
    5eac:	48d2b03a 	or	r9,r9,r3
    5eb0:	20c00017 	ldw	r3,0(r4)
    5eb4:	48c6f03a 	xor	r3,r9,r3
    5eb8:	1acd883a 	add	r6,r3,r11
    5ebc:	00c6303a 	nor	r3,zero,r3
    5ec0:	30c6703a 	and	r3,r6,r3
    5ec4:	1a86703a 	and	r3,r3,r10
    5ec8:	183fe01e 	bne	r3,zero,5e4c <memchr+0x4c>
    5ecc:	10bfff04 	addi	r2,r2,-4
    5ed0:	21000104 	addi	r4,r4,4
    5ed4:	40bff636 	bltu	r8,r2,5eb0 <memchr+0xb0>
    5ed8:	003fdb06 	br	5e48 <memchr+0x48>
    5edc:	3005883a 	mov	r2,r6
    5ee0:	003fd706 	br	5e40 <memchr+0x40>

00005ee4 <memcpy>:
    5ee4:	defffd04 	addi	sp,sp,-12
    5ee8:	dfc00215 	stw	ra,8(sp)
    5eec:	dc400115 	stw	r17,4(sp)
    5ef0:	dc000015 	stw	r16,0(sp)
    5ef4:	00c003c4 	movi	r3,15
    5ef8:	2005883a 	mov	r2,r4
    5efc:	1980452e 	bgeu	r3,r6,6014 <memcpy+0x130>
    5f00:	2906b03a 	or	r3,r5,r4
    5f04:	18c000cc 	andi	r3,r3,3
    5f08:	1800441e 	bne	r3,zero,601c <memcpy+0x138>
    5f0c:	347ffc04 	addi	r17,r6,-16
    5f10:	8822d13a 	srli	r17,r17,4
    5f14:	28c00104 	addi	r3,r5,4
    5f18:	23400104 	addi	r13,r4,4
    5f1c:	8820913a 	slli	r16,r17,4
    5f20:	2b000204 	addi	r12,r5,8
    5f24:	22c00204 	addi	r11,r4,8
    5f28:	84000504 	addi	r16,r16,20
    5f2c:	2a800304 	addi	r10,r5,12
    5f30:	22400304 	addi	r9,r4,12
    5f34:	2c21883a 	add	r16,r5,r16
    5f38:	2811883a 	mov	r8,r5
    5f3c:	200f883a 	mov	r7,r4
    5f40:	41000017 	ldw	r4,0(r8)
    5f44:	1fc00017 	ldw	ra,0(r3)
    5f48:	63c00017 	ldw	r15,0(r12)
    5f4c:	39000015 	stw	r4,0(r7)
    5f50:	53800017 	ldw	r14,0(r10)
    5f54:	6fc00015 	stw	ra,0(r13)
    5f58:	5bc00015 	stw	r15,0(r11)
    5f5c:	4b800015 	stw	r14,0(r9)
    5f60:	18c00404 	addi	r3,r3,16
    5f64:	39c00404 	addi	r7,r7,16
    5f68:	42000404 	addi	r8,r8,16
    5f6c:	6b400404 	addi	r13,r13,16
    5f70:	63000404 	addi	r12,r12,16
    5f74:	5ac00404 	addi	r11,r11,16
    5f78:	52800404 	addi	r10,r10,16
    5f7c:	4a400404 	addi	r9,r9,16
    5f80:	1c3fef1e 	bne	r3,r16,5f40 <memcpy+0x5c>
    5f84:	89c00044 	addi	r7,r17,1
    5f88:	380e913a 	slli	r7,r7,4
    5f8c:	310003cc 	andi	r4,r6,15
    5f90:	02c000c4 	movi	r11,3
    5f94:	11c7883a 	add	r3,r2,r7
    5f98:	29cb883a 	add	r5,r5,r7
    5f9c:	5900212e 	bgeu	r11,r4,6024 <memcpy+0x140>
    5fa0:	1813883a 	mov	r9,r3
    5fa4:	2811883a 	mov	r8,r5
    5fa8:	200f883a 	mov	r7,r4
    5fac:	42800017 	ldw	r10,0(r8)
    5fb0:	4a400104 	addi	r9,r9,4
    5fb4:	39ffff04 	addi	r7,r7,-4
    5fb8:	4abfff15 	stw	r10,-4(r9)
    5fbc:	42000104 	addi	r8,r8,4
    5fc0:	59fffa36 	bltu	r11,r7,5fac <memcpy+0xc8>
    5fc4:	213fff04 	addi	r4,r4,-4
    5fc8:	2008d0ba 	srli	r4,r4,2
    5fcc:	318000cc 	andi	r6,r6,3
    5fd0:	21000044 	addi	r4,r4,1
    5fd4:	2109883a 	add	r4,r4,r4
    5fd8:	2109883a 	add	r4,r4,r4
    5fdc:	1907883a 	add	r3,r3,r4
    5fe0:	290b883a 	add	r5,r5,r4
    5fe4:	30000626 	beq	r6,zero,6000 <memcpy+0x11c>
    5fe8:	198d883a 	add	r6,r3,r6
    5fec:	29c00003 	ldbu	r7,0(r5)
    5ff0:	18c00044 	addi	r3,r3,1
    5ff4:	29400044 	addi	r5,r5,1
    5ff8:	19ffffc5 	stb	r7,-1(r3)
    5ffc:	19bffb1e 	bne	r3,r6,5fec <memcpy+0x108>
    6000:	dfc00217 	ldw	ra,8(sp)
    6004:	dc400117 	ldw	r17,4(sp)
    6008:	dc000017 	ldw	r16,0(sp)
    600c:	dec00304 	addi	sp,sp,12
    6010:	f800283a 	ret
    6014:	2007883a 	mov	r3,r4
    6018:	003ff206 	br	5fe4 <memcpy+0x100>
    601c:	2007883a 	mov	r3,r4
    6020:	003ff106 	br	5fe8 <memcpy+0x104>
    6024:	200d883a 	mov	r6,r4
    6028:	003fee06 	br	5fe4 <memcpy+0x100>

0000602c <memmove>:
    602c:	2005883a 	mov	r2,r4
    6030:	29000b2e 	bgeu	r5,r4,6060 <memmove+0x34>
    6034:	298f883a 	add	r7,r5,r6
    6038:	21c0092e 	bgeu	r4,r7,6060 <memmove+0x34>
    603c:	2187883a 	add	r3,r4,r6
    6040:	198bc83a 	sub	r5,r3,r6
    6044:	30004826 	beq	r6,zero,6168 <memmove+0x13c>
    6048:	39ffffc4 	addi	r7,r7,-1
    604c:	39000003 	ldbu	r4,0(r7)
    6050:	18ffffc4 	addi	r3,r3,-1
    6054:	19000005 	stb	r4,0(r3)
    6058:	28fffb1e 	bne	r5,r3,6048 <memmove+0x1c>
    605c:	f800283a 	ret
    6060:	00c003c4 	movi	r3,15
    6064:	1980412e 	bgeu	r3,r6,616c <memmove+0x140>
    6068:	2886b03a 	or	r3,r5,r2
    606c:	18c000cc 	andi	r3,r3,3
    6070:	1800401e 	bne	r3,zero,6174 <memmove+0x148>
    6074:	33fffc04 	addi	r15,r6,-16
    6078:	781ed13a 	srli	r15,r15,4
    607c:	28c00104 	addi	r3,r5,4
    6080:	13400104 	addi	r13,r2,4
    6084:	781c913a 	slli	r14,r15,4
    6088:	2b000204 	addi	r12,r5,8
    608c:	12c00204 	addi	r11,r2,8
    6090:	73800504 	addi	r14,r14,20
    6094:	2a800304 	addi	r10,r5,12
    6098:	12400304 	addi	r9,r2,12
    609c:	2b9d883a 	add	r14,r5,r14
    60a0:	2811883a 	mov	r8,r5
    60a4:	100f883a 	mov	r7,r2
    60a8:	41000017 	ldw	r4,0(r8)
    60ac:	39c00404 	addi	r7,r7,16
    60b0:	18c00404 	addi	r3,r3,16
    60b4:	393ffc15 	stw	r4,-16(r7)
    60b8:	193ffc17 	ldw	r4,-16(r3)
    60bc:	6b400404 	addi	r13,r13,16
    60c0:	5ac00404 	addi	r11,r11,16
    60c4:	693ffc15 	stw	r4,-16(r13)
    60c8:	61000017 	ldw	r4,0(r12)
    60cc:	4a400404 	addi	r9,r9,16
    60d0:	42000404 	addi	r8,r8,16
    60d4:	593ffc15 	stw	r4,-16(r11)
    60d8:	51000017 	ldw	r4,0(r10)
    60dc:	63000404 	addi	r12,r12,16
    60e0:	52800404 	addi	r10,r10,16
    60e4:	493ffc15 	stw	r4,-16(r9)
    60e8:	1bbfef1e 	bne	r3,r14,60a8 <memmove+0x7c>
    60ec:	79000044 	addi	r4,r15,1
    60f0:	2008913a 	slli	r4,r4,4
    60f4:	328003cc 	andi	r10,r6,15
    60f8:	02c000c4 	movi	r11,3
    60fc:	1107883a 	add	r3,r2,r4
    6100:	290b883a 	add	r5,r5,r4
    6104:	5a801e2e 	bgeu	r11,r10,6180 <memmove+0x154>
    6108:	1813883a 	mov	r9,r3
    610c:	2811883a 	mov	r8,r5
    6110:	500f883a 	mov	r7,r10
    6114:	41000017 	ldw	r4,0(r8)
    6118:	4a400104 	addi	r9,r9,4
    611c:	39ffff04 	addi	r7,r7,-4
    6120:	493fff15 	stw	r4,-4(r9)
    6124:	42000104 	addi	r8,r8,4
    6128:	59fffa36 	bltu	r11,r7,6114 <memmove+0xe8>
    612c:	513fff04 	addi	r4,r10,-4
    6130:	2008d0ba 	srli	r4,r4,2
    6134:	318000cc 	andi	r6,r6,3
    6138:	21000044 	addi	r4,r4,1
    613c:	2109883a 	add	r4,r4,r4
    6140:	2109883a 	add	r4,r4,r4
    6144:	1907883a 	add	r3,r3,r4
    6148:	290b883a 	add	r5,r5,r4
    614c:	30000b26 	beq	r6,zero,617c <memmove+0x150>
    6150:	198d883a 	add	r6,r3,r6
    6154:	29c00003 	ldbu	r7,0(r5)
    6158:	18c00044 	addi	r3,r3,1
    615c:	29400044 	addi	r5,r5,1
    6160:	19ffffc5 	stb	r7,-1(r3)
    6164:	19bffb1e 	bne	r3,r6,6154 <memmove+0x128>
    6168:	f800283a 	ret
    616c:	1007883a 	mov	r3,r2
    6170:	003ff606 	br	614c <memmove+0x120>
    6174:	1007883a 	mov	r3,r2
    6178:	003ff506 	br	6150 <memmove+0x124>
    617c:	f800283a 	ret
    6180:	500d883a 	mov	r6,r10
    6184:	003ff106 	br	614c <memmove+0x120>

00006188 <memset>:
    6188:	20c000cc 	andi	r3,r4,3
    618c:	2005883a 	mov	r2,r4
    6190:	18004426 	beq	r3,zero,62a4 <memset+0x11c>
    6194:	31ffffc4 	addi	r7,r6,-1
    6198:	30004026 	beq	r6,zero,629c <memset+0x114>
    619c:	2813883a 	mov	r9,r5
    61a0:	200d883a 	mov	r6,r4
    61a4:	2007883a 	mov	r3,r4
    61a8:	00000406 	br	61bc <memset+0x34>
    61ac:	3a3fffc4 	addi	r8,r7,-1
    61b0:	31800044 	addi	r6,r6,1
    61b4:	38003926 	beq	r7,zero,629c <memset+0x114>
    61b8:	400f883a 	mov	r7,r8
    61bc:	18c00044 	addi	r3,r3,1
    61c0:	32400005 	stb	r9,0(r6)
    61c4:	1a0000cc 	andi	r8,r3,3
    61c8:	403ff81e 	bne	r8,zero,61ac <memset+0x24>
    61cc:	010000c4 	movi	r4,3
    61d0:	21c02d2e 	bgeu	r4,r7,6288 <memset+0x100>
    61d4:	29003fcc 	andi	r4,r5,255
    61d8:	200c923a 	slli	r6,r4,8
    61dc:	3108b03a 	or	r4,r6,r4
    61e0:	200c943a 	slli	r6,r4,16
    61e4:	218cb03a 	or	r6,r4,r6
    61e8:	010003c4 	movi	r4,15
    61ec:	21c0182e 	bgeu	r4,r7,6250 <memset+0xc8>
    61f0:	3b3ffc04 	addi	r12,r7,-16
    61f4:	6018d13a 	srli	r12,r12,4
    61f8:	1a000104 	addi	r8,r3,4
    61fc:	1ac00204 	addi	r11,r3,8
    6200:	6008913a 	slli	r4,r12,4
    6204:	1a800304 	addi	r10,r3,12
    6208:	1813883a 	mov	r9,r3
    620c:	21000504 	addi	r4,r4,20
    6210:	1909883a 	add	r4,r3,r4
    6214:	49800015 	stw	r6,0(r9)
    6218:	41800015 	stw	r6,0(r8)
    621c:	59800015 	stw	r6,0(r11)
    6220:	51800015 	stw	r6,0(r10)
    6224:	42000404 	addi	r8,r8,16
    6228:	4a400404 	addi	r9,r9,16
    622c:	5ac00404 	addi	r11,r11,16
    6230:	52800404 	addi	r10,r10,16
    6234:	413ff71e 	bne	r8,r4,6214 <memset+0x8c>
    6238:	63000044 	addi	r12,r12,1
    623c:	6018913a 	slli	r12,r12,4
    6240:	39c003cc 	andi	r7,r7,15
    6244:	010000c4 	movi	r4,3
    6248:	1b07883a 	add	r3,r3,r12
    624c:	21c00e2e 	bgeu	r4,r7,6288 <memset+0x100>
    6250:	1813883a 	mov	r9,r3
    6254:	3811883a 	mov	r8,r7
    6258:	010000c4 	movi	r4,3
    625c:	49800015 	stw	r6,0(r9)
    6260:	423fff04 	addi	r8,r8,-4
    6264:	4a400104 	addi	r9,r9,4
    6268:	223ffc36 	bltu	r4,r8,625c <memset+0xd4>
    626c:	393fff04 	addi	r4,r7,-4
    6270:	2008d0ba 	srli	r4,r4,2
    6274:	39c000cc 	andi	r7,r7,3
    6278:	21000044 	addi	r4,r4,1
    627c:	2109883a 	add	r4,r4,r4
    6280:	2109883a 	add	r4,r4,r4
    6284:	1907883a 	add	r3,r3,r4
    6288:	38000526 	beq	r7,zero,62a0 <memset+0x118>
    628c:	19cf883a 	add	r7,r3,r7
    6290:	19400005 	stb	r5,0(r3)
    6294:	18c00044 	addi	r3,r3,1
    6298:	38fffd1e 	bne	r7,r3,6290 <memset+0x108>
    629c:	f800283a 	ret
    62a0:	f800283a 	ret
    62a4:	2007883a 	mov	r3,r4
    62a8:	300f883a 	mov	r7,r6
    62ac:	003fc706 	br	61cc <memset+0x44>

000062b0 <_Balloc>:
    62b0:	20801317 	ldw	r2,76(r4)
    62b4:	defffc04 	addi	sp,sp,-16
    62b8:	dc400115 	stw	r17,4(sp)
    62bc:	dc000015 	stw	r16,0(sp)
    62c0:	dfc00315 	stw	ra,12(sp)
    62c4:	dc800215 	stw	r18,8(sp)
    62c8:	2023883a 	mov	r17,r4
    62cc:	2821883a 	mov	r16,r5
    62d0:	10000f26 	beq	r2,zero,6310 <_Balloc+0x60>
    62d4:	8407883a 	add	r3,r16,r16
    62d8:	18c7883a 	add	r3,r3,r3
    62dc:	10c7883a 	add	r3,r2,r3
    62e0:	18800017 	ldw	r2,0(r3)
    62e4:	10001126 	beq	r2,zero,632c <_Balloc+0x7c>
    62e8:	11000017 	ldw	r4,0(r2)
    62ec:	19000015 	stw	r4,0(r3)
    62f0:	10000415 	stw	zero,16(r2)
    62f4:	10000315 	stw	zero,12(r2)
    62f8:	dfc00317 	ldw	ra,12(sp)
    62fc:	dc800217 	ldw	r18,8(sp)
    6300:	dc400117 	ldw	r17,4(sp)
    6304:	dc000017 	ldw	r16,0(sp)
    6308:	dec00404 	addi	sp,sp,16
    630c:	f800283a 	ret
    6310:	01800844 	movi	r6,33
    6314:	01400104 	movi	r5,4
    6318:	00093580 	call	9358 <_calloc_r>
    631c:	88801315 	stw	r2,76(r17)
    6320:	103fec1e 	bne	r2,zero,62d4 <_Balloc+0x24>
    6324:	0005883a 	mov	r2,zero
    6328:	003ff306 	br	62f8 <_Balloc+0x48>
    632c:	01400044 	movi	r5,1
    6330:	2c24983a 	sll	r18,r5,r16
    6334:	8809883a 	mov	r4,r17
    6338:	91800144 	addi	r6,r18,5
    633c:	318d883a 	add	r6,r6,r6
    6340:	318d883a 	add	r6,r6,r6
    6344:	00093580 	call	9358 <_calloc_r>
    6348:	103ff626 	beq	r2,zero,6324 <_Balloc+0x74>
    634c:	14000115 	stw	r16,4(r2)
    6350:	14800215 	stw	r18,8(r2)
    6354:	003fe606 	br	62f0 <_Balloc+0x40>

00006358 <_Bfree>:
    6358:	28000826 	beq	r5,zero,637c <_Bfree+0x24>
    635c:	28c00117 	ldw	r3,4(r5)
    6360:	20801317 	ldw	r2,76(r4)
    6364:	18c7883a 	add	r3,r3,r3
    6368:	18c7883a 	add	r3,r3,r3
    636c:	10c5883a 	add	r2,r2,r3
    6370:	10c00017 	ldw	r3,0(r2)
    6374:	28c00015 	stw	r3,0(r5)
    6378:	11400015 	stw	r5,0(r2)
    637c:	f800283a 	ret

00006380 <__multadd>:
    6380:	defff704 	addi	sp,sp,-36
    6384:	dc800215 	stw	r18,8(sp)
    6388:	2c800417 	ldw	r18,16(r5)
    638c:	dd800615 	stw	r22,24(sp)
    6390:	dd400515 	stw	r21,20(sp)
    6394:	dd000415 	stw	r20,16(sp)
    6398:	dcc00315 	stw	r19,12(sp)
    639c:	dc400115 	stw	r17,4(sp)
    63a0:	dc000015 	stw	r16,0(sp)
    63a4:	dfc00815 	stw	ra,32(sp)
    63a8:	ddc00715 	stw	r23,28(sp)
    63ac:	2827883a 	mov	r19,r5
    63b0:	2029883a 	mov	r20,r4
    63b4:	3023883a 	mov	r17,r6
    63b8:	3821883a 	mov	r16,r7
    63bc:	2d400504 	addi	r21,r5,20
    63c0:	002d883a 	mov	r22,zero
    63c4:	adc00017 	ldw	r23,0(r21)
    63c8:	880b883a 	mov	r5,r17
    63cc:	ad400104 	addi	r21,r21,4
    63d0:	b93fffcc 	andi	r4,r23,65535
    63d4:	000a9640 	call	a964 <__mulsi3>
    63d8:	b808d43a 	srli	r4,r23,16
    63dc:	880b883a 	mov	r5,r17
    63e0:	1421883a 	add	r16,r2,r16
    63e4:	000a9640 	call	a964 <__mulsi3>
    63e8:	800ed43a 	srli	r7,r16,16
    63ec:	80ffffcc 	andi	r3,r16,65535
    63f0:	b5800044 	addi	r22,r22,1
    63f4:	11c5883a 	add	r2,r2,r7
    63f8:	100e943a 	slli	r7,r2,16
    63fc:	1020d43a 	srli	r16,r2,16
    6400:	38c7883a 	add	r3,r7,r3
    6404:	a8ffff15 	stw	r3,-4(r21)
    6408:	b4bfee16 	blt	r22,r18,63c4 <__multadd+0x44>
    640c:	80000926 	beq	r16,zero,6434 <__multadd+0xb4>
    6410:	98800217 	ldw	r2,8(r19)
    6414:	9080130e 	bge	r18,r2,6464 <__multadd+0xe4>
    6418:	90800144 	addi	r2,r18,5
    641c:	1085883a 	add	r2,r2,r2
    6420:	1085883a 	add	r2,r2,r2
    6424:	9885883a 	add	r2,r19,r2
    6428:	14000015 	stw	r16,0(r2)
    642c:	94800044 	addi	r18,r18,1
    6430:	9c800415 	stw	r18,16(r19)
    6434:	9805883a 	mov	r2,r19
    6438:	dfc00817 	ldw	ra,32(sp)
    643c:	ddc00717 	ldw	r23,28(sp)
    6440:	dd800617 	ldw	r22,24(sp)
    6444:	dd400517 	ldw	r21,20(sp)
    6448:	dd000417 	ldw	r20,16(sp)
    644c:	dcc00317 	ldw	r19,12(sp)
    6450:	dc800217 	ldw	r18,8(sp)
    6454:	dc400117 	ldw	r17,4(sp)
    6458:	dc000017 	ldw	r16,0(sp)
    645c:	dec00904 	addi	sp,sp,36
    6460:	f800283a 	ret
    6464:	99400117 	ldw	r5,4(r19)
    6468:	a009883a 	mov	r4,r20
    646c:	29400044 	addi	r5,r5,1
    6470:	00062b00 	call	62b0 <_Balloc>
    6474:	99800417 	ldw	r6,16(r19)
    6478:	99400304 	addi	r5,r19,12
    647c:	11000304 	addi	r4,r2,12
    6480:	31800084 	addi	r6,r6,2
    6484:	318d883a 	add	r6,r6,r6
    6488:	318d883a 	add	r6,r6,r6
    648c:	1023883a 	mov	r17,r2
    6490:	0005ee40 	call	5ee4 <memcpy>
    6494:	98000a26 	beq	r19,zero,64c0 <__multadd+0x140>
    6498:	98c00117 	ldw	r3,4(r19)
    649c:	a0801317 	ldw	r2,76(r20)
    64a0:	18c7883a 	add	r3,r3,r3
    64a4:	18c7883a 	add	r3,r3,r3
    64a8:	10c5883a 	add	r2,r2,r3
    64ac:	10c00017 	ldw	r3,0(r2)
    64b0:	98c00015 	stw	r3,0(r19)
    64b4:	14c00015 	stw	r19,0(r2)
    64b8:	8827883a 	mov	r19,r17
    64bc:	003fd606 	br	6418 <__multadd+0x98>
    64c0:	8827883a 	mov	r19,r17
    64c4:	003fd406 	br	6418 <__multadd+0x98>

000064c8 <__s2b>:
    64c8:	defff904 	addi	sp,sp,-28
    64cc:	dc400115 	stw	r17,4(sp)
    64d0:	dc000015 	stw	r16,0(sp)
    64d4:	2023883a 	mov	r17,r4
    64d8:	2821883a 	mov	r16,r5
    64dc:	39000204 	addi	r4,r7,8
    64e0:	01400244 	movi	r5,9
    64e4:	dcc00315 	stw	r19,12(sp)
    64e8:	dc800215 	stw	r18,8(sp)
    64ec:	dfc00615 	stw	ra,24(sp)
    64f0:	dd400515 	stw	r21,20(sp)
    64f4:	dd000415 	stw	r20,16(sp)
    64f8:	3825883a 	mov	r18,r7
    64fc:	3027883a 	mov	r19,r6
    6500:	000a7b00 	call	a7b0 <__divsi3>
    6504:	00c00044 	movi	r3,1
    6508:	000b883a 	mov	r5,zero
    650c:	1880030e 	bge	r3,r2,651c <__s2b+0x54>
    6510:	18c7883a 	add	r3,r3,r3
    6514:	29400044 	addi	r5,r5,1
    6518:	18bffd16 	blt	r3,r2,6510 <__s2b+0x48>
    651c:	8809883a 	mov	r4,r17
    6520:	00062b00 	call	62b0 <_Balloc>
    6524:	d8c00717 	ldw	r3,28(sp)
    6528:	10c00515 	stw	r3,20(r2)
    652c:	00c00044 	movi	r3,1
    6530:	10c00415 	stw	r3,16(r2)
    6534:	00c00244 	movi	r3,9
    6538:	1cc0210e 	bge	r3,r19,65c0 <__s2b+0xf8>
    653c:	80eb883a 	add	r21,r16,r3
    6540:	a829883a 	mov	r20,r21
    6544:	84e1883a 	add	r16,r16,r19
    6548:	a1c00007 	ldb	r7,0(r20)
    654c:	01800284 	movi	r6,10
    6550:	a5000044 	addi	r20,r20,1
    6554:	100b883a 	mov	r5,r2
    6558:	39fff404 	addi	r7,r7,-48
    655c:	8809883a 	mov	r4,r17
    6560:	00063800 	call	6380 <__multadd>
    6564:	a43ff81e 	bne	r20,r16,6548 <__s2b+0x80>
    6568:	ace1883a 	add	r16,r21,r19
    656c:	843ffe04 	addi	r16,r16,-8
    6570:	9c800a0e 	bge	r19,r18,659c <__s2b+0xd4>
    6574:	94e5c83a 	sub	r18,r18,r19
    6578:	84a5883a 	add	r18,r16,r18
    657c:	81c00007 	ldb	r7,0(r16)
    6580:	01800284 	movi	r6,10
    6584:	84000044 	addi	r16,r16,1
    6588:	100b883a 	mov	r5,r2
    658c:	39fff404 	addi	r7,r7,-48
    6590:	8809883a 	mov	r4,r17
    6594:	00063800 	call	6380 <__multadd>
    6598:	84bff81e 	bne	r16,r18,657c <__s2b+0xb4>
    659c:	dfc00617 	ldw	ra,24(sp)
    65a0:	dd400517 	ldw	r21,20(sp)
    65a4:	dd000417 	ldw	r20,16(sp)
    65a8:	dcc00317 	ldw	r19,12(sp)
    65ac:	dc800217 	ldw	r18,8(sp)
    65b0:	dc400117 	ldw	r17,4(sp)
    65b4:	dc000017 	ldw	r16,0(sp)
    65b8:	dec00704 	addi	sp,sp,28
    65bc:	f800283a 	ret
    65c0:	84000284 	addi	r16,r16,10
    65c4:	1827883a 	mov	r19,r3
    65c8:	003fe906 	br	6570 <__s2b+0xa8>

000065cc <__hi0bits>:
    65cc:	20bfffec 	andhi	r2,r4,65535
    65d0:	1000141e 	bne	r2,zero,6624 <__hi0bits+0x58>
    65d4:	2008943a 	slli	r4,r4,16
    65d8:	00800404 	movi	r2,16
    65dc:	20ffc02c 	andhi	r3,r4,65280
    65e0:	1800021e 	bne	r3,zero,65ec <__hi0bits+0x20>
    65e4:	2008923a 	slli	r4,r4,8
    65e8:	10800204 	addi	r2,r2,8
    65ec:	20fc002c 	andhi	r3,r4,61440
    65f0:	1800021e 	bne	r3,zero,65fc <__hi0bits+0x30>
    65f4:	2008913a 	slli	r4,r4,4
    65f8:	10800104 	addi	r2,r2,4
    65fc:	20f0002c 	andhi	r3,r4,49152
    6600:	1800031e 	bne	r3,zero,6610 <__hi0bits+0x44>
    6604:	2109883a 	add	r4,r4,r4
    6608:	10800084 	addi	r2,r2,2
    660c:	2109883a 	add	r4,r4,r4
    6610:	20000316 	blt	r4,zero,6620 <__hi0bits+0x54>
    6614:	2110002c 	andhi	r4,r4,16384
    6618:	2000041e 	bne	r4,zero,662c <__hi0bits+0x60>
    661c:	00800804 	movi	r2,32
    6620:	f800283a 	ret
    6624:	0005883a 	mov	r2,zero
    6628:	003fec06 	br	65dc <__hi0bits+0x10>
    662c:	10800044 	addi	r2,r2,1
    6630:	f800283a 	ret

00006634 <__lo0bits>:
    6634:	20c00017 	ldw	r3,0(r4)
    6638:	188001cc 	andi	r2,r3,7
    663c:	10000826 	beq	r2,zero,6660 <__lo0bits+0x2c>
    6640:	1880004c 	andi	r2,r3,1
    6644:	1000211e 	bne	r2,zero,66cc <__lo0bits+0x98>
    6648:	1880008c 	andi	r2,r3,2
    664c:	1000211e 	bne	r2,zero,66d4 <__lo0bits+0xa0>
    6650:	1806d0ba 	srli	r3,r3,2
    6654:	00800084 	movi	r2,2
    6658:	20c00015 	stw	r3,0(r4)
    665c:	f800283a 	ret
    6660:	18bfffcc 	andi	r2,r3,65535
    6664:	10001326 	beq	r2,zero,66b4 <__lo0bits+0x80>
    6668:	0005883a 	mov	r2,zero
    666c:	19403fcc 	andi	r5,r3,255
    6670:	2800021e 	bne	r5,zero,667c <__lo0bits+0x48>
    6674:	1806d23a 	srli	r3,r3,8
    6678:	10800204 	addi	r2,r2,8
    667c:	194003cc 	andi	r5,r3,15
    6680:	2800021e 	bne	r5,zero,668c <__lo0bits+0x58>
    6684:	1806d13a 	srli	r3,r3,4
    6688:	10800104 	addi	r2,r2,4
    668c:	194000cc 	andi	r5,r3,3
    6690:	2800021e 	bne	r5,zero,669c <__lo0bits+0x68>
    6694:	1806d0ba 	srli	r3,r3,2
    6698:	10800084 	addi	r2,r2,2
    669c:	1940004c 	andi	r5,r3,1
    66a0:	2800081e 	bne	r5,zero,66c4 <__lo0bits+0x90>
    66a4:	1806d07a 	srli	r3,r3,1
    66a8:	1800051e 	bne	r3,zero,66c0 <__lo0bits+0x8c>
    66ac:	00800804 	movi	r2,32
    66b0:	f800283a 	ret
    66b4:	1806d43a 	srli	r3,r3,16
    66b8:	00800404 	movi	r2,16
    66bc:	003feb06 	br	666c <__lo0bits+0x38>
    66c0:	10800044 	addi	r2,r2,1
    66c4:	20c00015 	stw	r3,0(r4)
    66c8:	f800283a 	ret
    66cc:	0005883a 	mov	r2,zero
    66d0:	f800283a 	ret
    66d4:	1806d07a 	srli	r3,r3,1
    66d8:	00800044 	movi	r2,1
    66dc:	20c00015 	stw	r3,0(r4)
    66e0:	f800283a 	ret

000066e4 <__i2b>:
    66e4:	defffd04 	addi	sp,sp,-12
    66e8:	dc000015 	stw	r16,0(sp)
    66ec:	04000044 	movi	r16,1
    66f0:	dc400115 	stw	r17,4(sp)
    66f4:	2823883a 	mov	r17,r5
    66f8:	800b883a 	mov	r5,r16
    66fc:	dfc00215 	stw	ra,8(sp)
    6700:	00062b00 	call	62b0 <_Balloc>
    6704:	14400515 	stw	r17,20(r2)
    6708:	14000415 	stw	r16,16(r2)
    670c:	dfc00217 	ldw	ra,8(sp)
    6710:	dc400117 	ldw	r17,4(sp)
    6714:	dc000017 	ldw	r16,0(sp)
    6718:	dec00304 	addi	sp,sp,12
    671c:	f800283a 	ret

00006720 <__multiply>:
    6720:	deffef04 	addi	sp,sp,-68
    6724:	dc400815 	stw	r17,32(sp)
    6728:	dc000715 	stw	r16,28(sp)
    672c:	34400417 	ldw	r17,16(r6)
    6730:	2c000417 	ldw	r16,16(r5)
    6734:	dd800d15 	stw	r22,52(sp)
    6738:	dc800915 	stw	r18,36(sp)
    673c:	dfc01015 	stw	ra,64(sp)
    6740:	df000f15 	stw	fp,60(sp)
    6744:	ddc00e15 	stw	r23,56(sp)
    6748:	dd400c15 	stw	r21,48(sp)
    674c:	dd000b15 	stw	r20,44(sp)
    6750:	dcc00a15 	stw	r19,40(sp)
    6754:	2825883a 	mov	r18,r5
    6758:	302d883a 	mov	r22,r6
    675c:	8440050e 	bge	r16,r17,6774 <__multiply+0x54>
    6760:	8007883a 	mov	r3,r16
    6764:	3025883a 	mov	r18,r6
    6768:	8821883a 	mov	r16,r17
    676c:	282d883a 	mov	r22,r5
    6770:	1823883a 	mov	r17,r3
    6774:	90800217 	ldw	r2,8(r18)
    6778:	8447883a 	add	r3,r16,r17
    677c:	d8c00215 	stw	r3,8(sp)
    6780:	91400117 	ldw	r5,4(r18)
    6784:	10c0010e 	bge	r2,r3,678c <__multiply+0x6c>
    6788:	29400044 	addi	r5,r5,1
    678c:	00062b00 	call	62b0 <_Balloc>
    6790:	d8c00217 	ldw	r3,8(sp)
    6794:	d8800615 	stw	r2,24(sp)
    6798:	18eb883a 	add	r21,r3,r3
    679c:	ad6b883a 	add	r21,r21,r21
    67a0:	10c00504 	addi	r3,r2,20
    67a4:	1d6b883a 	add	r21,r3,r21
    67a8:	d8c00115 	stw	r3,4(sp)
    67ac:	dd400315 	stw	r21,12(sp)
    67b0:	1805883a 	mov	r2,r3
    67b4:	1d40042e 	bgeu	r3,r21,67c8 <__multiply+0xa8>
    67b8:	d8c00317 	ldw	r3,12(sp)
    67bc:	10000015 	stw	zero,0(r2)
    67c0:	10800104 	addi	r2,r2,4
    67c4:	10fffc36 	bltu	r2,r3,67b8 <__multiply+0x98>
    67c8:	8c63883a 	add	r17,r17,r17
    67cc:	b5800504 	addi	r22,r22,20
    67d0:	8c63883a 	add	r17,r17,r17
    67d4:	94800504 	addi	r18,r18,20
    67d8:	8421883a 	add	r16,r16,r16
    67dc:	b463883a 	add	r17,r22,r17
    67e0:	8421883a 	add	r16,r16,r16
    67e4:	dd800015 	stw	r22,0(sp)
    67e8:	dc800415 	stw	r18,16(sp)
    67ec:	dc400515 	stw	r17,20(sp)
    67f0:	9429883a 	add	r20,r18,r16
    67f4:	b4404f2e 	bgeu	r22,r17,6934 <__multiply+0x214>
    67f8:	d8c00017 	ldw	r3,0(sp)
    67fc:	1c800017 	ldw	r18,0(r3)
    6800:	947fffcc 	andi	r17,r18,65535
    6804:	88001e26 	beq	r17,zero,6880 <__multiply+0x160>
    6808:	dd800117 	ldw	r22,4(sp)
    680c:	dd400417 	ldw	r21,16(sp)
    6810:	0027883a 	mov	r19,zero
    6814:	ac800017 	ldw	r18,0(r21)
    6818:	b4000017 	ldw	r16,0(r22)
    681c:	880b883a 	mov	r5,r17
    6820:	913fffcc 	andi	r4,r18,65535
    6824:	000a9640 	call	a964 <__mulsi3>
    6828:	9008d43a 	srli	r4,r18,16
    682c:	84bfffcc 	andi	r18,r16,65535
    6830:	1485883a 	add	r2,r2,r18
    6834:	14e5883a 	add	r18,r2,r19
    6838:	8020d43a 	srli	r16,r16,16
    683c:	9026d43a 	srli	r19,r18,16
    6840:	880b883a 	mov	r5,r17
    6844:	000a9640 	call	a964 <__mulsi3>
    6848:	1405883a 	add	r2,r2,r16
    684c:	14e1883a 	add	r16,r2,r19
    6850:	90ffffcc 	andi	r3,r18,65535
    6854:	8024943a 	slli	r18,r16,16
    6858:	ad400104 	addi	r21,r21,4
    685c:	b005883a 	mov	r2,r22
    6860:	90c6b03a 	or	r3,r18,r3
    6864:	b0c00015 	stw	r3,0(r22)
    6868:	8026d43a 	srli	r19,r16,16
    686c:	b5800104 	addi	r22,r22,4
    6870:	ad3fe836 	bltu	r21,r20,6814 <__multiply+0xf4>
    6874:	d8c00017 	ldw	r3,0(sp)
    6878:	14c00115 	stw	r19,4(r2)
    687c:	1c800017 	ldw	r18,0(r3)
    6880:	9024d43a 	srli	r18,r18,16
    6884:	90002226 	beq	r18,zero,6910 <__multiply+0x1f0>
    6888:	d8c00117 	ldw	r3,4(sp)
    688c:	dd800417 	ldw	r22,16(sp)
    6890:	002f883a 	mov	r23,zero
    6894:	1f000017 	ldw	fp,0(r3)
    6898:	1823883a 	mov	r17,r3
    689c:	182b883a 	mov	r21,r3
    68a0:	e021883a 	mov	r16,fp
    68a4:	00000106 	br	68ac <__multiply+0x18c>
    68a8:	982b883a 	mov	r21,r19
    68ac:	b100000b 	ldhu	r4,0(r22)
    68b0:	8020d43a 	srli	r16,r16,16
    68b4:	900b883a 	mov	r5,r18
    68b8:	000a9640 	call	a964 <__mulsi3>
    68bc:	1405883a 	add	r2,r2,r16
    68c0:	15ef883a 	add	r23,r2,r23
    68c4:	b804943a 	slli	r2,r23,16
    68c8:	e0ffffcc 	andi	r3,fp,65535
    68cc:	8c400104 	addi	r17,r17,4
    68d0:	10c6b03a 	or	r3,r2,r3
    68d4:	88ffff15 	stw	r3,-4(r17)
    68d8:	b5800104 	addi	r22,r22,4
    68dc:	b13fff17 	ldw	r4,-4(r22)
    68e0:	acc00104 	addi	r19,r21,4
    68e4:	900b883a 	mov	r5,r18
    68e8:	2008d43a 	srli	r4,r4,16
    68ec:	9c000017 	ldw	r16,0(r19)
    68f0:	000a9640 	call	a964 <__mulsi3>
    68f4:	b806d43a 	srli	r3,r23,16
    68f8:	813fffcc 	andi	r4,r16,65535
    68fc:	1105883a 	add	r2,r2,r4
    6900:	10f9883a 	add	fp,r2,r3
    6904:	e02ed43a 	srli	r23,fp,16
    6908:	b53fe736 	bltu	r22,r20,68a8 <__multiply+0x188>
    690c:	af000115 	stw	fp,4(r21)
    6910:	d8c00017 	ldw	r3,0(sp)
    6914:	d9000517 	ldw	r4,20(sp)
    6918:	18c00104 	addi	r3,r3,4
    691c:	d8c00015 	stw	r3,0(sp)
    6920:	d8c00117 	ldw	r3,4(sp)
    6924:	18c00104 	addi	r3,r3,4
    6928:	d8c00115 	stw	r3,4(sp)
    692c:	d8c00017 	ldw	r3,0(sp)
    6930:	193fb136 	bltu	r3,r4,67f8 <__multiply+0xd8>
    6934:	d8c00217 	ldw	r3,8(sp)
    6938:	00c00c0e 	bge	zero,r3,696c <__multiply+0x24c>
    693c:	d8c00317 	ldw	r3,12(sp)
    6940:	18bfff17 	ldw	r2,-4(r3)
    6944:	1d7fff04 	addi	r21,r3,-4
    6948:	10000326 	beq	r2,zero,6958 <__multiply+0x238>
    694c:	00000706 	br	696c <__multiply+0x24c>
    6950:	a8800017 	ldw	r2,0(r21)
    6954:	1000051e 	bne	r2,zero,696c <__multiply+0x24c>
    6958:	d8c00217 	ldw	r3,8(sp)
    695c:	ad7fff04 	addi	r21,r21,-4
    6960:	18ffffc4 	addi	r3,r3,-1
    6964:	d8c00215 	stw	r3,8(sp)
    6968:	183ff91e 	bne	r3,zero,6950 <__multiply+0x230>
    696c:	d8c00617 	ldw	r3,24(sp)
    6970:	d9000217 	ldw	r4,8(sp)
    6974:	1805883a 	mov	r2,r3
    6978:	19000415 	stw	r4,16(r3)
    697c:	dfc01017 	ldw	ra,64(sp)
    6980:	df000f17 	ldw	fp,60(sp)
    6984:	ddc00e17 	ldw	r23,56(sp)
    6988:	dd800d17 	ldw	r22,52(sp)
    698c:	dd400c17 	ldw	r21,48(sp)
    6990:	dd000b17 	ldw	r20,44(sp)
    6994:	dcc00a17 	ldw	r19,40(sp)
    6998:	dc800917 	ldw	r18,36(sp)
    699c:	dc400817 	ldw	r17,32(sp)
    69a0:	dc000717 	ldw	r16,28(sp)
    69a4:	dec01104 	addi	sp,sp,68
    69a8:	f800283a 	ret

000069ac <__pow5mult>:
    69ac:	defffa04 	addi	sp,sp,-24
    69b0:	dcc00315 	stw	r19,12(sp)
    69b4:	dc000015 	stw	r16,0(sp)
    69b8:	dfc00515 	stw	ra,20(sp)
    69bc:	dd000415 	stw	r20,16(sp)
    69c0:	dc800215 	stw	r18,8(sp)
    69c4:	dc400115 	stw	r17,4(sp)
    69c8:	308000cc 	andi	r2,r6,3
    69cc:	3021883a 	mov	r16,r6
    69d0:	2027883a 	mov	r19,r4
    69d4:	10002f1e 	bne	r2,zero,6a94 <__pow5mult+0xe8>
    69d8:	2825883a 	mov	r18,r5
    69dc:	8021d0ba 	srai	r16,r16,2
    69e0:	80001a26 	beq	r16,zero,6a4c <__pow5mult+0xa0>
    69e4:	9c401217 	ldw	r17,72(r19)
    69e8:	8800061e 	bne	r17,zero,6a04 <__pow5mult+0x58>
    69ec:	00003406 	br	6ac0 <__pow5mult+0x114>
    69f0:	8021d07a 	srai	r16,r16,1
    69f4:	80001526 	beq	r16,zero,6a4c <__pow5mult+0xa0>
    69f8:	88800017 	ldw	r2,0(r17)
    69fc:	10001c26 	beq	r2,zero,6a70 <__pow5mult+0xc4>
    6a00:	1023883a 	mov	r17,r2
    6a04:	8080004c 	andi	r2,r16,1
    6a08:	103ff926 	beq	r2,zero,69f0 <__pow5mult+0x44>
    6a0c:	880d883a 	mov	r6,r17
    6a10:	900b883a 	mov	r5,r18
    6a14:	9809883a 	mov	r4,r19
    6a18:	00067200 	call	6720 <__multiply>
    6a1c:	90001b26 	beq	r18,zero,6a8c <__pow5mult+0xe0>
    6a20:	91000117 	ldw	r4,4(r18)
    6a24:	98c01317 	ldw	r3,76(r19)
    6a28:	8021d07a 	srai	r16,r16,1
    6a2c:	2109883a 	add	r4,r4,r4
    6a30:	2109883a 	add	r4,r4,r4
    6a34:	1907883a 	add	r3,r3,r4
    6a38:	19000017 	ldw	r4,0(r3)
    6a3c:	91000015 	stw	r4,0(r18)
    6a40:	1c800015 	stw	r18,0(r3)
    6a44:	1025883a 	mov	r18,r2
    6a48:	803feb1e 	bne	r16,zero,69f8 <__pow5mult+0x4c>
    6a4c:	9005883a 	mov	r2,r18
    6a50:	dfc00517 	ldw	ra,20(sp)
    6a54:	dd000417 	ldw	r20,16(sp)
    6a58:	dcc00317 	ldw	r19,12(sp)
    6a5c:	dc800217 	ldw	r18,8(sp)
    6a60:	dc400117 	ldw	r17,4(sp)
    6a64:	dc000017 	ldw	r16,0(sp)
    6a68:	dec00604 	addi	sp,sp,24
    6a6c:	f800283a 	ret
    6a70:	880d883a 	mov	r6,r17
    6a74:	880b883a 	mov	r5,r17
    6a78:	9809883a 	mov	r4,r19
    6a7c:	00067200 	call	6720 <__multiply>
    6a80:	88800015 	stw	r2,0(r17)
    6a84:	10000015 	stw	zero,0(r2)
    6a88:	003fdd06 	br	6a00 <__pow5mult+0x54>
    6a8c:	1025883a 	mov	r18,r2
    6a90:	003fd706 	br	69f0 <__pow5mult+0x44>
    6a94:	10bfffc4 	addi	r2,r2,-1
    6a98:	1085883a 	add	r2,r2,r2
    6a9c:	00c10034 	movhi	r3,1024
    6aa0:	18c02f04 	addi	r3,r3,188
    6aa4:	1085883a 	add	r2,r2,r2
    6aa8:	1885883a 	add	r2,r3,r2
    6aac:	11800017 	ldw	r6,0(r2)
    6ab0:	000f883a 	mov	r7,zero
    6ab4:	00063800 	call	6380 <__multadd>
    6ab8:	1025883a 	mov	r18,r2
    6abc:	003fc706 	br	69dc <__pow5mult+0x30>
    6ac0:	05000044 	movi	r20,1
    6ac4:	a00b883a 	mov	r5,r20
    6ac8:	9809883a 	mov	r4,r19
    6acc:	00062b00 	call	62b0 <_Balloc>
    6ad0:	1023883a 	mov	r17,r2
    6ad4:	00809c44 	movi	r2,625
    6ad8:	88800515 	stw	r2,20(r17)
    6adc:	8d000415 	stw	r20,16(r17)
    6ae0:	9c401215 	stw	r17,72(r19)
    6ae4:	88000015 	stw	zero,0(r17)
    6ae8:	003fc606 	br	6a04 <__pow5mult+0x58>

00006aec <__lshift>:
    6aec:	defff904 	addi	sp,sp,-28
    6af0:	dd400515 	stw	r21,20(sp)
    6af4:	dcc00315 	stw	r19,12(sp)
    6af8:	302bd17a 	srai	r21,r6,5
    6afc:	2cc00417 	ldw	r19,16(r5)
    6b00:	28800217 	ldw	r2,8(r5)
    6b04:	dd000415 	stw	r20,16(sp)
    6b08:	ace7883a 	add	r19,r21,r19
    6b0c:	dc800215 	stw	r18,8(sp)
    6b10:	dc400115 	stw	r17,4(sp)
    6b14:	dc000015 	stw	r16,0(sp)
    6b18:	dfc00615 	stw	ra,24(sp)
    6b1c:	9c000044 	addi	r16,r19,1
    6b20:	2823883a 	mov	r17,r5
    6b24:	3029883a 	mov	r20,r6
    6b28:	2025883a 	mov	r18,r4
    6b2c:	29400117 	ldw	r5,4(r5)
    6b30:	1400030e 	bge	r2,r16,6b40 <__lshift+0x54>
    6b34:	1085883a 	add	r2,r2,r2
    6b38:	29400044 	addi	r5,r5,1
    6b3c:	143ffd16 	blt	r2,r16,6b34 <__lshift+0x48>
    6b40:	9009883a 	mov	r4,r18
    6b44:	00062b00 	call	62b0 <_Balloc>
    6b48:	10c00504 	addi	r3,r2,20
    6b4c:	0540070e 	bge	zero,r21,6b6c <__lshift+0x80>
    6b50:	ad6b883a 	add	r21,r21,r21
    6b54:	ad6b883a 	add	r21,r21,r21
    6b58:	1809883a 	mov	r4,r3
    6b5c:	1d47883a 	add	r3,r3,r21
    6b60:	20000015 	stw	zero,0(r4)
    6b64:	21000104 	addi	r4,r4,4
    6b68:	193ffd1e 	bne	r3,r4,6b60 <__lshift+0x74>
    6b6c:	8a000417 	ldw	r8,16(r17)
    6b70:	89000504 	addi	r4,r17,20
    6b74:	a18007cc 	andi	r6,r20,31
    6b78:	4211883a 	add	r8,r8,r8
    6b7c:	4211883a 	add	r8,r8,r8
    6b80:	2211883a 	add	r8,r4,r8
    6b84:	30002326 	beq	r6,zero,6c14 <__lshift+0x128>
    6b88:	02400804 	movi	r9,32
    6b8c:	4993c83a 	sub	r9,r9,r6
    6b90:	000b883a 	mov	r5,zero
    6b94:	21c00017 	ldw	r7,0(r4)
    6b98:	1815883a 	mov	r10,r3
    6b9c:	18c00104 	addi	r3,r3,4
    6ba0:	398e983a 	sll	r7,r7,r6
    6ba4:	21000104 	addi	r4,r4,4
    6ba8:	394ab03a 	or	r5,r7,r5
    6bac:	197fff15 	stw	r5,-4(r3)
    6bb0:	217fff17 	ldw	r5,-4(r4)
    6bb4:	2a4ad83a 	srl	r5,r5,r9
    6bb8:	223ff636 	bltu	r4,r8,6b94 <__lshift+0xa8>
    6bbc:	51400115 	stw	r5,4(r10)
    6bc0:	28001a1e 	bne	r5,zero,6c2c <__lshift+0x140>
    6bc4:	843fffc4 	addi	r16,r16,-1
    6bc8:	14000415 	stw	r16,16(r2)
    6bcc:	88000826 	beq	r17,zero,6bf0 <__lshift+0x104>
    6bd0:	89000117 	ldw	r4,4(r17)
    6bd4:	90c01317 	ldw	r3,76(r18)
    6bd8:	2109883a 	add	r4,r4,r4
    6bdc:	2109883a 	add	r4,r4,r4
    6be0:	1907883a 	add	r3,r3,r4
    6be4:	19000017 	ldw	r4,0(r3)
    6be8:	89000015 	stw	r4,0(r17)
    6bec:	1c400015 	stw	r17,0(r3)
    6bf0:	dfc00617 	ldw	ra,24(sp)
    6bf4:	dd400517 	ldw	r21,20(sp)
    6bf8:	dd000417 	ldw	r20,16(sp)
    6bfc:	dcc00317 	ldw	r19,12(sp)
    6c00:	dc800217 	ldw	r18,8(sp)
    6c04:	dc400117 	ldw	r17,4(sp)
    6c08:	dc000017 	ldw	r16,0(sp)
    6c0c:	dec00704 	addi	sp,sp,28
    6c10:	f800283a 	ret
    6c14:	21400017 	ldw	r5,0(r4)
    6c18:	18c00104 	addi	r3,r3,4
    6c1c:	21000104 	addi	r4,r4,4
    6c20:	197fff15 	stw	r5,-4(r3)
    6c24:	223ffb36 	bltu	r4,r8,6c14 <__lshift+0x128>
    6c28:	003fe606 	br	6bc4 <__lshift+0xd8>
    6c2c:	9c000084 	addi	r16,r19,2
    6c30:	003fe406 	br	6bc4 <__lshift+0xd8>

00006c34 <__mcmp>:
    6c34:	20800417 	ldw	r2,16(r4)
    6c38:	28c00417 	ldw	r3,16(r5)
    6c3c:	10c5c83a 	sub	r2,r2,r3
    6c40:	1000111e 	bne	r2,zero,6c88 <__mcmp+0x54>
    6c44:	18c7883a 	add	r3,r3,r3
    6c48:	18c7883a 	add	r3,r3,r3
    6c4c:	21000504 	addi	r4,r4,20
    6c50:	29400504 	addi	r5,r5,20
    6c54:	20c5883a 	add	r2,r4,r3
    6c58:	28cb883a 	add	r5,r5,r3
    6c5c:	00000106 	br	6c64 <__mcmp+0x30>
    6c60:	20800a2e 	bgeu	r4,r2,6c8c <__mcmp+0x58>
    6c64:	10bfff04 	addi	r2,r2,-4
    6c68:	297fff04 	addi	r5,r5,-4
    6c6c:	11800017 	ldw	r6,0(r2)
    6c70:	28c00017 	ldw	r3,0(r5)
    6c74:	30fffa26 	beq	r6,r3,6c60 <__mcmp+0x2c>
    6c78:	30c00236 	bltu	r6,r3,6c84 <__mcmp+0x50>
    6c7c:	00800044 	movi	r2,1
    6c80:	f800283a 	ret
    6c84:	00bfffc4 	movi	r2,-1
    6c88:	f800283a 	ret
    6c8c:	0005883a 	mov	r2,zero
    6c90:	f800283a 	ret

00006c94 <__mdiff>:
    6c94:	28c00417 	ldw	r3,16(r5)
    6c98:	30800417 	ldw	r2,16(r6)
    6c9c:	defffa04 	addi	sp,sp,-24
    6ca0:	dcc00315 	stw	r19,12(sp)
    6ca4:	dc800215 	stw	r18,8(sp)
    6ca8:	dfc00515 	stw	ra,20(sp)
    6cac:	dd000415 	stw	r20,16(sp)
    6cb0:	dc400115 	stw	r17,4(sp)
    6cb4:	dc000015 	stw	r16,0(sp)
    6cb8:	1887c83a 	sub	r3,r3,r2
    6cbc:	2825883a 	mov	r18,r5
    6cc0:	3027883a 	mov	r19,r6
    6cc4:	1800141e 	bne	r3,zero,6d18 <__mdiff+0x84>
    6cc8:	1085883a 	add	r2,r2,r2
    6ccc:	1085883a 	add	r2,r2,r2
    6cd0:	2a000504 	addi	r8,r5,20
    6cd4:	34000504 	addi	r16,r6,20
    6cd8:	4087883a 	add	r3,r8,r2
    6cdc:	8085883a 	add	r2,r16,r2
    6ce0:	00000106 	br	6ce8 <__mdiff+0x54>
    6ce4:	40c0592e 	bgeu	r8,r3,6e4c <__mdiff+0x1b8>
    6ce8:	18ffff04 	addi	r3,r3,-4
    6cec:	10bfff04 	addi	r2,r2,-4
    6cf0:	19c00017 	ldw	r7,0(r3)
    6cf4:	11400017 	ldw	r5,0(r2)
    6cf8:	397ffa26 	beq	r7,r5,6ce4 <__mdiff+0x50>
    6cfc:	3940592e 	bgeu	r7,r5,6e64 <__mdiff+0x1d0>
    6d00:	9005883a 	mov	r2,r18
    6d04:	4023883a 	mov	r17,r8
    6d08:	9825883a 	mov	r18,r19
    6d0c:	05000044 	movi	r20,1
    6d10:	1027883a 	mov	r19,r2
    6d14:	00000406 	br	6d28 <__mdiff+0x94>
    6d18:	18005616 	blt	r3,zero,6e74 <__mdiff+0x1e0>
    6d1c:	34400504 	addi	r17,r6,20
    6d20:	2c000504 	addi	r16,r5,20
    6d24:	0029883a 	mov	r20,zero
    6d28:	91400117 	ldw	r5,4(r18)
    6d2c:	00062b00 	call	62b0 <_Balloc>
    6d30:	92400417 	ldw	r9,16(r18)
    6d34:	9b000417 	ldw	r12,16(r19)
    6d38:	12c00504 	addi	r11,r2,20
    6d3c:	4a51883a 	add	r8,r9,r9
    6d40:	6319883a 	add	r12,r12,r12
    6d44:	4211883a 	add	r8,r8,r8
    6d48:	6319883a 	add	r12,r12,r12
    6d4c:	15000315 	stw	r20,12(r2)
    6d50:	8211883a 	add	r8,r16,r8
    6d54:	8b19883a 	add	r12,r17,r12
    6d58:	0007883a 	mov	r3,zero
    6d5c:	81400017 	ldw	r5,0(r16)
    6d60:	89c00017 	ldw	r7,0(r17)
    6d64:	59800104 	addi	r6,r11,4
    6d68:	293fffcc 	andi	r4,r5,65535
    6d6c:	20c7883a 	add	r3,r4,r3
    6d70:	393fffcc 	andi	r4,r7,65535
    6d74:	1909c83a 	sub	r4,r3,r4
    6d78:	280ad43a 	srli	r5,r5,16
    6d7c:	380ed43a 	srli	r7,r7,16
    6d80:	2007d43a 	srai	r3,r4,16
    6d84:	213fffcc 	andi	r4,r4,65535
    6d88:	29cbc83a 	sub	r5,r5,r7
    6d8c:	28c7883a 	add	r3,r5,r3
    6d90:	180a943a 	slli	r5,r3,16
    6d94:	8c400104 	addi	r17,r17,4
    6d98:	84000104 	addi	r16,r16,4
    6d9c:	2908b03a 	or	r4,r5,r4
    6da0:	59000015 	stw	r4,0(r11)
    6da4:	1807d43a 	srai	r3,r3,16
    6da8:	3015883a 	mov	r10,r6
    6dac:	3017883a 	mov	r11,r6
    6db0:	8b3fea36 	bltu	r17,r12,6d5c <__mdiff+0xc8>
    6db4:	8200162e 	bgeu	r16,r8,6e10 <__mdiff+0x17c>
    6db8:	8017883a 	mov	r11,r16
    6dbc:	59400017 	ldw	r5,0(r11)
    6dc0:	31800104 	addi	r6,r6,4
    6dc4:	5ac00104 	addi	r11,r11,4
    6dc8:	293fffcc 	andi	r4,r5,65535
    6dcc:	20c7883a 	add	r3,r4,r3
    6dd0:	280ed43a 	srli	r7,r5,16
    6dd4:	180bd43a 	srai	r5,r3,16
    6dd8:	193fffcc 	andi	r4,r3,65535
    6ddc:	3947883a 	add	r3,r7,r5
    6de0:	180a943a 	slli	r5,r3,16
    6de4:	1807d43a 	srai	r3,r3,16
    6de8:	2908b03a 	or	r4,r5,r4
    6dec:	313fff15 	stw	r4,-4(r6)
    6df0:	5a3ff236 	bltu	r11,r8,6dbc <__mdiff+0x128>
    6df4:	0406303a 	nor	r3,zero,r16
    6df8:	1a07883a 	add	r3,r3,r8
    6dfc:	1806d0ba 	srli	r3,r3,2
    6e00:	18c00044 	addi	r3,r3,1
    6e04:	18c7883a 	add	r3,r3,r3
    6e08:	18c7883a 	add	r3,r3,r3
    6e0c:	50d5883a 	add	r10,r10,r3
    6e10:	50ffff04 	addi	r3,r10,-4
    6e14:	2000041e 	bne	r4,zero,6e28 <__mdiff+0x194>
    6e18:	18ffff04 	addi	r3,r3,-4
    6e1c:	19000017 	ldw	r4,0(r3)
    6e20:	4a7fffc4 	addi	r9,r9,-1
    6e24:	203ffc26 	beq	r4,zero,6e18 <__mdiff+0x184>
    6e28:	12400415 	stw	r9,16(r2)
    6e2c:	dfc00517 	ldw	ra,20(sp)
    6e30:	dd000417 	ldw	r20,16(sp)
    6e34:	dcc00317 	ldw	r19,12(sp)
    6e38:	dc800217 	ldw	r18,8(sp)
    6e3c:	dc400117 	ldw	r17,4(sp)
    6e40:	dc000017 	ldw	r16,0(sp)
    6e44:	dec00604 	addi	sp,sp,24
    6e48:	f800283a 	ret
    6e4c:	000b883a 	mov	r5,zero
    6e50:	00062b00 	call	62b0 <_Balloc>
    6e54:	00c00044 	movi	r3,1
    6e58:	10c00415 	stw	r3,16(r2)
    6e5c:	10000515 	stw	zero,20(r2)
    6e60:	003ff206 	br	6e2c <__mdiff+0x198>
    6e64:	8023883a 	mov	r17,r16
    6e68:	0029883a 	mov	r20,zero
    6e6c:	4021883a 	mov	r16,r8
    6e70:	003fad06 	br	6d28 <__mdiff+0x94>
    6e74:	9005883a 	mov	r2,r18
    6e78:	94400504 	addi	r17,r18,20
    6e7c:	9c000504 	addi	r16,r19,20
    6e80:	9825883a 	mov	r18,r19
    6e84:	05000044 	movi	r20,1
    6e88:	1027883a 	mov	r19,r2
    6e8c:	003fa606 	br	6d28 <__mdiff+0x94>

00006e90 <__ulp>:
    6e90:	295ffc2c 	andhi	r5,r5,32752
    6e94:	00bf3034 	movhi	r2,64704
    6e98:	2887883a 	add	r3,r5,r2
    6e9c:	00c0020e 	bge	zero,r3,6ea8 <__ulp+0x18>
    6ea0:	0005883a 	mov	r2,zero
    6ea4:	f800283a 	ret
    6ea8:	00c7c83a 	sub	r3,zero,r3
    6eac:	1807d53a 	srai	r3,r3,20
    6eb0:	008004c4 	movi	r2,19
    6eb4:	10c00b0e 	bge	r2,r3,6ee4 <__ulp+0x54>
    6eb8:	18bffb04 	addi	r2,r3,-20
    6ebc:	01000784 	movi	r4,30
    6ec0:	0007883a 	mov	r3,zero
    6ec4:	20800516 	blt	r4,r2,6edc <__ulp+0x4c>
    6ec8:	010007c4 	movi	r4,31
    6ecc:	2089c83a 	sub	r4,r4,r2
    6ed0:	00800044 	movi	r2,1
    6ed4:	1104983a 	sll	r2,r2,r4
    6ed8:	f800283a 	ret
    6edc:	00800044 	movi	r2,1
    6ee0:	f800283a 	ret
    6ee4:	01400234 	movhi	r5,8
    6ee8:	28c7d83a 	sra	r3,r5,r3
    6eec:	0005883a 	mov	r2,zero
    6ef0:	f800283a 	ret

00006ef4 <__b2d>:
    6ef4:	defffa04 	addi	sp,sp,-24
    6ef8:	dc000015 	stw	r16,0(sp)
    6efc:	24000417 	ldw	r16,16(r4)
    6f00:	dc400115 	stw	r17,4(sp)
    6f04:	24400504 	addi	r17,r4,20
    6f08:	8421883a 	add	r16,r16,r16
    6f0c:	8421883a 	add	r16,r16,r16
    6f10:	8c21883a 	add	r16,r17,r16
    6f14:	dc800215 	stw	r18,8(sp)
    6f18:	84bfff17 	ldw	r18,-4(r16)
    6f1c:	dd000415 	stw	r20,16(sp)
    6f20:	dcc00315 	stw	r19,12(sp)
    6f24:	9009883a 	mov	r4,r18
    6f28:	2829883a 	mov	r20,r5
    6f2c:	dfc00515 	stw	ra,20(sp)
    6f30:	00065cc0 	call	65cc <__hi0bits>
    6f34:	00c00804 	movi	r3,32
    6f38:	1889c83a 	sub	r4,r3,r2
    6f3c:	a1000015 	stw	r4,0(r20)
    6f40:	01000284 	movi	r4,10
    6f44:	84ffff04 	addi	r19,r16,-4
    6f48:	20801216 	blt	r4,r2,6f94 <__b2d+0xa0>
    6f4c:	018002c4 	movi	r6,11
    6f50:	308dc83a 	sub	r6,r6,r2
    6f54:	9186d83a 	srl	r3,r18,r6
    6f58:	18cffc34 	orhi	r3,r3,16368
    6f5c:	8cc0212e 	bgeu	r17,r19,6fe4 <__b2d+0xf0>
    6f60:	813ffe17 	ldw	r4,-8(r16)
    6f64:	218cd83a 	srl	r6,r4,r6
    6f68:	10800544 	addi	r2,r2,21
    6f6c:	9084983a 	sll	r2,r18,r2
    6f70:	1184b03a 	or	r2,r2,r6
    6f74:	dfc00517 	ldw	ra,20(sp)
    6f78:	dd000417 	ldw	r20,16(sp)
    6f7c:	dcc00317 	ldw	r19,12(sp)
    6f80:	dc800217 	ldw	r18,8(sp)
    6f84:	dc400117 	ldw	r17,4(sp)
    6f88:	dc000017 	ldw	r16,0(sp)
    6f8c:	dec00604 	addi	sp,sp,24
    6f90:	f800283a 	ret
    6f94:	8cc00f2e 	bgeu	r17,r19,6fd4 <__b2d+0xe0>
    6f98:	117ffd44 	addi	r5,r2,-11
    6f9c:	80bffe17 	ldw	r2,-8(r16)
    6fa0:	28000e26 	beq	r5,zero,6fdc <__b2d+0xe8>
    6fa4:	1949c83a 	sub	r4,r3,r5
    6fa8:	9164983a 	sll	r18,r18,r5
    6fac:	1106d83a 	srl	r3,r2,r4
    6fb0:	81bffe04 	addi	r6,r16,-8
    6fb4:	948ffc34 	orhi	r18,r18,16368
    6fb8:	90c6b03a 	or	r3,r18,r3
    6fbc:	89800e2e 	bgeu	r17,r6,6ff8 <__b2d+0x104>
    6fc0:	81bffd17 	ldw	r6,-12(r16)
    6fc4:	1144983a 	sll	r2,r2,r5
    6fc8:	310ad83a 	srl	r5,r6,r4
    6fcc:	2884b03a 	or	r2,r5,r2
    6fd0:	003fe806 	br	6f74 <__b2d+0x80>
    6fd4:	10bffd44 	addi	r2,r2,-11
    6fd8:	1000041e 	bne	r2,zero,6fec <__b2d+0xf8>
    6fdc:	90cffc34 	orhi	r3,r18,16368
    6fe0:	003fe406 	br	6f74 <__b2d+0x80>
    6fe4:	000d883a 	mov	r6,zero
    6fe8:	003fdf06 	br	6f68 <__b2d+0x74>
    6fec:	90a4983a 	sll	r18,r18,r2
    6ff0:	0005883a 	mov	r2,zero
    6ff4:	003ff906 	br	6fdc <__b2d+0xe8>
    6ff8:	1144983a 	sll	r2,r2,r5
    6ffc:	003fdd06 	br	6f74 <__b2d+0x80>

00007000 <__d2b>:
    7000:	defff804 	addi	sp,sp,-32
    7004:	dc000215 	stw	r16,8(sp)
    7008:	3021883a 	mov	r16,r6
    700c:	dc400315 	stw	r17,12(sp)
    7010:	8022907a 	slli	r17,r16,1
    7014:	dd000615 	stw	r20,24(sp)
    7018:	2829883a 	mov	r20,r5
    701c:	01400044 	movi	r5,1
    7020:	dcc00515 	stw	r19,20(sp)
    7024:	dc800415 	stw	r18,16(sp)
    7028:	dfc00715 	stw	ra,28(sp)
    702c:	3825883a 	mov	r18,r7
    7030:	8822d57a 	srli	r17,r17,21
    7034:	00062b00 	call	62b0 <_Balloc>
    7038:	1027883a 	mov	r19,r2
    703c:	00800434 	movhi	r2,16
    7040:	10bfffc4 	addi	r2,r2,-1
    7044:	808c703a 	and	r6,r16,r2
    7048:	88000126 	beq	r17,zero,7050 <__d2b+0x50>
    704c:	31800434 	orhi	r6,r6,16
    7050:	d9800015 	stw	r6,0(sp)
    7054:	a0002426 	beq	r20,zero,70e8 <__d2b+0xe8>
    7058:	d9000104 	addi	r4,sp,4
    705c:	dd000115 	stw	r20,4(sp)
    7060:	00066340 	call	6634 <__lo0bits>
    7064:	d8c00017 	ldw	r3,0(sp)
    7068:	10002f1e 	bne	r2,zero,7128 <__d2b+0x128>
    706c:	d9000117 	ldw	r4,4(sp)
    7070:	99000515 	stw	r4,20(r19)
    7074:	1821003a 	cmpeq	r16,r3,zero
    7078:	01000084 	movi	r4,2
    707c:	2421c83a 	sub	r16,r4,r16
    7080:	98c00615 	stw	r3,24(r19)
    7084:	9c000415 	stw	r16,16(r19)
    7088:	88001f1e 	bne	r17,zero,7108 <__d2b+0x108>
    708c:	10bef384 	addi	r2,r2,-1074
    7090:	90800015 	stw	r2,0(r18)
    7094:	00900034 	movhi	r2,16384
    7098:	10bfffc4 	addi	r2,r2,-1
    709c:	8085883a 	add	r2,r16,r2
    70a0:	1085883a 	add	r2,r2,r2
    70a4:	1085883a 	add	r2,r2,r2
    70a8:	9885883a 	add	r2,r19,r2
    70ac:	11000517 	ldw	r4,20(r2)
    70b0:	8020917a 	slli	r16,r16,5
    70b4:	00065cc0 	call	65cc <__hi0bits>
    70b8:	d8c00817 	ldw	r3,32(sp)
    70bc:	8085c83a 	sub	r2,r16,r2
    70c0:	18800015 	stw	r2,0(r3)
    70c4:	9805883a 	mov	r2,r19
    70c8:	dfc00717 	ldw	ra,28(sp)
    70cc:	dd000617 	ldw	r20,24(sp)
    70d0:	dcc00517 	ldw	r19,20(sp)
    70d4:	dc800417 	ldw	r18,16(sp)
    70d8:	dc400317 	ldw	r17,12(sp)
    70dc:	dc000217 	ldw	r16,8(sp)
    70e0:	dec00804 	addi	sp,sp,32
    70e4:	f800283a 	ret
    70e8:	d809883a 	mov	r4,sp
    70ec:	00066340 	call	6634 <__lo0bits>
    70f0:	d8c00017 	ldw	r3,0(sp)
    70f4:	04000044 	movi	r16,1
    70f8:	9c000415 	stw	r16,16(r19)
    70fc:	98c00515 	stw	r3,20(r19)
    7100:	10800804 	addi	r2,r2,32
    7104:	883fe126 	beq	r17,zero,708c <__d2b+0x8c>
    7108:	00c00d44 	movi	r3,53
    710c:	8c7ef344 	addi	r17,r17,-1075
    7110:	88a3883a 	add	r17,r17,r2
    7114:	1885c83a 	sub	r2,r3,r2
    7118:	d8c00817 	ldw	r3,32(sp)
    711c:	94400015 	stw	r17,0(r18)
    7120:	18800015 	stw	r2,0(r3)
    7124:	003fe706 	br	70c4 <__d2b+0xc4>
    7128:	01000804 	movi	r4,32
    712c:	2089c83a 	sub	r4,r4,r2
    7130:	1908983a 	sll	r4,r3,r4
    7134:	d9400117 	ldw	r5,4(sp)
    7138:	1886d83a 	srl	r3,r3,r2
    713c:	2148b03a 	or	r4,r4,r5
    7140:	99000515 	stw	r4,20(r19)
    7144:	d8c00015 	stw	r3,0(sp)
    7148:	003fca06 	br	7074 <__d2b+0x74>

0000714c <__ratio>:
    714c:	defff904 	addi	sp,sp,-28
    7150:	dc400315 	stw	r17,12(sp)
    7154:	2823883a 	mov	r17,r5
    7158:	d9400104 	addi	r5,sp,4
    715c:	dfc00615 	stw	ra,24(sp)
    7160:	dcc00515 	stw	r19,20(sp)
    7164:	dc800415 	stw	r18,16(sp)
    7168:	2027883a 	mov	r19,r4
    716c:	dc000215 	stw	r16,8(sp)
    7170:	0006ef40 	call	6ef4 <__b2d>
    7174:	d80b883a 	mov	r5,sp
    7178:	8809883a 	mov	r4,r17
    717c:	1025883a 	mov	r18,r2
    7180:	1821883a 	mov	r16,r3
    7184:	0006ef40 	call	6ef4 <__b2d>
    7188:	8a000417 	ldw	r8,16(r17)
    718c:	99000417 	ldw	r4,16(r19)
    7190:	d9400117 	ldw	r5,4(sp)
    7194:	2209c83a 	sub	r4,r4,r8
    7198:	2010917a 	slli	r8,r4,5
    719c:	d9000017 	ldw	r4,0(sp)
    71a0:	2909c83a 	sub	r4,r5,r4
    71a4:	4109883a 	add	r4,r8,r4
    71a8:	01000e0e 	bge	zero,r4,71e4 <__ratio+0x98>
    71ac:	2008953a 	slli	r4,r4,20
    71b0:	2421883a 	add	r16,r4,r16
    71b4:	100d883a 	mov	r6,r2
    71b8:	180f883a 	mov	r7,r3
    71bc:	9009883a 	mov	r4,r18
    71c0:	800b883a 	mov	r5,r16
    71c4:	000b2380 	call	b238 <__divdf3>
    71c8:	dfc00617 	ldw	ra,24(sp)
    71cc:	dcc00517 	ldw	r19,20(sp)
    71d0:	dc800417 	ldw	r18,16(sp)
    71d4:	dc400317 	ldw	r17,12(sp)
    71d8:	dc000217 	ldw	r16,8(sp)
    71dc:	dec00704 	addi	sp,sp,28
    71e0:	f800283a 	ret
    71e4:	2008953a 	slli	r4,r4,20
    71e8:	1907c83a 	sub	r3,r3,r4
    71ec:	003ff106 	br	71b4 <__ratio+0x68>

000071f0 <_mprec_log10>:
    71f0:	defffe04 	addi	sp,sp,-8
    71f4:	dc000015 	stw	r16,0(sp)
    71f8:	dfc00115 	stw	ra,4(sp)
    71fc:	008005c4 	movi	r2,23
    7200:	2021883a 	mov	r16,r4
    7204:	11000d0e 	bge	r2,r4,723c <_mprec_log10+0x4c>
    7208:	0005883a 	mov	r2,zero
    720c:	00cffc34 	movhi	r3,16368
    7210:	843fffc4 	addi	r16,r16,-1
    7214:	000d883a 	mov	r6,zero
    7218:	01d00934 	movhi	r7,16420
    721c:	1009883a 	mov	r4,r2
    7220:	180b883a 	mov	r5,r3
    7224:	000be600 	call	be60 <__muldf3>
    7228:	803ff91e 	bne	r16,zero,7210 <_mprec_log10+0x20>
    722c:	dfc00117 	ldw	ra,4(sp)
    7230:	dc000017 	ldw	r16,0(sp)
    7234:	dec00204 	addi	sp,sp,8
    7238:	f800283a 	ret
    723c:	202090fa 	slli	r16,r4,3
    7240:	00810034 	movhi	r2,1024
    7244:	10804604 	addi	r2,r2,280
    7248:	1421883a 	add	r16,r2,r16
    724c:	80800017 	ldw	r2,0(r16)
    7250:	80c00117 	ldw	r3,4(r16)
    7254:	dfc00117 	ldw	ra,4(sp)
    7258:	dc000017 	ldw	r16,0(sp)
    725c:	dec00204 	addi	sp,sp,8
    7260:	f800283a 	ret

00007264 <__copybits>:
    7264:	297fffc4 	addi	r5,r5,-1
    7268:	280fd17a 	srai	r7,r5,5
    726c:	30c00417 	ldw	r3,16(r6)
    7270:	30800504 	addi	r2,r6,20
    7274:	39c00044 	addi	r7,r7,1
    7278:	18c7883a 	add	r3,r3,r3
    727c:	39cf883a 	add	r7,r7,r7
    7280:	18c7883a 	add	r3,r3,r3
    7284:	39cf883a 	add	r7,r7,r7
    7288:	10c7883a 	add	r3,r2,r3
    728c:	21cf883a 	add	r7,r4,r7
    7290:	10c00d2e 	bgeu	r2,r3,72c8 <__copybits+0x64>
    7294:	200b883a 	mov	r5,r4
    7298:	12000017 	ldw	r8,0(r2)
    729c:	29400104 	addi	r5,r5,4
    72a0:	10800104 	addi	r2,r2,4
    72a4:	2a3fff15 	stw	r8,-4(r5)
    72a8:	10fffb36 	bltu	r2,r3,7298 <__copybits+0x34>
    72ac:	1985c83a 	sub	r2,r3,r6
    72b0:	10bffac4 	addi	r2,r2,-21
    72b4:	1004d0ba 	srli	r2,r2,2
    72b8:	10800044 	addi	r2,r2,1
    72bc:	1085883a 	add	r2,r2,r2
    72c0:	1085883a 	add	r2,r2,r2
    72c4:	2089883a 	add	r4,r4,r2
    72c8:	21c0032e 	bgeu	r4,r7,72d8 <__copybits+0x74>
    72cc:	20000015 	stw	zero,0(r4)
    72d0:	21000104 	addi	r4,r4,4
    72d4:	21fffd36 	bltu	r4,r7,72cc <__copybits+0x68>
    72d8:	f800283a 	ret

000072dc <__any_on>:
    72dc:	20c00417 	ldw	r3,16(r4)
    72e0:	2805d17a 	srai	r2,r5,5
    72e4:	21000504 	addi	r4,r4,20
    72e8:	18800d0e 	bge	r3,r2,7320 <__any_on+0x44>
    72ec:	18c7883a 	add	r3,r3,r3
    72f0:	18c7883a 	add	r3,r3,r3
    72f4:	20c7883a 	add	r3,r4,r3
    72f8:	20c0192e 	bgeu	r4,r3,7360 <__any_on+0x84>
    72fc:	18bfff17 	ldw	r2,-4(r3)
    7300:	18ffff04 	addi	r3,r3,-4
    7304:	1000041e 	bne	r2,zero,7318 <__any_on+0x3c>
    7308:	20c0142e 	bgeu	r4,r3,735c <__any_on+0x80>
    730c:	18ffff04 	addi	r3,r3,-4
    7310:	19400017 	ldw	r5,0(r3)
    7314:	283ffc26 	beq	r5,zero,7308 <__any_on+0x2c>
    7318:	00800044 	movi	r2,1
    731c:	f800283a 	ret
    7320:	10c00a0e 	bge	r2,r3,734c <__any_on+0x70>
    7324:	1085883a 	add	r2,r2,r2
    7328:	1085883a 	add	r2,r2,r2
    732c:	294007cc 	andi	r5,r5,31
    7330:	2087883a 	add	r3,r4,r2
    7334:	283ff026 	beq	r5,zero,72f8 <__any_on+0x1c>
    7338:	19800017 	ldw	r6,0(r3)
    733c:	3144d83a 	srl	r2,r6,r5
    7340:	114a983a 	sll	r5,r2,r5
    7344:	317ff41e 	bne	r6,r5,7318 <__any_on+0x3c>
    7348:	003feb06 	br	72f8 <__any_on+0x1c>
    734c:	1085883a 	add	r2,r2,r2
    7350:	1085883a 	add	r2,r2,r2
    7354:	2087883a 	add	r3,r4,r2
    7358:	003fe706 	br	72f8 <__any_on+0x1c>
    735c:	f800283a 	ret
    7360:	0005883a 	mov	r2,zero
    7364:	f800283a 	ret

00007368 <_realloc_r>:
    7368:	defff604 	addi	sp,sp,-40
    736c:	dc800215 	stw	r18,8(sp)
    7370:	dfc00915 	stw	ra,36(sp)
    7374:	df000815 	stw	fp,32(sp)
    7378:	ddc00715 	stw	r23,28(sp)
    737c:	dd800615 	stw	r22,24(sp)
    7380:	dd400515 	stw	r21,20(sp)
    7384:	dd000415 	stw	r20,16(sp)
    7388:	dcc00315 	stw	r19,12(sp)
    738c:	dc400115 	stw	r17,4(sp)
    7390:	dc000015 	stw	r16,0(sp)
    7394:	3025883a 	mov	r18,r6
    7398:	2800b726 	beq	r5,zero,7678 <_realloc_r+0x310>
    739c:	282b883a 	mov	r21,r5
    73a0:	2029883a 	mov	r20,r4
    73a4:	000d7cc0 	call	d7cc <__malloc_lock>
    73a8:	a8bfff17 	ldw	r2,-4(r21)
    73ac:	043fff04 	movi	r16,-4
    73b0:	90c002c4 	addi	r3,r18,11
    73b4:	01000584 	movi	r4,22
    73b8:	acfffe04 	addi	r19,r21,-8
    73bc:	1420703a 	and	r16,r2,r16
    73c0:	20c0332e 	bgeu	r4,r3,7490 <_realloc_r+0x128>
    73c4:	047ffe04 	movi	r17,-8
    73c8:	1c62703a 	and	r17,r3,r17
    73cc:	8807883a 	mov	r3,r17
    73d0:	88005816 	blt	r17,zero,7534 <_realloc_r+0x1cc>
    73d4:	8c805736 	bltu	r17,r18,7534 <_realloc_r+0x1cc>
    73d8:	80c0300e 	bge	r16,r3,749c <_realloc_r+0x134>
    73dc:	07010034 	movhi	fp,1024
    73e0:	e701f404 	addi	fp,fp,2000
    73e4:	e1c00217 	ldw	r7,8(fp)
    73e8:	9c09883a 	add	r4,r19,r16
    73ec:	22000117 	ldw	r8,4(r4)
    73f0:	21c06326 	beq	r4,r7,7580 <_realloc_r+0x218>
    73f4:	017fff84 	movi	r5,-2
    73f8:	414a703a 	and	r5,r8,r5
    73fc:	214b883a 	add	r5,r4,r5
    7400:	29800117 	ldw	r6,4(r5)
    7404:	3180004c 	andi	r6,r6,1
    7408:	30003f26 	beq	r6,zero,7508 <_realloc_r+0x1a0>
    740c:	1080004c 	andi	r2,r2,1
    7410:	10008326 	beq	r2,zero,7620 <_realloc_r+0x2b8>
    7414:	900b883a 	mov	r5,r18
    7418:	a009883a 	mov	r4,r20
    741c:	00055f40 	call	55f4 <_malloc_r>
    7420:	1025883a 	mov	r18,r2
    7424:	10011e26 	beq	r2,zero,78a0 <_realloc_r+0x538>
    7428:	a93fff17 	ldw	r4,-4(r21)
    742c:	10fffe04 	addi	r3,r2,-8
    7430:	00bfff84 	movi	r2,-2
    7434:	2084703a 	and	r2,r4,r2
    7438:	9885883a 	add	r2,r19,r2
    743c:	1880ee26 	beq	r3,r2,77f8 <_realloc_r+0x490>
    7440:	81bfff04 	addi	r6,r16,-4
    7444:	00800904 	movi	r2,36
    7448:	1180b836 	bltu	r2,r6,772c <_realloc_r+0x3c4>
    744c:	00c004c4 	movi	r3,19
    7450:	19809636 	bltu	r3,r6,76ac <_realloc_r+0x344>
    7454:	9005883a 	mov	r2,r18
    7458:	a807883a 	mov	r3,r21
    745c:	19000017 	ldw	r4,0(r3)
    7460:	11000015 	stw	r4,0(r2)
    7464:	19000117 	ldw	r4,4(r3)
    7468:	11000115 	stw	r4,4(r2)
    746c:	18c00217 	ldw	r3,8(r3)
    7470:	10c00215 	stw	r3,8(r2)
    7474:	a80b883a 	mov	r5,r21
    7478:	a009883a 	mov	r4,r20
    747c:	00049fc0 	call	49fc <_free_r>
    7480:	a009883a 	mov	r4,r20
    7484:	000d7f00 	call	d7f0 <__malloc_unlock>
    7488:	9005883a 	mov	r2,r18
    748c:	00001206 	br	74d8 <_realloc_r+0x170>
    7490:	00c00404 	movi	r3,16
    7494:	1823883a 	mov	r17,r3
    7498:	003fce06 	br	73d4 <_realloc_r+0x6c>
    749c:	a825883a 	mov	r18,r21
    74a0:	8445c83a 	sub	r2,r16,r17
    74a4:	00c003c4 	movi	r3,15
    74a8:	18802636 	bltu	r3,r2,7544 <_realloc_r+0x1dc>
    74ac:	99800117 	ldw	r6,4(r19)
    74b0:	9c07883a 	add	r3,r19,r16
    74b4:	3180004c 	andi	r6,r6,1
    74b8:	3420b03a 	or	r16,r6,r16
    74bc:	9c000115 	stw	r16,4(r19)
    74c0:	18800117 	ldw	r2,4(r3)
    74c4:	10800054 	ori	r2,r2,1
    74c8:	18800115 	stw	r2,4(r3)
    74cc:	a009883a 	mov	r4,r20
    74d0:	000d7f00 	call	d7f0 <__malloc_unlock>
    74d4:	9005883a 	mov	r2,r18
    74d8:	dfc00917 	ldw	ra,36(sp)
    74dc:	df000817 	ldw	fp,32(sp)
    74e0:	ddc00717 	ldw	r23,28(sp)
    74e4:	dd800617 	ldw	r22,24(sp)
    74e8:	dd400517 	ldw	r21,20(sp)
    74ec:	dd000417 	ldw	r20,16(sp)
    74f0:	dcc00317 	ldw	r19,12(sp)
    74f4:	dc800217 	ldw	r18,8(sp)
    74f8:	dc400117 	ldw	r17,4(sp)
    74fc:	dc000017 	ldw	r16,0(sp)
    7500:	dec00a04 	addi	sp,sp,40
    7504:	f800283a 	ret
    7508:	017fff04 	movi	r5,-4
    750c:	414a703a 	and	r5,r8,r5
    7510:	814d883a 	add	r6,r16,r5
    7514:	30c01f16 	blt	r6,r3,7594 <_realloc_r+0x22c>
    7518:	20800317 	ldw	r2,12(r4)
    751c:	20c00217 	ldw	r3,8(r4)
    7520:	a825883a 	mov	r18,r21
    7524:	3021883a 	mov	r16,r6
    7528:	18800315 	stw	r2,12(r3)
    752c:	10c00215 	stw	r3,8(r2)
    7530:	003fdb06 	br	74a0 <_realloc_r+0x138>
    7534:	00800304 	movi	r2,12
    7538:	a0800015 	stw	r2,0(r20)
    753c:	0005883a 	mov	r2,zero
    7540:	003fe506 	br	74d8 <_realloc_r+0x170>
    7544:	98c00117 	ldw	r3,4(r19)
    7548:	9c4b883a 	add	r5,r19,r17
    754c:	11000054 	ori	r4,r2,1
    7550:	18c0004c 	andi	r3,r3,1
    7554:	1c62b03a 	or	r17,r3,r17
    7558:	9c400115 	stw	r17,4(r19)
    755c:	29000115 	stw	r4,4(r5)
    7560:	2885883a 	add	r2,r5,r2
    7564:	10c00117 	ldw	r3,4(r2)
    7568:	29400204 	addi	r5,r5,8
    756c:	a009883a 	mov	r4,r20
    7570:	18c00054 	ori	r3,r3,1
    7574:	10c00115 	stw	r3,4(r2)
    7578:	00049fc0 	call	49fc <_free_r>
    757c:	003fd306 	br	74cc <_realloc_r+0x164>
    7580:	017fff04 	movi	r5,-4
    7584:	414a703a 	and	r5,r8,r5
    7588:	89800404 	addi	r6,r17,16
    758c:	8151883a 	add	r8,r16,r5
    7590:	4180590e 	bge	r8,r6,76f8 <_realloc_r+0x390>
    7594:	1080004c 	andi	r2,r2,1
    7598:	103f9e1e 	bne	r2,zero,7414 <_realloc_r+0xac>
    759c:	adbffe17 	ldw	r22,-8(r21)
    75a0:	00bfff04 	movi	r2,-4
    75a4:	9dadc83a 	sub	r22,r19,r22
    75a8:	b1800117 	ldw	r6,4(r22)
    75ac:	3084703a 	and	r2,r6,r2
    75b0:	20002026 	beq	r4,zero,7634 <_realloc_r+0x2cc>
    75b4:	80af883a 	add	r23,r16,r2
    75b8:	b96f883a 	add	r23,r23,r5
    75bc:	21c05f26 	beq	r4,r7,773c <_realloc_r+0x3d4>
    75c0:	b8c01c16 	blt	r23,r3,7634 <_realloc_r+0x2cc>
    75c4:	20800317 	ldw	r2,12(r4)
    75c8:	20c00217 	ldw	r3,8(r4)
    75cc:	81bfff04 	addi	r6,r16,-4
    75d0:	01000904 	movi	r4,36
    75d4:	18800315 	stw	r2,12(r3)
    75d8:	10c00215 	stw	r3,8(r2)
    75dc:	b0c00217 	ldw	r3,8(r22)
    75e0:	b0800317 	ldw	r2,12(r22)
    75e4:	b4800204 	addi	r18,r22,8
    75e8:	18800315 	stw	r2,12(r3)
    75ec:	10c00215 	stw	r3,8(r2)
    75f0:	21801b36 	bltu	r4,r6,7660 <_realloc_r+0x2f8>
    75f4:	008004c4 	movi	r2,19
    75f8:	1180352e 	bgeu	r2,r6,76d0 <_realloc_r+0x368>
    75fc:	a8800017 	ldw	r2,0(r21)
    7600:	b0800215 	stw	r2,8(r22)
    7604:	a8800117 	ldw	r2,4(r21)
    7608:	b0800315 	stw	r2,12(r22)
    760c:	008006c4 	movi	r2,27
    7610:	11807f36 	bltu	r2,r6,7810 <_realloc_r+0x4a8>
    7614:	b0800404 	addi	r2,r22,16
    7618:	ad400204 	addi	r21,r21,8
    761c:	00002d06 	br	76d4 <_realloc_r+0x36c>
    7620:	adbffe17 	ldw	r22,-8(r21)
    7624:	00bfff04 	movi	r2,-4
    7628:	9dadc83a 	sub	r22,r19,r22
    762c:	b1000117 	ldw	r4,4(r22)
    7630:	2084703a 	and	r2,r4,r2
    7634:	b03f7726 	beq	r22,zero,7414 <_realloc_r+0xac>
    7638:	80af883a 	add	r23,r16,r2
    763c:	b8ff7516 	blt	r23,r3,7414 <_realloc_r+0xac>
    7640:	b0800317 	ldw	r2,12(r22)
    7644:	b0c00217 	ldw	r3,8(r22)
    7648:	81bfff04 	addi	r6,r16,-4
    764c:	01000904 	movi	r4,36
    7650:	18800315 	stw	r2,12(r3)
    7654:	10c00215 	stw	r3,8(r2)
    7658:	b4800204 	addi	r18,r22,8
    765c:	21bfe52e 	bgeu	r4,r6,75f4 <_realloc_r+0x28c>
    7660:	a80b883a 	mov	r5,r21
    7664:	9009883a 	mov	r4,r18
    7668:	000602c0 	call	602c <memmove>
    766c:	b821883a 	mov	r16,r23
    7670:	b027883a 	mov	r19,r22
    7674:	003f8a06 	br	74a0 <_realloc_r+0x138>
    7678:	300b883a 	mov	r5,r6
    767c:	dfc00917 	ldw	ra,36(sp)
    7680:	df000817 	ldw	fp,32(sp)
    7684:	ddc00717 	ldw	r23,28(sp)
    7688:	dd800617 	ldw	r22,24(sp)
    768c:	dd400517 	ldw	r21,20(sp)
    7690:	dd000417 	ldw	r20,16(sp)
    7694:	dcc00317 	ldw	r19,12(sp)
    7698:	dc800217 	ldw	r18,8(sp)
    769c:	dc400117 	ldw	r17,4(sp)
    76a0:	dc000017 	ldw	r16,0(sp)
    76a4:	dec00a04 	addi	sp,sp,40
    76a8:	00055f41 	jmpi	55f4 <_malloc_r>
    76ac:	a8c00017 	ldw	r3,0(r21)
    76b0:	90c00015 	stw	r3,0(r18)
    76b4:	a8c00117 	ldw	r3,4(r21)
    76b8:	90c00115 	stw	r3,4(r18)
    76bc:	00c006c4 	movi	r3,27
    76c0:	19804536 	bltu	r3,r6,77d8 <_realloc_r+0x470>
    76c4:	90800204 	addi	r2,r18,8
    76c8:	a8c00204 	addi	r3,r21,8
    76cc:	003f6306 	br	745c <_realloc_r+0xf4>
    76d0:	9005883a 	mov	r2,r18
    76d4:	a8c00017 	ldw	r3,0(r21)
    76d8:	b821883a 	mov	r16,r23
    76dc:	b027883a 	mov	r19,r22
    76e0:	10c00015 	stw	r3,0(r2)
    76e4:	a8c00117 	ldw	r3,4(r21)
    76e8:	10c00115 	stw	r3,4(r2)
    76ec:	a8c00217 	ldw	r3,8(r21)
    76f0:	10c00215 	stw	r3,8(r2)
    76f4:	003f6a06 	br	74a0 <_realloc_r+0x138>
    76f8:	9c67883a 	add	r19,r19,r17
    76fc:	4445c83a 	sub	r2,r8,r17
    7700:	e4c00215 	stw	r19,8(fp)
    7704:	10800054 	ori	r2,r2,1
    7708:	98800115 	stw	r2,4(r19)
    770c:	a8bfff17 	ldw	r2,-4(r21)
    7710:	a009883a 	mov	r4,r20
    7714:	1080004c 	andi	r2,r2,1
    7718:	1462b03a 	or	r17,r2,r17
    771c:	ac7fff15 	stw	r17,-4(r21)
    7720:	000d7f00 	call	d7f0 <__malloc_unlock>
    7724:	a805883a 	mov	r2,r21
    7728:	003f6b06 	br	74d8 <_realloc_r+0x170>
    772c:	a80b883a 	mov	r5,r21
    7730:	9009883a 	mov	r4,r18
    7734:	000602c0 	call	602c <memmove>
    7738:	003f4e06 	br	7474 <_realloc_r+0x10c>
    773c:	89000404 	addi	r4,r17,16
    7740:	b93fbc16 	blt	r23,r4,7634 <_realloc_r+0x2cc>
    7744:	b0800317 	ldw	r2,12(r22)
    7748:	b0c00217 	ldw	r3,8(r22)
    774c:	81bfff04 	addi	r6,r16,-4
    7750:	01000904 	movi	r4,36
    7754:	18800315 	stw	r2,12(r3)
    7758:	10c00215 	stw	r3,8(r2)
    775c:	b4800204 	addi	r18,r22,8
    7760:	21804336 	bltu	r4,r6,7870 <_realloc_r+0x508>
    7764:	008004c4 	movi	r2,19
    7768:	11803f2e 	bgeu	r2,r6,7868 <_realloc_r+0x500>
    776c:	a8800017 	ldw	r2,0(r21)
    7770:	b0800215 	stw	r2,8(r22)
    7774:	a8800117 	ldw	r2,4(r21)
    7778:	b0800315 	stw	r2,12(r22)
    777c:	008006c4 	movi	r2,27
    7780:	11803f36 	bltu	r2,r6,7880 <_realloc_r+0x518>
    7784:	b0800404 	addi	r2,r22,16
    7788:	ad400204 	addi	r21,r21,8
    778c:	a8c00017 	ldw	r3,0(r21)
    7790:	10c00015 	stw	r3,0(r2)
    7794:	a8c00117 	ldw	r3,4(r21)
    7798:	10c00115 	stw	r3,4(r2)
    779c:	a8c00217 	ldw	r3,8(r21)
    77a0:	10c00215 	stw	r3,8(r2)
    77a4:	b447883a 	add	r3,r22,r17
    77a8:	bc45c83a 	sub	r2,r23,r17
    77ac:	e0c00215 	stw	r3,8(fp)
    77b0:	10800054 	ori	r2,r2,1
    77b4:	18800115 	stw	r2,4(r3)
    77b8:	b0800117 	ldw	r2,4(r22)
    77bc:	a009883a 	mov	r4,r20
    77c0:	1080004c 	andi	r2,r2,1
    77c4:	1462b03a 	or	r17,r2,r17
    77c8:	b4400115 	stw	r17,4(r22)
    77cc:	000d7f00 	call	d7f0 <__malloc_unlock>
    77d0:	9005883a 	mov	r2,r18
    77d4:	003f4006 	br	74d8 <_realloc_r+0x170>
    77d8:	a8c00217 	ldw	r3,8(r21)
    77dc:	90c00215 	stw	r3,8(r18)
    77e0:	a8c00317 	ldw	r3,12(r21)
    77e4:	90c00315 	stw	r3,12(r18)
    77e8:	30801126 	beq	r6,r2,7830 <_realloc_r+0x4c8>
    77ec:	90800404 	addi	r2,r18,16
    77f0:	a8c00404 	addi	r3,r21,16
    77f4:	003f1906 	br	745c <_realloc_r+0xf4>
    77f8:	90ffff17 	ldw	r3,-4(r18)
    77fc:	00bfff04 	movi	r2,-4
    7800:	a825883a 	mov	r18,r21
    7804:	1884703a 	and	r2,r3,r2
    7808:	80a1883a 	add	r16,r16,r2
    780c:	003f2406 	br	74a0 <_realloc_r+0x138>
    7810:	a8800217 	ldw	r2,8(r21)
    7814:	b0800415 	stw	r2,16(r22)
    7818:	a8800317 	ldw	r2,12(r21)
    781c:	b0800515 	stw	r2,20(r22)
    7820:	31000a26 	beq	r6,r4,784c <_realloc_r+0x4e4>
    7824:	b0800604 	addi	r2,r22,24
    7828:	ad400404 	addi	r21,r21,16
    782c:	003fa906 	br	76d4 <_realloc_r+0x36c>
    7830:	a9000417 	ldw	r4,16(r21)
    7834:	90800604 	addi	r2,r18,24
    7838:	a8c00604 	addi	r3,r21,24
    783c:	91000415 	stw	r4,16(r18)
    7840:	a9000517 	ldw	r4,20(r21)
    7844:	91000515 	stw	r4,20(r18)
    7848:	003f0406 	br	745c <_realloc_r+0xf4>
    784c:	a8c00417 	ldw	r3,16(r21)
    7850:	ad400604 	addi	r21,r21,24
    7854:	b0800804 	addi	r2,r22,32
    7858:	b0c00615 	stw	r3,24(r22)
    785c:	a8ffff17 	ldw	r3,-4(r21)
    7860:	b0c00715 	stw	r3,28(r22)
    7864:	003f9b06 	br	76d4 <_realloc_r+0x36c>
    7868:	9005883a 	mov	r2,r18
    786c:	003fc706 	br	778c <_realloc_r+0x424>
    7870:	a80b883a 	mov	r5,r21
    7874:	9009883a 	mov	r4,r18
    7878:	000602c0 	call	602c <memmove>
    787c:	003fc906 	br	77a4 <_realloc_r+0x43c>
    7880:	a8800217 	ldw	r2,8(r21)
    7884:	b0800415 	stw	r2,16(r22)
    7888:	a8800317 	ldw	r2,12(r21)
    788c:	b0800515 	stw	r2,20(r22)
    7890:	31000726 	beq	r6,r4,78b0 <_realloc_r+0x548>
    7894:	b0800604 	addi	r2,r22,24
    7898:	ad400404 	addi	r21,r21,16
    789c:	003fbb06 	br	778c <_realloc_r+0x424>
    78a0:	a009883a 	mov	r4,r20
    78a4:	000d7f00 	call	d7f0 <__malloc_unlock>
    78a8:	0005883a 	mov	r2,zero
    78ac:	003f0a06 	br	74d8 <_realloc_r+0x170>
    78b0:	a8c00417 	ldw	r3,16(r21)
    78b4:	ad400604 	addi	r21,r21,24
    78b8:	b0800804 	addi	r2,r22,32
    78bc:	b0c00615 	stw	r3,24(r22)
    78c0:	a8ffff17 	ldw	r3,-4(r21)
    78c4:	b0c00715 	stw	r3,28(r22)
    78c8:	003fb006 	br	778c <_realloc_r+0x424>

000078cc <__fpclassifyd>:
    78cc:	00a00034 	movhi	r2,32768
    78d0:	10bfffc4 	addi	r2,r2,-1
    78d4:	2884703a 	and	r2,r5,r2
    78d8:	10000726 	beq	r2,zero,78f8 <__fpclassifyd+0x2c>
    78dc:	00fffc34 	movhi	r3,65520
    78e0:	019ff834 	movhi	r6,32736
    78e4:	28c7883a 	add	r3,r5,r3
    78e8:	31bfffc4 	addi	r6,r6,-1
    78ec:	30c00536 	bltu	r6,r3,7904 <__fpclassifyd+0x38>
    78f0:	00800104 	movi	r2,4
    78f4:	f800283a 	ret
    78f8:	2000021e 	bne	r4,zero,7904 <__fpclassifyd+0x38>
    78fc:	00800084 	movi	r2,2
    7900:	f800283a 	ret
    7904:	00dffc34 	movhi	r3,32752
    7908:	019ff834 	movhi	r6,32736
    790c:	28cb883a 	add	r5,r5,r3
    7910:	31bfffc4 	addi	r6,r6,-1
    7914:	317ff62e 	bgeu	r6,r5,78f0 <__fpclassifyd+0x24>
    7918:	01400434 	movhi	r5,16
    791c:	297fffc4 	addi	r5,r5,-1
    7920:	28800236 	bltu	r5,r2,792c <__fpclassifyd+0x60>
    7924:	008000c4 	movi	r2,3
    7928:	f800283a 	ret
    792c:	10c00226 	beq	r2,r3,7938 <__fpclassifyd+0x6c>
    7930:	0005883a 	mov	r2,zero
    7934:	f800283a 	ret
    7938:	2005003a 	cmpeq	r2,r4,zero
    793c:	f800283a 	ret

00007940 <_sbrk_r>:
    7940:	defffd04 	addi	sp,sp,-12
    7944:	dc000015 	stw	r16,0(sp)
    7948:	04010034 	movhi	r16,1024
    794c:	dc400115 	stw	r17,4(sp)
    7950:	84078e04 	addi	r16,r16,7736
    7954:	2023883a 	mov	r17,r4
    7958:	2809883a 	mov	r4,r5
    795c:	dfc00215 	stw	ra,8(sp)
    7960:	80000015 	stw	zero,0(r16)
    7964:	000d9d80 	call	d9d8 <sbrk>
    7968:	00ffffc4 	movi	r3,-1
    796c:	10c00526 	beq	r2,r3,7984 <_sbrk_r+0x44>
    7970:	dfc00217 	ldw	ra,8(sp)
    7974:	dc400117 	ldw	r17,4(sp)
    7978:	dc000017 	ldw	r16,0(sp)
    797c:	dec00304 	addi	sp,sp,12
    7980:	f800283a 	ret
    7984:	80c00017 	ldw	r3,0(r16)
    7988:	183ff926 	beq	r3,zero,7970 <_sbrk_r+0x30>
    798c:	88c00015 	stw	r3,0(r17)
    7990:	003ff706 	br	7970 <_sbrk_r+0x30>

00007994 <__sread>:
    7994:	defffe04 	addi	sp,sp,-8
    7998:	dc000015 	stw	r16,0(sp)
    799c:	2821883a 	mov	r16,r5
    79a0:	2940038f 	ldh	r5,14(r5)
    79a4:	dfc00115 	stw	ra,4(sp)
    79a8:	00098500 	call	9850 <_read_r>
    79ac:	10000716 	blt	r2,zero,79cc <__sread+0x38>
    79b0:	80c01417 	ldw	r3,80(r16)
    79b4:	1887883a 	add	r3,r3,r2
    79b8:	80c01415 	stw	r3,80(r16)
    79bc:	dfc00117 	ldw	ra,4(sp)
    79c0:	dc000017 	ldw	r16,0(sp)
    79c4:	dec00204 	addi	sp,sp,8
    79c8:	f800283a 	ret
    79cc:	80c0030b 	ldhu	r3,12(r16)
    79d0:	18fbffcc 	andi	r3,r3,61439
    79d4:	80c0030d 	sth	r3,12(r16)
    79d8:	dfc00117 	ldw	ra,4(sp)
    79dc:	dc000017 	ldw	r16,0(sp)
    79e0:	dec00204 	addi	sp,sp,8
    79e4:	f800283a 	ret

000079e8 <__seofread>:
    79e8:	0005883a 	mov	r2,zero
    79ec:	f800283a 	ret

000079f0 <__swrite>:
    79f0:	2880030b 	ldhu	r2,12(r5)
    79f4:	defffb04 	addi	sp,sp,-20
    79f8:	dcc00315 	stw	r19,12(sp)
    79fc:	dc800215 	stw	r18,8(sp)
    7a00:	dc400115 	stw	r17,4(sp)
    7a04:	dc000015 	stw	r16,0(sp)
    7a08:	dfc00415 	stw	ra,16(sp)
    7a0c:	10c0400c 	andi	r3,r2,256
    7a10:	2821883a 	mov	r16,r5
    7a14:	2023883a 	mov	r17,r4
    7a18:	3025883a 	mov	r18,r6
    7a1c:	3827883a 	mov	r19,r7
    7a20:	18000526 	beq	r3,zero,7a38 <__swrite+0x48>
    7a24:	2940038f 	ldh	r5,14(r5)
    7a28:	01c00084 	movi	r7,2
    7a2c:	000d883a 	mov	r6,zero
    7a30:	00097f00 	call	97f0 <_lseek_r>
    7a34:	8080030b 	ldhu	r2,12(r16)
    7a38:	8140038f 	ldh	r5,14(r16)
    7a3c:	10bbffcc 	andi	r2,r2,61439
    7a40:	980f883a 	mov	r7,r19
    7a44:	900d883a 	mov	r6,r18
    7a48:	8809883a 	mov	r4,r17
    7a4c:	8080030d 	sth	r2,12(r16)
    7a50:	dfc00417 	ldw	ra,16(sp)
    7a54:	dcc00317 	ldw	r19,12(sp)
    7a58:	dc800217 	ldw	r18,8(sp)
    7a5c:	dc400117 	ldw	r17,4(sp)
    7a60:	dc000017 	ldw	r16,0(sp)
    7a64:	dec00504 	addi	sp,sp,20
    7a68:	00092a41 	jmpi	92a4 <_write_r>

00007a6c <__sseek>:
    7a6c:	defffe04 	addi	sp,sp,-8
    7a70:	dc000015 	stw	r16,0(sp)
    7a74:	2821883a 	mov	r16,r5
    7a78:	2940038f 	ldh	r5,14(r5)
    7a7c:	dfc00115 	stw	ra,4(sp)
    7a80:	00097f00 	call	97f0 <_lseek_r>
    7a84:	00ffffc4 	movi	r3,-1
    7a88:	10c00826 	beq	r2,r3,7aac <__sseek+0x40>
    7a8c:	80c0030b 	ldhu	r3,12(r16)
    7a90:	80801415 	stw	r2,80(r16)
    7a94:	18c40014 	ori	r3,r3,4096
    7a98:	80c0030d 	sth	r3,12(r16)
    7a9c:	dfc00117 	ldw	ra,4(sp)
    7aa0:	dc000017 	ldw	r16,0(sp)
    7aa4:	dec00204 	addi	sp,sp,8
    7aa8:	f800283a 	ret
    7aac:	80c0030b 	ldhu	r3,12(r16)
    7ab0:	18fbffcc 	andi	r3,r3,61439
    7ab4:	80c0030d 	sth	r3,12(r16)
    7ab8:	dfc00117 	ldw	ra,4(sp)
    7abc:	dc000017 	ldw	r16,0(sp)
    7ac0:	dec00204 	addi	sp,sp,8
    7ac4:	f800283a 	ret

00007ac8 <__sclose>:
    7ac8:	2940038f 	ldh	r5,14(r5)
    7acc:	00093041 	jmpi	9304 <_close_r>

00007ad0 <strcmp>:
    7ad0:	2144b03a 	or	r2,r4,r5
    7ad4:	108000cc 	andi	r2,r2,3
    7ad8:	1000171e 	bne	r2,zero,7b38 <strcmp+0x68>
    7adc:	20800017 	ldw	r2,0(r4)
    7ae0:	28c00017 	ldw	r3,0(r5)
    7ae4:	10c0141e 	bne	r2,r3,7b38 <strcmp+0x68>
    7ae8:	027fbff4 	movhi	r9,65279
    7aec:	4a7fbfc4 	addi	r9,r9,-257
    7af0:	0086303a 	nor	r3,zero,r2
    7af4:	02202074 	movhi	r8,32897
    7af8:	1245883a 	add	r2,r2,r9
    7afc:	42202004 	addi	r8,r8,-32640
    7b00:	10c4703a 	and	r2,r2,r3
    7b04:	1204703a 	and	r2,r2,r8
    7b08:	10000226 	beq	r2,zero,7b14 <strcmp+0x44>
    7b0c:	00002306 	br	7b9c <strcmp+0xcc>
    7b10:	1000221e 	bne	r2,zero,7b9c <strcmp+0xcc>
    7b14:	21000104 	addi	r4,r4,4
    7b18:	20c00017 	ldw	r3,0(r4)
    7b1c:	29400104 	addi	r5,r5,4
    7b20:	29800017 	ldw	r6,0(r5)
    7b24:	1a4f883a 	add	r7,r3,r9
    7b28:	00c4303a 	nor	r2,zero,r3
    7b2c:	3884703a 	and	r2,r7,r2
    7b30:	1204703a 	and	r2,r2,r8
    7b34:	19bff626 	beq	r3,r6,7b10 <strcmp+0x40>
    7b38:	20800003 	ldbu	r2,0(r4)
    7b3c:	10c03fcc 	andi	r3,r2,255
    7b40:	18c0201c 	xori	r3,r3,128
    7b44:	18ffe004 	addi	r3,r3,-128
    7b48:	18000c26 	beq	r3,zero,7b7c <strcmp+0xac>
    7b4c:	29800007 	ldb	r6,0(r5)
    7b50:	19800326 	beq	r3,r6,7b60 <strcmp+0x90>
    7b54:	00001306 	br	7ba4 <strcmp+0xd4>
    7b58:	29800007 	ldb	r6,0(r5)
    7b5c:	11800b1e 	bne	r2,r6,7b8c <strcmp+0xbc>
    7b60:	21000044 	addi	r4,r4,1
    7b64:	20c00003 	ldbu	r3,0(r4)
    7b68:	29400044 	addi	r5,r5,1
    7b6c:	18803fcc 	andi	r2,r3,255
    7b70:	1080201c 	xori	r2,r2,128
    7b74:	10bfe004 	addi	r2,r2,-128
    7b78:	103ff71e 	bne	r2,zero,7b58 <strcmp+0x88>
    7b7c:	0007883a 	mov	r3,zero
    7b80:	28800003 	ldbu	r2,0(r5)
    7b84:	1885c83a 	sub	r2,r3,r2
    7b88:	f800283a 	ret
    7b8c:	28800003 	ldbu	r2,0(r5)
    7b90:	18c03fcc 	andi	r3,r3,255
    7b94:	1885c83a 	sub	r2,r3,r2
    7b98:	f800283a 	ret
    7b9c:	0005883a 	mov	r2,zero
    7ba0:	f800283a 	ret
    7ba4:	10c03fcc 	andi	r3,r2,255
    7ba8:	003ff506 	br	7b80 <strcmp+0xb0>

00007bac <__sprint_r.part.0>:
    7bac:	28801917 	ldw	r2,100(r5)
    7bb0:	defff604 	addi	sp,sp,-40
    7bb4:	dd400515 	stw	r21,20(sp)
    7bb8:	dfc00915 	stw	ra,36(sp)
    7bbc:	df000815 	stw	fp,32(sp)
    7bc0:	ddc00715 	stw	r23,28(sp)
    7bc4:	dd800615 	stw	r22,24(sp)
    7bc8:	dd000415 	stw	r20,16(sp)
    7bcc:	dcc00315 	stw	r19,12(sp)
    7bd0:	dc800215 	stw	r18,8(sp)
    7bd4:	dc400115 	stw	r17,4(sp)
    7bd8:	dc000015 	stw	r16,0(sp)
    7bdc:	1088000c 	andi	r2,r2,8192
    7be0:	302b883a 	mov	r21,r6
    7be4:	10002e26 	beq	r2,zero,7ca0 <__sprint_r.part.0+0xf4>
    7be8:	30800217 	ldw	r2,8(r6)
    7bec:	35800017 	ldw	r22,0(r6)
    7bf0:	10002926 	beq	r2,zero,7c98 <__sprint_r.part.0+0xec>
    7bf4:	2827883a 	mov	r19,r5
    7bf8:	2029883a 	mov	r20,r4
    7bfc:	b5c00104 	addi	r23,r22,4
    7c00:	04bfffc4 	movi	r18,-1
    7c04:	bc400017 	ldw	r17,0(r23)
    7c08:	b4000017 	ldw	r16,0(r22)
    7c0c:	0039883a 	mov	fp,zero
    7c10:	8822d0ba 	srli	r17,r17,2
    7c14:	8800031e 	bne	r17,zero,7c24 <__sprint_r.part.0+0x78>
    7c18:	00001806 	br	7c7c <__sprint_r.part.0+0xd0>
    7c1c:	84000104 	addi	r16,r16,4
    7c20:	8f001526 	beq	r17,fp,7c78 <__sprint_r.part.0+0xcc>
    7c24:	81400017 	ldw	r5,0(r16)
    7c28:	980d883a 	mov	r6,r19
    7c2c:	a009883a 	mov	r4,r20
    7c30:	000969c0 	call	969c <_fputwc_r>
    7c34:	e7000044 	addi	fp,fp,1
    7c38:	14bff81e 	bne	r2,r18,7c1c <__sprint_r.part.0+0x70>
    7c3c:	9005883a 	mov	r2,r18
    7c40:	a8000215 	stw	zero,8(r21)
    7c44:	a8000115 	stw	zero,4(r21)
    7c48:	dfc00917 	ldw	ra,36(sp)
    7c4c:	df000817 	ldw	fp,32(sp)
    7c50:	ddc00717 	ldw	r23,28(sp)
    7c54:	dd800617 	ldw	r22,24(sp)
    7c58:	dd400517 	ldw	r21,20(sp)
    7c5c:	dd000417 	ldw	r20,16(sp)
    7c60:	dcc00317 	ldw	r19,12(sp)
    7c64:	dc800217 	ldw	r18,8(sp)
    7c68:	dc400117 	ldw	r17,4(sp)
    7c6c:	dc000017 	ldw	r16,0(sp)
    7c70:	dec00a04 	addi	sp,sp,40
    7c74:	f800283a 	ret
    7c78:	a8800217 	ldw	r2,8(r21)
    7c7c:	8c63883a 	add	r17,r17,r17
    7c80:	8c63883a 	add	r17,r17,r17
    7c84:	1445c83a 	sub	r2,r2,r17
    7c88:	a8800215 	stw	r2,8(r21)
    7c8c:	b5800204 	addi	r22,r22,8
    7c90:	bdc00204 	addi	r23,r23,8
    7c94:	103fdb1e 	bne	r2,zero,7c04 <__sprint_r.part.0+0x58>
    7c98:	0005883a 	mov	r2,zero
    7c9c:	003fe806 	br	7c40 <__sprint_r.part.0+0x94>
    7ca0:	0004d0c0 	call	4d0c <__sfvwrite_r>
    7ca4:	003fe606 	br	7c40 <__sprint_r.part.0+0x94>

00007ca8 <__sprint_r>:
    7ca8:	30c00217 	ldw	r3,8(r6)
    7cac:	18000126 	beq	r3,zero,7cb4 <__sprint_r+0xc>
    7cb0:	0007bac1 	jmpi	7bac <__sprint_r.part.0>
    7cb4:	30000115 	stw	zero,4(r6)
    7cb8:	0005883a 	mov	r2,zero
    7cbc:	f800283a 	ret

00007cc0 <___vfiprintf_internal_r>:
    7cc0:	deffca04 	addi	sp,sp,-216
    7cc4:	dd403115 	stw	r21,196(sp)
    7cc8:	dfc03515 	stw	ra,212(sp)
    7ccc:	df003415 	stw	fp,208(sp)
    7cd0:	ddc03315 	stw	r23,204(sp)
    7cd4:	dd803215 	stw	r22,200(sp)
    7cd8:	dd003015 	stw	r20,192(sp)
    7cdc:	dcc02f15 	stw	r19,188(sp)
    7ce0:	dc802e15 	stw	r18,184(sp)
    7ce4:	dc402d15 	stw	r17,180(sp)
    7ce8:	dc002c15 	stw	r16,176(sp)
    7cec:	d9002115 	stw	r4,132(sp)
    7cf0:	d9402015 	stw	r5,128(sp)
    7cf4:	d9c02215 	stw	r7,136(sp)
    7cf8:	302b883a 	mov	r21,r6
    7cfc:	20000226 	beq	r4,zero,7d08 <___vfiprintf_internal_r+0x48>
    7d00:	20800e17 	ldw	r2,56(r4)
    7d04:	1000cf26 	beq	r2,zero,8044 <___vfiprintf_internal_r+0x384>
    7d08:	d8c02017 	ldw	r3,128(sp)
    7d0c:	1880030b 	ldhu	r2,12(r3)
    7d10:	10c8000c 	andi	r3,r2,8192
    7d14:	1800071e 	bne	r3,zero,7d34 <___vfiprintf_internal_r+0x74>
    7d18:	d9402017 	ldw	r5,128(sp)
    7d1c:	00f7ffc4 	movi	r3,-8193
    7d20:	10880014 	ori	r2,r2,8192
    7d24:	29001917 	ldw	r4,100(r5)
    7d28:	2880030d 	sth	r2,12(r5)
    7d2c:	20c6703a 	and	r3,r4,r3
    7d30:	28c01915 	stw	r3,100(r5)
    7d34:	10c0020c 	andi	r3,r2,8
    7d38:	1800a526 	beq	r3,zero,7fd0 <___vfiprintf_internal_r+0x310>
    7d3c:	d9002017 	ldw	r4,128(sp)
    7d40:	20c00417 	ldw	r3,16(r4)
    7d44:	1800a226 	beq	r3,zero,7fd0 <___vfiprintf_internal_r+0x310>
    7d48:	1080068c 	andi	r2,r2,26
    7d4c:	00c00284 	movi	r3,10
    7d50:	10c0a826 	beq	r2,r3,7ff4 <___vfiprintf_internal_r+0x334>
    7d54:	d9001a04 	addi	r4,sp,104
    7d58:	d94019c4 	addi	r5,sp,103
    7d5c:	04810034 	movhi	r18,1024
    7d60:	2145c83a 	sub	r2,r4,r5
    7d64:	94807804 	addi	r18,r18,480
    7d68:	d9001e15 	stw	r4,120(sp)
    7d6c:	d9401f15 	stw	r5,124(sp)
    7d70:	dec01a15 	stw	sp,104(sp)
    7d74:	d8001c15 	stw	zero,112(sp)
    7d78:	d8001b15 	stw	zero,108(sp)
    7d7c:	d811883a 	mov	r8,sp
    7d80:	d8002615 	stw	zero,152(sp)
    7d84:	d8002415 	stw	zero,144(sp)
    7d88:	d8802815 	stw	r2,160(sp)
    7d8c:	a82d883a 	mov	r22,r21
    7d90:	b0800007 	ldb	r2,0(r22)
    7d94:	10040d26 	beq	r2,zero,8dcc <___vfiprintf_internal_r+0x110c>
    7d98:	00c00944 	movi	r3,37
    7d9c:	b029883a 	mov	r20,r22
    7da0:	10c0021e 	bne	r2,r3,7dac <___vfiprintf_internal_r+0xec>
    7da4:	00001606 	br	7e00 <___vfiprintf_internal_r+0x140>
    7da8:	10c00326 	beq	r2,r3,7db8 <___vfiprintf_internal_r+0xf8>
    7dac:	a5000044 	addi	r20,r20,1
    7db0:	a0800007 	ldb	r2,0(r20)
    7db4:	103ffc1e 	bne	r2,zero,7da8 <___vfiprintf_internal_r+0xe8>
    7db8:	a5a1c83a 	sub	r16,r20,r22
    7dbc:	80001026 	beq	r16,zero,7e00 <___vfiprintf_internal_r+0x140>
    7dc0:	d8c01c17 	ldw	r3,112(sp)
    7dc4:	d8801b17 	ldw	r2,108(sp)
    7dc8:	45800015 	stw	r22,0(r8)
    7dcc:	80c7883a 	add	r3,r16,r3
    7dd0:	10800044 	addi	r2,r2,1
    7dd4:	44000115 	stw	r16,4(r8)
    7dd8:	d8c01c15 	stw	r3,112(sp)
    7ddc:	d8801b15 	stw	r2,108(sp)
    7de0:	010001c4 	movi	r4,7
    7de4:	2080750e 	bge	r4,r2,7fbc <___vfiprintf_internal_r+0x2fc>
    7de8:	1803951e 	bne	r3,zero,8c40 <___vfiprintf_internal_r+0xf80>
    7dec:	d8c02417 	ldw	r3,144(sp)
    7df0:	d8001b15 	stw	zero,108(sp)
    7df4:	d811883a 	mov	r8,sp
    7df8:	1c07883a 	add	r3,r3,r16
    7dfc:	d8c02415 	stw	r3,144(sp)
    7e00:	a0800007 	ldb	r2,0(r20)
    7e04:	1002e026 	beq	r2,zero,8988 <___vfiprintf_internal_r+0xcc8>
    7e08:	a5800044 	addi	r22,r20,1
    7e0c:	a0c00047 	ldb	r3,1(r20)
    7e10:	d8001d85 	stb	zero,118(sp)
    7e14:	0027883a 	mov	r19,zero
    7e18:	d8002305 	stb	zero,140(sp)
    7e1c:	043fffc4 	movi	r16,-1
    7e20:	d8002515 	stw	zero,148(sp)
    7e24:	0023883a 	mov	r17,zero
    7e28:	05001604 	movi	r20,88
    7e2c:	05400244 	movi	r21,9
    7e30:	402f883a 	mov	r23,r8
    7e34:	b5800044 	addi	r22,r22,1
    7e38:	18bff804 	addi	r2,r3,-32
    7e3c:	a0827736 	bltu	r20,r2,881c <___vfiprintf_internal_r+0xb5c>
    7e40:	100490ba 	slli	r2,r2,2
    7e44:	01000034 	movhi	r4,0
    7e48:	211f9604 	addi	r4,r4,32344
    7e4c:	1105883a 	add	r2,r2,r4
    7e50:	10800017 	ldw	r2,0(r2)
    7e54:	1000683a 	jmp	r2
    7e58:	0000851c 	xori	zero,zero,532
    7e5c:	0000881c 	xori	zero,zero,544
    7e60:	0000881c 	xori	zero,zero,544
    7e64:	00008538 	rdprs	zero,zero,532
    7e68:	0000881c 	xori	zero,zero,544
    7e6c:	0000881c 	xori	zero,zero,544
    7e70:	0000881c 	xori	zero,zero,544
    7e74:	0000881c 	xori	zero,zero,544
    7e78:	0000881c 	xori	zero,zero,544
    7e7c:	0000881c 	xori	zero,zero,544
    7e80:	00008740 	call	874 <___vfprintf_internal_r+0x3ac>
    7e84:	00008764 	muli	zero,zero,541
    7e88:	0000881c 	xori	zero,zero,544
    7e8c:	0000805c 	xori	zero,zero,513
    7e90:	00008778 	rdprs	zero,zero,541
    7e94:	0000881c 	xori	zero,zero,544
    7e98:	00008544 	movi	zero,533
    7e9c:	00008550 	cmplti	zero,zero,533
    7ea0:	00008550 	cmplti	zero,zero,533
    7ea4:	00008550 	cmplti	zero,zero,533
    7ea8:	00008550 	cmplti	zero,zero,533
    7eac:	00008550 	cmplti	zero,zero,533
    7eb0:	00008550 	cmplti	zero,zero,533
    7eb4:	00008550 	cmplti	zero,zero,533
    7eb8:	00008550 	cmplti	zero,zero,533
    7ebc:	00008550 	cmplti	zero,zero,533
    7ec0:	0000881c 	xori	zero,zero,544
    7ec4:	0000881c 	xori	zero,zero,544
    7ec8:	0000881c 	xori	zero,zero,544
    7ecc:	0000881c 	xori	zero,zero,544
    7ed0:	0000881c 	xori	zero,zero,544
    7ed4:	0000881c 	xori	zero,zero,544
    7ed8:	0000881c 	xori	zero,zero,544
    7edc:	0000881c 	xori	zero,zero,544
    7ee0:	0000881c 	xori	zero,zero,544
    7ee4:	0000881c 	xori	zero,zero,544
    7ee8:	00008590 	cmplti	zero,zero,534
    7eec:	0000881c 	xori	zero,zero,544
    7ef0:	0000881c 	xori	zero,zero,544
    7ef4:	0000881c 	xori	zero,zero,544
    7ef8:	0000881c 	xori	zero,zero,544
    7efc:	0000881c 	xori	zero,zero,544
    7f00:	0000881c 	xori	zero,zero,544
    7f04:	0000881c 	xori	zero,zero,544
    7f08:	0000881c 	xori	zero,zero,544
    7f0c:	0000881c 	xori	zero,zero,544
    7f10:	0000881c 	xori	zero,zero,544
    7f14:	000085cc 	andi	zero,zero,535
    7f18:	0000881c 	xori	zero,zero,544
    7f1c:	0000881c 	xori	zero,zero,544
    7f20:	0000881c 	xori	zero,zero,544
    7f24:	0000881c 	xori	zero,zero,544
    7f28:	0000881c 	xori	zero,zero,544
    7f2c:	00008628 	cmpgeui	zero,zero,536
    7f30:	0000881c 	xori	zero,zero,544
    7f34:	0000881c 	xori	zero,zero,544
    7f38:	0000869c 	xori	zero,zero,538
    7f3c:	0000881c 	xori	zero,zero,544
    7f40:	0000881c 	xori	zero,zero,544
    7f44:	0000881c 	xori	zero,zero,544
    7f48:	0000881c 	xori	zero,zero,544
    7f4c:	0000881c 	xori	zero,zero,544
    7f50:	0000881c 	xori	zero,zero,544
    7f54:	0000881c 	xori	zero,zero,544
    7f58:	0000881c 	xori	zero,zero,544
    7f5c:	0000881c 	xori	zero,zero,544
    7f60:	0000881c 	xori	zero,zero,544
    7f64:	00008444 	movi	zero,529
    7f68:	00008474 	movhi	zero,529
    7f6c:	0000881c 	xori	zero,zero,544
    7f70:	0000881c 	xori	zero,zero,544
    7f74:	0000881c 	xori	zero,zero,544
    7f78:	000087c4 	movi	zero,543
    7f7c:	00008474 	movhi	zero,529
    7f80:	0000881c 	xori	zero,zero,544
    7f84:	0000881c 	xori	zero,zero,544
    7f88:	0000831c 	xori	zero,zero,524
    7f8c:	0000881c 	xori	zero,zero,544
    7f90:	00008330 	cmpltui	zero,zero,524
    7f94:	00008368 	cmpgeui	zero,zero,525
    7f98:	00008068 	cmpgeui	zero,zero,513
    7f9c:	00008310 	cmplti	zero,zero,524
    7fa0:	0000881c 	xori	zero,zero,544
    7fa4:	000086dc 	xori	zero,zero,539
    7fa8:	0000881c 	xori	zero,zero,544
    7fac:	00008728 	cmpgeui	zero,zero,540
    7fb0:	0000881c 	xori	zero,zero,544
    7fb4:	0000881c 	xori	zero,zero,544
    7fb8:	000083ec 	andhi	zero,zero,527
    7fbc:	42000204 	addi	r8,r8,8
    7fc0:	d8c02417 	ldw	r3,144(sp)
    7fc4:	1c07883a 	add	r3,r3,r16
    7fc8:	d8c02415 	stw	r3,144(sp)
    7fcc:	003f8c06 	br	7e00 <___vfiprintf_internal_r+0x140>
    7fd0:	d9402017 	ldw	r5,128(sp)
    7fd4:	d9002117 	ldw	r4,132(sp)
    7fd8:	000287c0 	call	287c <__swsetup_r>
    7fdc:	1003c11e 	bne	r2,zero,8ee4 <___vfiprintf_internal_r+0x1224>
    7fe0:	d9402017 	ldw	r5,128(sp)
    7fe4:	00c00284 	movi	r3,10
    7fe8:	2880030b 	ldhu	r2,12(r5)
    7fec:	1080068c 	andi	r2,r2,26
    7ff0:	10ff581e 	bne	r2,r3,7d54 <___vfiprintf_internal_r+0x94>
    7ff4:	d8c02017 	ldw	r3,128(sp)
    7ff8:	1880038f 	ldh	r2,14(r3)
    7ffc:	103f5516 	blt	r2,zero,7d54 <___vfiprintf_internal_r+0x94>
    8000:	d9c02217 	ldw	r7,136(sp)
    8004:	d9002117 	ldw	r4,132(sp)
    8008:	a80d883a 	mov	r6,r21
    800c:	180b883a 	mov	r5,r3
    8010:	00091e80 	call	91e8 <__sbprintf>
    8014:	dfc03517 	ldw	ra,212(sp)
    8018:	df003417 	ldw	fp,208(sp)
    801c:	ddc03317 	ldw	r23,204(sp)
    8020:	dd803217 	ldw	r22,200(sp)
    8024:	dd403117 	ldw	r21,196(sp)
    8028:	dd003017 	ldw	r20,192(sp)
    802c:	dcc02f17 	ldw	r19,188(sp)
    8030:	dc802e17 	ldw	r18,184(sp)
    8034:	dc402d17 	ldw	r17,180(sp)
    8038:	dc002c17 	ldw	r16,176(sp)
    803c:	dec03604 	addi	sp,sp,216
    8040:	f800283a 	ret
    8044:	00048880 	call	4888 <__sinit>
    8048:	003f2f06 	br	7d08 <___vfiprintf_internal_r+0x48>
    804c:	d8c02517 	ldw	r3,148(sp)
    8050:	d8802215 	stw	r2,136(sp)
    8054:	00c7c83a 	sub	r3,zero,r3
    8058:	d8c02515 	stw	r3,148(sp)
    805c:	8c400114 	ori	r17,r17,4
    8060:	b0c00007 	ldb	r3,0(r22)
    8064:	003f7306 	br	7e34 <___vfiprintf_internal_r+0x174>
    8068:	00800c04 	movi	r2,48
    806c:	d9402217 	ldw	r5,136(sp)
    8070:	d8801d05 	stb	r2,116(sp)
    8074:	00801e04 	movi	r2,120
    8078:	d8801d45 	stb	r2,117(sp)
    807c:	d8001d85 	stb	zero,118(sp)
    8080:	b811883a 	mov	r8,r23
    8084:	28c00104 	addi	r3,r5,4
    8088:	2cc00017 	ldw	r19,0(r5)
    808c:	0029883a 	mov	r20,zero
    8090:	88800094 	ori	r2,r17,2
    8094:	80032516 	blt	r16,zero,8d2c <___vfiprintf_internal_r+0x106c>
    8098:	00bfdfc4 	movi	r2,-129
    809c:	88a2703a 	and	r17,r17,r2
    80a0:	d8c02215 	stw	r3,136(sp)
    80a4:	8c400094 	ori	r17,r17,2
    80a8:	98032a1e 	bne	r19,zero,8d54 <___vfiprintf_internal_r+0x1094>
    80ac:	00810034 	movhi	r2,1024
    80b0:	10801704 	addi	r2,r2,92
    80b4:	d8802615 	stw	r2,152(sp)
    80b8:	002b883a 	mov	r21,zero
    80bc:	8001741e 	bne	r16,zero,8690 <___vfiprintf_internal_r+0x9d0>
    80c0:	0021883a 	mov	r16,zero
    80c4:	0029883a 	mov	r20,zero
    80c8:	ddc01a04 	addi	r23,sp,104
    80cc:	8027883a 	mov	r19,r16
    80d0:	8500010e 	bge	r16,r20,80d8 <___vfiprintf_internal_r+0x418>
    80d4:	a027883a 	mov	r19,r20
    80d8:	ad403fcc 	andi	r21,r21,255
    80dc:	ad40201c 	xori	r21,r21,128
    80e0:	ad7fe004 	addi	r21,r21,-128
    80e4:	a8000126 	beq	r21,zero,80ec <___vfiprintf_internal_r+0x42c>
    80e8:	9cc00044 	addi	r19,r19,1
    80ec:	89c0008c 	andi	r7,r17,2
    80f0:	38000126 	beq	r7,zero,80f8 <___vfiprintf_internal_r+0x438>
    80f4:	9cc00084 	addi	r19,r19,2
    80f8:	88c0210c 	andi	r3,r17,132
    80fc:	1801dd1e 	bne	r3,zero,8874 <___vfiprintf_internal_r+0xbb4>
    8100:	d9402517 	ldw	r5,148(sp)
    8104:	2cebc83a 	sub	r21,r5,r19
    8108:	0541da0e 	bge	zero,r21,8874 <___vfiprintf_internal_r+0xbb4>
    810c:	07000404 	movi	fp,16
    8110:	d8801c17 	ldw	r2,112(sp)
    8114:	e543be0e 	bge	fp,r21,9010 <___vfiprintf_internal_r+0x1350>
    8118:	01410034 	movhi	r5,1024
    811c:	29407c04 	addi	r5,r5,496
    8120:	dc002715 	stw	r16,156(sp)
    8124:	d9801b17 	ldw	r6,108(sp)
    8128:	a821883a 	mov	r16,r21
    812c:	d9402315 	stw	r5,140(sp)
    8130:	028001c4 	movi	r10,7
    8134:	d9c02915 	stw	r7,164(sp)
    8138:	182b883a 	mov	r21,r3
    813c:	00000506 	br	8154 <___vfiprintf_internal_r+0x494>
    8140:	31000084 	addi	r4,r6,2
    8144:	42000204 	addi	r8,r8,8
    8148:	180d883a 	mov	r6,r3
    814c:	843ffc04 	addi	r16,r16,-16
    8150:	e4000f0e 	bge	fp,r16,8190 <___vfiprintf_internal_r+0x4d0>
    8154:	01010034 	movhi	r4,1024
    8158:	10800404 	addi	r2,r2,16
    815c:	30c00044 	addi	r3,r6,1
    8160:	21007c04 	addi	r4,r4,496
    8164:	41000015 	stw	r4,0(r8)
    8168:	47000115 	stw	fp,4(r8)
    816c:	d8801c15 	stw	r2,112(sp)
    8170:	d8c01b15 	stw	r3,108(sp)
    8174:	50fff20e 	bge	r10,r3,8140 <___vfiprintf_internal_r+0x480>
    8178:	1001b21e 	bne	r2,zero,8844 <___vfiprintf_internal_r+0xb84>
    817c:	843ffc04 	addi	r16,r16,-16
    8180:	000d883a 	mov	r6,zero
    8184:	01000044 	movi	r4,1
    8188:	d811883a 	mov	r8,sp
    818c:	e43ff116 	blt	fp,r16,8154 <___vfiprintf_internal_r+0x494>
    8190:	a807883a 	mov	r3,r21
    8194:	d9c02917 	ldw	r7,164(sp)
    8198:	802b883a 	mov	r21,r16
    819c:	dc002717 	ldw	r16,156(sp)
    81a0:	d9402317 	ldw	r5,140(sp)
    81a4:	a885883a 	add	r2,r21,r2
    81a8:	45400115 	stw	r21,4(r8)
    81ac:	41400015 	stw	r5,0(r8)
    81b0:	d8801c15 	stw	r2,112(sp)
    81b4:	d9001b15 	stw	r4,108(sp)
    81b8:	014001c4 	movi	r5,7
    81bc:	29026216 	blt	r5,r4,8b48 <___vfiprintf_internal_r+0xe88>
    81c0:	d9801d87 	ldb	r6,118(sp)
    81c4:	42000204 	addi	r8,r8,8
    81c8:	21400044 	addi	r5,r4,1
    81cc:	3001ae1e 	bne	r6,zero,8888 <___vfiprintf_internal_r+0xbc8>
    81d0:	3801bb26 	beq	r7,zero,88c0 <___vfiprintf_internal_r+0xc00>
    81d4:	d9001d04 	addi	r4,sp,116
    81d8:	10800084 	addi	r2,r2,2
    81dc:	41000015 	stw	r4,0(r8)
    81e0:	01000084 	movi	r4,2
    81e4:	41000115 	stw	r4,4(r8)
    81e8:	d8801c15 	stw	r2,112(sp)
    81ec:	d9401b15 	stw	r5,108(sp)
    81f0:	010001c4 	movi	r4,7
    81f4:	2142680e 	bge	r4,r5,8b98 <___vfiprintf_internal_r+0xed8>
    81f8:	1002b11e 	bne	r2,zero,8cc0 <___vfiprintf_internal_r+0x1000>
    81fc:	01802004 	movi	r6,128
    8200:	01400044 	movi	r5,1
    8204:	0009883a 	mov	r4,zero
    8208:	d811883a 	mov	r8,sp
    820c:	1981ae1e 	bne	r3,r6,88c8 <___vfiprintf_internal_r+0xc08>
    8210:	d8c02517 	ldw	r3,148(sp)
    8214:	1cf9c83a 	sub	fp,r3,r19
    8218:	0701ab0e 	bge	zero,fp,88c8 <___vfiprintf_internal_r+0xc08>
    821c:	05400404 	movi	r21,16
    8220:	af03a90e 	bge	r21,fp,90c8 <___vfiprintf_internal_r+0x1408>
    8224:	01410034 	movhi	r5,1024
    8228:	29407804 	addi	r5,r5,480
    822c:	d9402315 	stw	r5,140(sp)
    8230:	01c001c4 	movi	r7,7
    8234:	00000506 	br	824c <___vfiprintf_internal_r+0x58c>
    8238:	21800084 	addi	r6,r4,2
    823c:	42000204 	addi	r8,r8,8
    8240:	1809883a 	mov	r4,r3
    8244:	e73ffc04 	addi	fp,fp,-16
    8248:	af000d0e 	bge	r21,fp,8280 <___vfiprintf_internal_r+0x5c0>
    824c:	10800404 	addi	r2,r2,16
    8250:	20c00044 	addi	r3,r4,1
    8254:	44800015 	stw	r18,0(r8)
    8258:	45400115 	stw	r21,4(r8)
    825c:	d8801c15 	stw	r2,112(sp)
    8260:	d8c01b15 	stw	r3,108(sp)
    8264:	38fff40e 	bge	r7,r3,8238 <___vfiprintf_internal_r+0x578>
    8268:	10022b1e 	bne	r2,zero,8b18 <___vfiprintf_internal_r+0xe58>
    826c:	e73ffc04 	addi	fp,fp,-16
    8270:	01800044 	movi	r6,1
    8274:	0009883a 	mov	r4,zero
    8278:	d811883a 	mov	r8,sp
    827c:	af3ff316 	blt	r21,fp,824c <___vfiprintf_internal_r+0x58c>
    8280:	d8c02317 	ldw	r3,140(sp)
    8284:	1705883a 	add	r2,r2,fp
    8288:	47000115 	stw	fp,4(r8)
    828c:	40c00015 	stw	r3,0(r8)
    8290:	d8801c15 	stw	r2,112(sp)
    8294:	d9801b15 	stw	r6,108(sp)
    8298:	00c001c4 	movi	r3,7
    829c:	19829416 	blt	r3,r6,8cf0 <___vfiprintf_internal_r+0x1030>
    82a0:	8521c83a 	sub	r16,r16,r20
    82a4:	42000204 	addi	r8,r8,8
    82a8:	31400044 	addi	r5,r6,1
    82ac:	3009883a 	mov	r4,r6
    82b0:	04018716 	blt	zero,r16,88d0 <___vfiprintf_internal_r+0xc10>
    82b4:	a085883a 	add	r2,r20,r2
    82b8:	45c00015 	stw	r23,0(r8)
    82bc:	45000115 	stw	r20,4(r8)
    82c0:	d8801c15 	stw	r2,112(sp)
    82c4:	d9401b15 	stw	r5,108(sp)
    82c8:	00c001c4 	movi	r3,7
    82cc:	1941c20e 	bge	r3,r5,89d8 <___vfiprintf_internal_r+0xd18>
    82d0:	1002531e 	bne	r2,zero,8c20 <___vfiprintf_internal_r+0xf60>
    82d4:	d8001b15 	stw	zero,108(sp)
    82d8:	8c40010c 	andi	r17,r17,4
    82dc:	88023226 	beq	r17,zero,8ba8 <___vfiprintf_internal_r+0xee8>
    82e0:	d9002517 	ldw	r4,148(sp)
    82e4:	24e3c83a 	sub	r17,r4,r19
    82e8:	04432916 	blt	zero,r17,8f90 <___vfiprintf_internal_r+0x12d0>
    82ec:	d8802517 	ldw	r2,148(sp)
    82f0:	14c0010e 	bge	r2,r19,82f8 <___vfiprintf_internal_r+0x638>
    82f4:	9805883a 	mov	r2,r19
    82f8:	d8c02417 	ldw	r3,144(sp)
    82fc:	1887883a 	add	r3,r3,r2
    8300:	d8c02415 	stw	r3,144(sp)
    8304:	d8001b15 	stw	zero,108(sp)
    8308:	d811883a 	mov	r8,sp
    830c:	003ea006 	br	7d90 <___vfiprintf_internal_r+0xd0>
    8310:	8c400814 	ori	r17,r17,32
    8314:	b0c00007 	ldb	r3,0(r22)
    8318:	003ec606 	br	7e34 <___vfiprintf_internal_r+0x174>
    831c:	b0c00007 	ldb	r3,0(r22)
    8320:	00801b04 	movi	r2,108
    8324:	18832026 	beq	r3,r2,8fa8 <___vfiprintf_internal_r+0x12e8>
    8328:	8c400414 	ori	r17,r17,16
    832c:	003ec106 	br	7e34 <___vfiprintf_internal_r+0x174>
    8330:	9cc03fcc 	andi	r19,r19,255
    8334:	b811883a 	mov	r8,r23
    8338:	9803981e 	bne	r19,zero,919c <___vfiprintf_internal_r+0x14dc>
    833c:	8880080c 	andi	r2,r17,32
    8340:	1002be26 	beq	r2,zero,8e3c <___vfiprintf_internal_r+0x117c>
    8344:	d9002217 	ldw	r4,136(sp)
    8348:	d9402417 	ldw	r5,144(sp)
    834c:	20800017 	ldw	r2,0(r4)
    8350:	2807d7fa 	srai	r3,r5,31
    8354:	21000104 	addi	r4,r4,4
    8358:	d9002215 	stw	r4,136(sp)
    835c:	11400015 	stw	r5,0(r2)
    8360:	10c00115 	stw	r3,4(r2)
    8364:	003e8a06 	br	7d90 <___vfiprintf_internal_r+0xd0>
    8368:	9cc03fcc 	andi	r19,r19,255
    836c:	b811883a 	mov	r8,r23
    8370:	9803871e 	bne	r19,zero,9190 <___vfiprintf_internal_r+0x14d0>
    8374:	8880080c 	andi	r2,r17,32
    8378:	10009a26 	beq	r2,zero,85e4 <___vfiprintf_internal_r+0x924>
    837c:	d9002217 	ldw	r4,136(sp)
    8380:	d8001d85 	stb	zero,118(sp)
    8384:	20800204 	addi	r2,r4,8
    8388:	24c00017 	ldw	r19,0(r4)
    838c:	25000117 	ldw	r20,4(r4)
    8390:	8002a416 	blt	r16,zero,8e24 <___vfiprintf_internal_r+0x1164>
    8394:	013fdfc4 	movi	r4,-129
    8398:	9d06b03a 	or	r3,r19,r20
    839c:	d8802215 	stw	r2,136(sp)
    83a0:	8922703a 	and	r17,r17,r4
    83a4:	18009b26 	beq	r3,zero,8614 <___vfiprintf_internal_r+0x954>
    83a8:	002b883a 	mov	r21,zero
    83ac:	ddc01a04 	addi	r23,sp,104
    83b0:	9806d0fa 	srli	r3,r19,3
    83b4:	a008977a 	slli	r4,r20,29
    83b8:	a028d0fa 	srli	r20,r20,3
    83bc:	9cc001cc 	andi	r19,r19,7
    83c0:	98800c04 	addi	r2,r19,48
    83c4:	bdffffc4 	addi	r23,r23,-1
    83c8:	20e6b03a 	or	r19,r4,r3
    83cc:	b8800005 	stb	r2,0(r23)
    83d0:	9d06b03a 	or	r3,r19,r20
    83d4:	183ff61e 	bne	r3,zero,83b0 <___vfiprintf_internal_r+0x6f0>
    83d8:	88c0004c 	andi	r3,r17,1
    83dc:	18021f1e 	bne	r3,zero,8c5c <___vfiprintf_internal_r+0xf9c>
    83e0:	d9401e17 	ldw	r5,120(sp)
    83e4:	2de9c83a 	sub	r20,r5,r23
    83e8:	003f3806 	br	80cc <___vfiprintf_internal_r+0x40c>
    83ec:	9cc03fcc 	andi	r19,r19,255
    83f0:	b811883a 	mov	r8,r23
    83f4:	98034f1e 	bne	r19,zero,9134 <___vfiprintf_internal_r+0x1474>
    83f8:	00810034 	movhi	r2,1024
    83fc:	10801704 	addi	r2,r2,92
    8400:	d8802615 	stw	r2,152(sp)
    8404:	8880080c 	andi	r2,r17,32
    8408:	1000ac26 	beq	r2,zero,86bc <___vfiprintf_internal_r+0x9fc>
    840c:	d9002217 	ldw	r4,136(sp)
    8410:	24c00017 	ldw	r19,0(r4)
    8414:	25000117 	ldw	r20,4(r4)
    8418:	21000204 	addi	r4,r4,8
    841c:	d9002215 	stw	r4,136(sp)
    8420:	8880004c 	andi	r2,r17,1
    8424:	1001e726 	beq	r2,zero,8bc4 <___vfiprintf_internal_r+0xf04>
    8428:	9d04b03a 	or	r2,r19,r20
    842c:	10025c1e 	bne	r2,zero,8da0 <___vfiprintf_internal_r+0x10e0>
    8430:	d8001d85 	stb	zero,118(sp)
    8434:	80024416 	blt	r16,zero,8d48 <___vfiprintf_internal_r+0x1088>
    8438:	00bfdfc4 	movi	r2,-129
    843c:	88a2703a 	and	r17,r17,r2
    8440:	003f1d06 	br	80b8 <___vfiprintf_internal_r+0x3f8>
    8444:	d8c02217 	ldw	r3,136(sp)
    8448:	04c00044 	movi	r19,1
    844c:	b811883a 	mov	r8,r23
    8450:	18800017 	ldw	r2,0(r3)
    8454:	18c00104 	addi	r3,r3,4
    8458:	d8001d85 	stb	zero,118(sp)
    845c:	d8801005 	stb	r2,64(sp)
    8460:	d8c02215 	stw	r3,136(sp)
    8464:	9829883a 	mov	r20,r19
    8468:	ddc01004 	addi	r23,sp,64
    846c:	0021883a 	mov	r16,zero
    8470:	003f1e06 	br	80ec <___vfiprintf_internal_r+0x42c>
    8474:	9cc03fcc 	andi	r19,r19,255
    8478:	b811883a 	mov	r8,r23
    847c:	9803331e 	bne	r19,zero,914c <___vfiprintf_internal_r+0x148c>
    8480:	8880080c 	andi	r2,r17,32
    8484:	10004826 	beq	r2,zero,85a8 <___vfiprintf_internal_r+0x8e8>
    8488:	d9002217 	ldw	r4,136(sp)
    848c:	20800117 	ldw	r2,4(r4)
    8490:	24c00017 	ldw	r19,0(r4)
    8494:	21000204 	addi	r4,r4,8
    8498:	d9002215 	stw	r4,136(sp)
    849c:	1029883a 	mov	r20,r2
    84a0:	10024c16 	blt	r2,zero,8dd4 <___vfiprintf_internal_r+0x1114>
    84a4:	dd401d83 	ldbu	r21,118(sp)
    84a8:	80007116 	blt	r16,zero,8670 <___vfiprintf_internal_r+0x9b0>
    84ac:	00ffdfc4 	movi	r3,-129
    84b0:	9d04b03a 	or	r2,r19,r20
    84b4:	88e2703a 	and	r17,r17,r3
    84b8:	1000d126 	beq	r2,zero,8800 <___vfiprintf_internal_r+0xb40>
    84bc:	a0023526 	beq	r20,zero,8d94 <___vfiprintf_internal_r+0x10d4>
    84c0:	ddc01a04 	addi	r23,sp,104
    84c4:	4039883a 	mov	fp,r8
    84c8:	9809883a 	mov	r4,r19
    84cc:	a00b883a 	mov	r5,r20
    84d0:	01800284 	movi	r6,10
    84d4:	000f883a 	mov	r7,zero
    84d8:	000a1ec0 	call	a1ec <__umoddi3>
    84dc:	10800c04 	addi	r2,r2,48
    84e0:	bdffffc4 	addi	r23,r23,-1
    84e4:	9809883a 	mov	r4,r19
    84e8:	a00b883a 	mov	r5,r20
    84ec:	b8800005 	stb	r2,0(r23)
    84f0:	01800284 	movi	r6,10
    84f4:	000f883a 	mov	r7,zero
    84f8:	0009bf00 	call	9bf0 <__udivdi3>
    84fc:	1027883a 	mov	r19,r2
    8500:	10c4b03a 	or	r2,r2,r3
    8504:	1829883a 	mov	r20,r3
    8508:	103fef1e 	bne	r2,zero,84c8 <___vfiprintf_internal_r+0x808>
    850c:	d9001e17 	ldw	r4,120(sp)
    8510:	e011883a 	mov	r8,fp
    8514:	25e9c83a 	sub	r20,r4,r23
    8518:	003eec06 	br	80cc <___vfiprintf_internal_r+0x40c>
    851c:	d8802307 	ldb	r2,140(sp)
    8520:	1002361e 	bne	r2,zero,8dfc <___vfiprintf_internal_r+0x113c>
    8524:	00c00804 	movi	r3,32
    8528:	d8c02305 	stb	r3,140(sp)
    852c:	04c00044 	movi	r19,1
    8530:	b0c00007 	ldb	r3,0(r22)
    8534:	003e3f06 	br	7e34 <___vfiprintf_internal_r+0x174>
    8538:	8c400054 	ori	r17,r17,1
    853c:	b0c00007 	ldb	r3,0(r22)
    8540:	003e3c06 	br	7e34 <___vfiprintf_internal_r+0x174>
    8544:	8c402014 	ori	r17,r17,128
    8548:	b0c00007 	ldb	r3,0(r22)
    854c:	003e3906 	br	7e34 <___vfiprintf_internal_r+0x174>
    8550:	dc002715 	stw	r16,156(sp)
    8554:	d8002515 	stw	zero,148(sp)
    8558:	1f3ff404 	addi	fp,r3,-48
    855c:	0009883a 	mov	r4,zero
    8560:	b021883a 	mov	r16,r22
    8564:	01400284 	movi	r5,10
    8568:	000a9640 	call	a964 <__mulsi3>
    856c:	80c00007 	ldb	r3,0(r16)
    8570:	e089883a 	add	r4,fp,r2
    8574:	b5800044 	addi	r22,r22,1
    8578:	1f3ff404 	addi	fp,r3,-48
    857c:	b021883a 	mov	r16,r22
    8580:	af3ff82e 	bgeu	r21,fp,8564 <___vfiprintf_internal_r+0x8a4>
    8584:	d9002515 	stw	r4,148(sp)
    8588:	dc002717 	ldw	r16,156(sp)
    858c:	003e2a06 	br	7e38 <___vfiprintf_internal_r+0x178>
    8590:	9cc03fcc 	andi	r19,r19,255
    8594:	b811883a 	mov	r8,r23
    8598:	9802e91e 	bne	r19,zero,9140 <___vfiprintf_internal_r+0x1480>
    859c:	8c400414 	ori	r17,r17,16
    85a0:	8880080c 	andi	r2,r17,32
    85a4:	103fb81e 	bne	r2,zero,8488 <___vfiprintf_internal_r+0x7c8>
    85a8:	8880040c 	andi	r2,r17,16
    85ac:	10022e26 	beq	r2,zero,8e68 <___vfiprintf_internal_r+0x11a8>
    85b0:	d9402217 	ldw	r5,136(sp)
    85b4:	2cc00017 	ldw	r19,0(r5)
    85b8:	29400104 	addi	r5,r5,4
    85bc:	d9402215 	stw	r5,136(sp)
    85c0:	9829d7fa 	srai	r20,r19,31
    85c4:	a005883a 	mov	r2,r20
    85c8:	003fb506 	br	84a0 <___vfiprintf_internal_r+0x7e0>
    85cc:	9cc03fcc 	andi	r19,r19,255
    85d0:	b811883a 	mov	r8,r23
    85d4:	9802fa1e 	bne	r19,zero,91c0 <___vfiprintf_internal_r+0x1500>
    85d8:	8c400414 	ori	r17,r17,16
    85dc:	8880080c 	andi	r2,r17,32
    85e0:	103f661e 	bne	r2,zero,837c <___vfiprintf_internal_r+0x6bc>
    85e4:	8880040c 	andi	r2,r17,16
    85e8:	10020626 	beq	r2,zero,8e04 <___vfiprintf_internal_r+0x1144>
    85ec:	d9402217 	ldw	r5,136(sp)
    85f0:	d8001d85 	stb	zero,118(sp)
    85f4:	0029883a 	mov	r20,zero
    85f8:	28800104 	addi	r2,r5,4
    85fc:	2cc00017 	ldw	r19,0(r5)
    8600:	80020816 	blt	r16,zero,8e24 <___vfiprintf_internal_r+0x1164>
    8604:	00ffdfc4 	movi	r3,-129
    8608:	d8802215 	stw	r2,136(sp)
    860c:	88e2703a 	and	r17,r17,r3
    8610:	983f651e 	bne	r19,zero,83a8 <___vfiprintf_internal_r+0x6e8>
    8614:	002b883a 	mov	r21,zero
    8618:	8002cf26 	beq	r16,zero,9158 <___vfiprintf_internal_r+0x1498>
    861c:	0027883a 	mov	r19,zero
    8620:	0029883a 	mov	r20,zero
    8624:	003f6106 	br	83ac <___vfiprintf_internal_r+0x6ec>
    8628:	9cc03fcc 	andi	r19,r19,255
    862c:	b811883a 	mov	r8,r23
    8630:	9802e01e 	bne	r19,zero,91b4 <___vfiprintf_internal_r+0x14f4>
    8634:	8c400414 	ori	r17,r17,16
    8638:	8880080c 	andi	r2,r17,32
    863c:	1000641e 	bne	r2,zero,87d0 <___vfiprintf_internal_r+0xb10>
    8640:	8880040c 	andi	r2,r17,16
    8644:	1001c81e 	bne	r2,zero,8d68 <___vfiprintf_internal_r+0x10a8>
    8648:	8880100c 	andi	r2,r17,64
    864c:	d8001d85 	stb	zero,118(sp)
    8650:	1002281e 	bne	r2,zero,8ef4 <___vfiprintf_internal_r+0x1234>
    8654:	d9002217 	ldw	r4,136(sp)
    8658:	0029883a 	mov	r20,zero
    865c:	20800104 	addi	r2,r4,4
    8660:	24c00017 	ldw	r19,0(r4)
    8664:	8001c60e 	bge	r16,zero,8d80 <___vfiprintf_internal_r+0x10c0>
    8668:	d8802215 	stw	r2,136(sp)
    866c:	002b883a 	mov	r21,zero
    8670:	9d04b03a 	or	r2,r19,r20
    8674:	103f911e 	bne	r2,zero,84bc <___vfiprintf_internal_r+0x7fc>
    8678:	00800044 	movi	r2,1
    867c:	10803fcc 	andi	r2,r2,255
    8680:	00c00044 	movi	r3,1
    8684:	10c05f26 	beq	r2,r3,8804 <___vfiprintf_internal_r+0xb44>
    8688:	00c00084 	movi	r3,2
    868c:	10ffe31e 	bne	r2,r3,861c <___vfiprintf_internal_r+0x95c>
    8690:	0027883a 	mov	r19,zero
    8694:	0029883a 	mov	r20,zero
    8698:	00015106 	br	8be0 <___vfiprintf_internal_r+0xf20>
    869c:	9cc03fcc 	andi	r19,r19,255
    86a0:	b811883a 	mov	r8,r23
    86a4:	9802c01e 	bne	r19,zero,91a8 <___vfiprintf_internal_r+0x14e8>
    86a8:	01410034 	movhi	r5,1024
    86ac:	29401204 	addi	r5,r5,72
    86b0:	d9402615 	stw	r5,152(sp)
    86b4:	8880080c 	andi	r2,r17,32
    86b8:	103f541e 	bne	r2,zero,840c <___vfiprintf_internal_r+0x74c>
    86bc:	8880040c 	andi	r2,r17,16
    86c0:	1001f226 	beq	r2,zero,8e8c <___vfiprintf_internal_r+0x11cc>
    86c4:	d9402217 	ldw	r5,136(sp)
    86c8:	0029883a 	mov	r20,zero
    86cc:	2cc00017 	ldw	r19,0(r5)
    86d0:	29400104 	addi	r5,r5,4
    86d4:	d9402215 	stw	r5,136(sp)
    86d8:	003f5106 	br	8420 <___vfiprintf_internal_r+0x760>
    86dc:	d8c02217 	ldw	r3,136(sp)
    86e0:	b811883a 	mov	r8,r23
    86e4:	d8001d85 	stb	zero,118(sp)
    86e8:	1dc00017 	ldw	r23,0(r3)
    86ec:	1f000104 	addi	fp,r3,4
    86f0:	b8025926 	beq	r23,zero,9058 <___vfiprintf_internal_r+0x1398>
    86f4:	80023316 	blt	r16,zero,8fc4 <___vfiprintf_internal_r+0x1304>
    86f8:	800d883a 	mov	r6,r16
    86fc:	000b883a 	mov	r5,zero
    8700:	b809883a 	mov	r4,r23
    8704:	da002a15 	stw	r8,168(sp)
    8708:	0005e000 	call	5e00 <memchr>
    870c:	da002a17 	ldw	r8,168(sp)
    8710:	10026826 	beq	r2,zero,90b4 <___vfiprintf_internal_r+0x13f4>
    8714:	15e9c83a 	sub	r20,r2,r23
    8718:	dd401d83 	ldbu	r21,118(sp)
    871c:	df002215 	stw	fp,136(sp)
    8720:	0021883a 	mov	r16,zero
    8724:	003e6906 	br	80cc <___vfiprintf_internal_r+0x40c>
    8728:	9cc03fcc 	andi	r19,r19,255
    872c:	b811883a 	mov	r8,r23
    8730:	983fc126 	beq	r19,zero,8638 <___vfiprintf_internal_r+0x978>
    8734:	d8c02303 	ldbu	r3,140(sp)
    8738:	d8c01d85 	stb	r3,118(sp)
    873c:	003fbe06 	br	8638 <___vfiprintf_internal_r+0x978>
    8740:	d9002217 	ldw	r4,136(sp)
    8744:	d9402217 	ldw	r5,136(sp)
    8748:	21000017 	ldw	r4,0(r4)
    874c:	28800104 	addi	r2,r5,4
    8750:	d9002515 	stw	r4,148(sp)
    8754:	203e3d16 	blt	r4,zero,804c <___vfiprintf_internal_r+0x38c>
    8758:	d8802215 	stw	r2,136(sp)
    875c:	b0c00007 	ldb	r3,0(r22)
    8760:	003db406 	br	7e34 <___vfiprintf_internal_r+0x174>
    8764:	00c00ac4 	movi	r3,43
    8768:	d8c02305 	stb	r3,140(sp)
    876c:	04c00044 	movi	r19,1
    8770:	b0c00007 	ldb	r3,0(r22)
    8774:	003daf06 	br	7e34 <___vfiprintf_internal_r+0x174>
    8778:	b0c00007 	ldb	r3,0(r22)
    877c:	01000a84 	movi	r4,42
    8780:	b4000044 	addi	r16,r22,1
    8784:	19025e26 	beq	r3,r4,9100 <___vfiprintf_internal_r+0x1440>
    8788:	1f3ff404 	addi	fp,r3,-48
    878c:	0009883a 	mov	r4,zero
    8790:	af025236 	bltu	r21,fp,90dc <___vfiprintf_internal_r+0x141c>
    8794:	01400284 	movi	r5,10
    8798:	000a9640 	call	a964 <__mulsi3>
    879c:	80c00007 	ldb	r3,0(r16)
    87a0:	1709883a 	add	r4,r2,fp
    87a4:	85800044 	addi	r22,r16,1
    87a8:	1f3ff404 	addi	fp,r3,-48
    87ac:	b021883a 	mov	r16,r22
    87b0:	af3ff82e 	bgeu	r21,fp,8794 <___vfiprintf_internal_r+0xad4>
    87b4:	2021883a 	mov	r16,r4
    87b8:	203d9f0e 	bge	r4,zero,7e38 <___vfiprintf_internal_r+0x178>
    87bc:	043fffc4 	movi	r16,-1
    87c0:	003d9d06 	br	7e38 <___vfiprintf_internal_r+0x178>
    87c4:	8c401014 	ori	r17,r17,64
    87c8:	b0c00007 	ldb	r3,0(r22)
    87cc:	003d9906 	br	7e34 <___vfiprintf_internal_r+0x174>
    87d0:	d9002217 	ldw	r4,136(sp)
    87d4:	d8001d85 	stb	zero,118(sp)
    87d8:	20c00204 	addi	r3,r4,8
    87dc:	24c00017 	ldw	r19,0(r4)
    87e0:	25000117 	ldw	r20,4(r4)
    87e4:	8001e716 	blt	r16,zero,8f84 <___vfiprintf_internal_r+0x12c4>
    87e8:	013fdfc4 	movi	r4,-129
    87ec:	9d04b03a 	or	r2,r19,r20
    87f0:	d8c02215 	stw	r3,136(sp)
    87f4:	8922703a 	and	r17,r17,r4
    87f8:	002b883a 	mov	r21,zero
    87fc:	103f2f1e 	bne	r2,zero,84bc <___vfiprintf_internal_r+0x7fc>
    8800:	803e2f26 	beq	r16,zero,80c0 <___vfiprintf_internal_r+0x400>
    8804:	0027883a 	mov	r19,zero
    8808:	9cc00c04 	addi	r19,r19,48
    880c:	dcc019c5 	stb	r19,103(sp)
    8810:	dd002817 	ldw	r20,160(sp)
    8814:	ddc019c4 	addi	r23,sp,103
    8818:	003e2c06 	br	80cc <___vfiprintf_internal_r+0x40c>
    881c:	9cc03fcc 	andi	r19,r19,255
    8820:	b811883a 	mov	r8,r23
    8824:	9802571e 	bne	r19,zero,9184 <___vfiprintf_internal_r+0x14c4>
    8828:	18005726 	beq	r3,zero,8988 <___vfiprintf_internal_r+0xcc8>
    882c:	04c00044 	movi	r19,1
    8830:	d8c01005 	stb	r3,64(sp)
    8834:	d8001d85 	stb	zero,118(sp)
    8838:	9829883a 	mov	r20,r19
    883c:	ddc01004 	addi	r23,sp,64
    8840:	003f0a06 	br	846c <___vfiprintf_internal_r+0x7ac>
    8844:	d9402017 	ldw	r5,128(sp)
    8848:	d9002117 	ldw	r4,132(sp)
    884c:	d9801a04 	addi	r6,sp,104
    8850:	da802a15 	stw	r10,168(sp)
    8854:	0007bac0 	call	7bac <__sprint_r.part.0>
    8858:	da802a17 	ldw	r10,168(sp)
    885c:	1000501e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8860:	d9801b17 	ldw	r6,108(sp)
    8864:	d8801c17 	ldw	r2,112(sp)
    8868:	d811883a 	mov	r8,sp
    886c:	31000044 	addi	r4,r6,1
    8870:	003e3606 	br	814c <___vfiprintf_internal_r+0x48c>
    8874:	d9001b17 	ldw	r4,108(sp)
    8878:	d8801c17 	ldw	r2,112(sp)
    887c:	21400044 	addi	r5,r4,1
    8880:	d9801d87 	ldb	r6,118(sp)
    8884:	303e5226 	beq	r6,zero,81d0 <___vfiprintf_internal_r+0x510>
    8888:	01800044 	movi	r6,1
    888c:	d9001d84 	addi	r4,sp,118
    8890:	1185883a 	add	r2,r2,r6
    8894:	41000015 	stw	r4,0(r8)
    8898:	41800115 	stw	r6,4(r8)
    889c:	d8801c15 	stw	r2,112(sp)
    88a0:	d9401b15 	stw	r5,108(sp)
    88a4:	010001c4 	movi	r4,7
    88a8:	2140b00e 	bge	r4,r5,8b6c <___vfiprintf_internal_r+0xeac>
    88ac:	1000f61e 	bne	r2,zero,8c88 <___vfiprintf_internal_r+0xfc8>
    88b0:	3800b31e 	bne	r7,zero,8b80 <___vfiprintf_internal_r+0xec0>
    88b4:	0009883a 	mov	r4,zero
    88b8:	300b883a 	mov	r5,r6
    88bc:	d811883a 	mov	r8,sp
    88c0:	01802004 	movi	r6,128
    88c4:	19be5226 	beq	r3,r6,8210 <___vfiprintf_internal_r+0x550>
    88c8:	8521c83a 	sub	r16,r16,r20
    88cc:	043e790e 	bge	zero,r16,82b4 <___vfiprintf_internal_r+0x5f4>
    88d0:	05400404 	movi	r21,16
    88d4:	ac01b00e 	bge	r21,r16,8f98 <___vfiprintf_internal_r+0x12d8>
    88d8:	01410034 	movhi	r5,1024
    88dc:	29407804 	addi	r5,r5,480
    88e0:	d9402315 	stw	r5,140(sp)
    88e4:	070001c4 	movi	fp,7
    88e8:	00000506 	br	8900 <___vfiprintf_internal_r+0xc40>
    88ec:	21400084 	addi	r5,r4,2
    88f0:	42000204 	addi	r8,r8,8
    88f4:	1809883a 	mov	r4,r3
    88f8:	843ffc04 	addi	r16,r16,-16
    88fc:	ac000d0e 	bge	r21,r16,8934 <___vfiprintf_internal_r+0xc74>
    8900:	10800404 	addi	r2,r2,16
    8904:	20c00044 	addi	r3,r4,1
    8908:	44800015 	stw	r18,0(r8)
    890c:	45400115 	stw	r21,4(r8)
    8910:	d8801c15 	stw	r2,112(sp)
    8914:	d8c01b15 	stw	r3,108(sp)
    8918:	e0fff40e 	bge	fp,r3,88ec <___vfiprintf_internal_r+0xc2c>
    891c:	1000101e 	bne	r2,zero,8960 <___vfiprintf_internal_r+0xca0>
    8920:	843ffc04 	addi	r16,r16,-16
    8924:	01400044 	movi	r5,1
    8928:	0009883a 	mov	r4,zero
    892c:	d811883a 	mov	r8,sp
    8930:	ac3ff316 	blt	r21,r16,8900 <___vfiprintf_internal_r+0xc40>
    8934:	d8c02317 	ldw	r3,140(sp)
    8938:	1405883a 	add	r2,r2,r16
    893c:	44000115 	stw	r16,4(r8)
    8940:	40c00015 	stw	r3,0(r8)
    8944:	d8801c15 	stw	r2,112(sp)
    8948:	d9401b15 	stw	r5,108(sp)
    894c:	00c001c4 	movi	r3,7
    8950:	19401916 	blt	r3,r5,89b8 <___vfiprintf_internal_r+0xcf8>
    8954:	42000204 	addi	r8,r8,8
    8958:	29400044 	addi	r5,r5,1
    895c:	003e5506 	br	82b4 <___vfiprintf_internal_r+0x5f4>
    8960:	d9402017 	ldw	r5,128(sp)
    8964:	d9002117 	ldw	r4,132(sp)
    8968:	d9801a04 	addi	r6,sp,104
    896c:	0007bac0 	call	7bac <__sprint_r.part.0>
    8970:	10000b1e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8974:	d9001b17 	ldw	r4,108(sp)
    8978:	d8801c17 	ldw	r2,112(sp)
    897c:	d811883a 	mov	r8,sp
    8980:	21400044 	addi	r5,r4,1
    8984:	003fdc06 	br	88f8 <___vfiprintf_internal_r+0xc38>
    8988:	d8801c17 	ldw	r2,112(sp)
    898c:	10000426 	beq	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8990:	d9402017 	ldw	r5,128(sp)
    8994:	d9002117 	ldw	r4,132(sp)
    8998:	d9801a04 	addi	r6,sp,104
    899c:	0007bac0 	call	7bac <__sprint_r.part.0>
    89a0:	d9402017 	ldw	r5,128(sp)
    89a4:	2880030b 	ldhu	r2,12(r5)
    89a8:	1080100c 	andi	r2,r2,64
    89ac:	10014d1e 	bne	r2,zero,8ee4 <___vfiprintf_internal_r+0x1224>
    89b0:	d8802417 	ldw	r2,144(sp)
    89b4:	003d9706 	br	8014 <___vfiprintf_internal_r+0x354>
    89b8:	1000d21e 	bne	r2,zero,8d04 <___vfiprintf_internal_r+0x1044>
    89bc:	00c00044 	movi	r3,1
    89c0:	a005883a 	mov	r2,r20
    89c4:	ddc00015 	stw	r23,0(sp)
    89c8:	dd000115 	stw	r20,4(sp)
    89cc:	dd001c15 	stw	r20,112(sp)
    89d0:	d8c01b15 	stw	r3,108(sp)
    89d4:	d811883a 	mov	r8,sp
    89d8:	42000204 	addi	r8,r8,8
    89dc:	8c40010c 	andi	r17,r17,4
    89e0:	88004026 	beq	r17,zero,8ae4 <___vfiprintf_internal_r+0xe24>
    89e4:	d9002517 	ldw	r4,148(sp)
    89e8:	24e3c83a 	sub	r17,r4,r19
    89ec:	04403d0e 	bge	zero,r17,8ae4 <___vfiprintf_internal_r+0xe24>
    89f0:	04000404 	movi	r16,16
    89f4:	8441a90e 	bge	r16,r17,909c <___vfiprintf_internal_r+0x13dc>
    89f8:	00c10034 	movhi	r3,1024
    89fc:	18c07c04 	addi	r3,r3,496
    8a00:	d9001b17 	ldw	r4,108(sp)
    8a04:	d8c02315 	stw	r3,140(sp)
    8a08:	050001c4 	movi	r20,7
    8a0c:	dd402117 	ldw	r21,132(sp)
    8a10:	ddc02017 	ldw	r23,128(sp)
    8a14:	00000506 	br	8a2c <___vfiprintf_internal_r+0xd6c>
    8a18:	21400084 	addi	r5,r4,2
    8a1c:	42000204 	addi	r8,r8,8
    8a20:	1809883a 	mov	r4,r3
    8a24:	8c7ffc04 	addi	r17,r17,-16
    8a28:	84400f0e 	bge	r16,r17,8a68 <___vfiprintf_internal_r+0xda8>
    8a2c:	01410034 	movhi	r5,1024
    8a30:	10800404 	addi	r2,r2,16
    8a34:	20c00044 	addi	r3,r4,1
    8a38:	29407c04 	addi	r5,r5,496
    8a3c:	41400015 	stw	r5,0(r8)
    8a40:	44000115 	stw	r16,4(r8)
    8a44:	d8801c15 	stw	r2,112(sp)
    8a48:	d8c01b15 	stw	r3,108(sp)
    8a4c:	a0fff20e 	bge	r20,r3,8a18 <___vfiprintf_internal_r+0xd58>
    8a50:	1000141e 	bne	r2,zero,8aa4 <___vfiprintf_internal_r+0xde4>
    8a54:	8c7ffc04 	addi	r17,r17,-16
    8a58:	01400044 	movi	r5,1
    8a5c:	0009883a 	mov	r4,zero
    8a60:	d811883a 	mov	r8,sp
    8a64:	847ff116 	blt	r16,r17,8a2c <___vfiprintf_internal_r+0xd6c>
    8a68:	d8c02317 	ldw	r3,140(sp)
    8a6c:	1445883a 	add	r2,r2,r17
    8a70:	44400115 	stw	r17,4(r8)
    8a74:	40c00015 	stw	r3,0(r8)
    8a78:	d8801c15 	stw	r2,112(sp)
    8a7c:	d9401b15 	stw	r5,108(sp)
    8a80:	00c001c4 	movi	r3,7
    8a84:	1940170e 	bge	r3,r5,8ae4 <___vfiprintf_internal_r+0xe24>
    8a88:	1000101e 	bne	r2,zero,8acc <___vfiprintf_internal_r+0xe0c>
    8a8c:	d8802517 	ldw	r2,148(sp)
    8a90:	14c11616 	blt	r2,r19,8eec <___vfiprintf_internal_r+0x122c>
    8a94:	d9002417 	ldw	r4,144(sp)
    8a98:	2089883a 	add	r4,r4,r2
    8a9c:	d9002415 	stw	r4,144(sp)
    8aa0:	003e1806 	br	8304 <___vfiprintf_internal_r+0x644>
    8aa4:	d9801a04 	addi	r6,sp,104
    8aa8:	b80b883a 	mov	r5,r23
    8aac:	a809883a 	mov	r4,r21
    8ab0:	0007bac0 	call	7bac <__sprint_r.part.0>
    8ab4:	103fba1e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8ab8:	d9001b17 	ldw	r4,108(sp)
    8abc:	d8801c17 	ldw	r2,112(sp)
    8ac0:	d811883a 	mov	r8,sp
    8ac4:	21400044 	addi	r5,r4,1
    8ac8:	003fd606 	br	8a24 <___vfiprintf_internal_r+0xd64>
    8acc:	d9402017 	ldw	r5,128(sp)
    8ad0:	d9002117 	ldw	r4,132(sp)
    8ad4:	d9801a04 	addi	r6,sp,104
    8ad8:	0007bac0 	call	7bac <__sprint_r.part.0>
    8adc:	103fb01e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8ae0:	d8801c17 	ldw	r2,112(sp)
    8ae4:	d8c02517 	ldw	r3,148(sp)
    8ae8:	1cc0010e 	bge	r3,r19,8af0 <___vfiprintf_internal_r+0xe30>
    8aec:	9807883a 	mov	r3,r19
    8af0:	d9002417 	ldw	r4,144(sp)
    8af4:	20c9883a 	add	r4,r4,r3
    8af8:	d9002415 	stw	r4,144(sp)
    8afc:	103e0126 	beq	r2,zero,8304 <___vfiprintf_internal_r+0x644>
    8b00:	d9402017 	ldw	r5,128(sp)
    8b04:	d9002117 	ldw	r4,132(sp)
    8b08:	d9801a04 	addi	r6,sp,104
    8b0c:	0007bac0 	call	7bac <__sprint_r.part.0>
    8b10:	103dfc26 	beq	r2,zero,8304 <___vfiprintf_internal_r+0x644>
    8b14:	003fa206 	br	89a0 <___vfiprintf_internal_r+0xce0>
    8b18:	d9402017 	ldw	r5,128(sp)
    8b1c:	d9002117 	ldw	r4,132(sp)
    8b20:	d9801a04 	addi	r6,sp,104
    8b24:	d9c02b15 	stw	r7,172(sp)
    8b28:	0007bac0 	call	7bac <__sprint_r.part.0>
    8b2c:	d9c02b17 	ldw	r7,172(sp)
    8b30:	103f9b1e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8b34:	d9001b17 	ldw	r4,108(sp)
    8b38:	d8801c17 	ldw	r2,112(sp)
    8b3c:	d811883a 	mov	r8,sp
    8b40:	21800044 	addi	r6,r4,1
    8b44:	003dbf06 	br	8244 <___vfiprintf_internal_r+0x584>
    8b48:	1000d81e 	bne	r2,zero,8eac <___vfiprintf_internal_r+0x11ec>
    8b4c:	d9001d87 	ldb	r4,118(sp)
    8b50:	20000a26 	beq	r4,zero,8b7c <___vfiprintf_internal_r+0xebc>
    8b54:	00800044 	movi	r2,1
    8b58:	d9001d84 	addi	r4,sp,118
    8b5c:	100b883a 	mov	r5,r2
    8b60:	d9000015 	stw	r4,0(sp)
    8b64:	d8800115 	stw	r2,4(sp)
    8b68:	d811883a 	mov	r8,sp
    8b6c:	2809883a 	mov	r4,r5
    8b70:	42000204 	addi	r8,r8,8
    8b74:	29400044 	addi	r5,r5,1
    8b78:	003d9506 	br	81d0 <___vfiprintf_internal_r+0x510>
    8b7c:	3800fd26 	beq	r7,zero,8f74 <___vfiprintf_internal_r+0x12b4>
    8b80:	00800084 	movi	r2,2
    8b84:	d9001d04 	addi	r4,sp,116
    8b88:	d9000015 	stw	r4,0(sp)
    8b8c:	d8800115 	stw	r2,4(sp)
    8b90:	01400044 	movi	r5,1
    8b94:	d811883a 	mov	r8,sp
    8b98:	2809883a 	mov	r4,r5
    8b9c:	42000204 	addi	r8,r8,8
    8ba0:	29400044 	addi	r5,r5,1
    8ba4:	003f4606 	br	88c0 <___vfiprintf_internal_r+0xc00>
    8ba8:	d8802517 	ldw	r2,148(sp)
    8bac:	14c0010e 	bge	r2,r19,8bb4 <___vfiprintf_internal_r+0xef4>
    8bb0:	9805883a 	mov	r2,r19
    8bb4:	d9402417 	ldw	r5,144(sp)
    8bb8:	288b883a 	add	r5,r5,r2
    8bbc:	d9402415 	stw	r5,144(sp)
    8bc0:	003dd006 	br	8304 <___vfiprintf_internal_r+0x644>
    8bc4:	d8001d85 	stb	zero,118(sp)
    8bc8:	80005d16 	blt	r16,zero,8d40 <___vfiprintf_internal_r+0x1080>
    8bcc:	00ffdfc4 	movi	r3,-129
    8bd0:	9d04b03a 	or	r2,r19,r20
    8bd4:	88e2703a 	and	r17,r17,r3
    8bd8:	103d3726 	beq	r2,zero,80b8 <___vfiprintf_internal_r+0x3f8>
    8bdc:	002b883a 	mov	r21,zero
    8be0:	d9002617 	ldw	r4,152(sp)
    8be4:	ddc01a04 	addi	r23,sp,104
    8be8:	988003cc 	andi	r2,r19,15
    8bec:	a006973a 	slli	r3,r20,28
    8bf0:	2085883a 	add	r2,r4,r2
    8bf4:	9826d13a 	srli	r19,r19,4
    8bf8:	10800003 	ldbu	r2,0(r2)
    8bfc:	a028d13a 	srli	r20,r20,4
    8c00:	bdffffc4 	addi	r23,r23,-1
    8c04:	1ce6b03a 	or	r19,r3,r19
    8c08:	b8800005 	stb	r2,0(r23)
    8c0c:	9d04b03a 	or	r2,r19,r20
    8c10:	103ff51e 	bne	r2,zero,8be8 <___vfiprintf_internal_r+0xf28>
    8c14:	d8801e17 	ldw	r2,120(sp)
    8c18:	15e9c83a 	sub	r20,r2,r23
    8c1c:	003d2b06 	br	80cc <___vfiprintf_internal_r+0x40c>
    8c20:	d9402017 	ldw	r5,128(sp)
    8c24:	d9002117 	ldw	r4,132(sp)
    8c28:	d9801a04 	addi	r6,sp,104
    8c2c:	0007bac0 	call	7bac <__sprint_r.part.0>
    8c30:	103f5b1e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8c34:	d8801c17 	ldw	r2,112(sp)
    8c38:	d811883a 	mov	r8,sp
    8c3c:	003f6706 	br	89dc <___vfiprintf_internal_r+0xd1c>
    8c40:	d9402017 	ldw	r5,128(sp)
    8c44:	d9002117 	ldw	r4,132(sp)
    8c48:	d9801a04 	addi	r6,sp,104
    8c4c:	0007bac0 	call	7bac <__sprint_r.part.0>
    8c50:	103f531e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8c54:	d811883a 	mov	r8,sp
    8c58:	003cd906 	br	7fc0 <___vfiprintf_internal_r+0x300>
    8c5c:	10803fcc 	andi	r2,r2,255
    8c60:	1080201c 	xori	r2,r2,128
    8c64:	10bfe004 	addi	r2,r2,-128
    8c68:	00c00c04 	movi	r3,48
    8c6c:	10ffe926 	beq	r2,r3,8c14 <___vfiprintf_internal_r+0xf54>
    8c70:	b8ffffc5 	stb	r3,-1(r23)
    8c74:	d8c01e17 	ldw	r3,120(sp)
    8c78:	b8bfffc4 	addi	r2,r23,-1
    8c7c:	102f883a 	mov	r23,r2
    8c80:	18a9c83a 	sub	r20,r3,r2
    8c84:	003d1106 	br	80cc <___vfiprintf_internal_r+0x40c>
    8c88:	d9402017 	ldw	r5,128(sp)
    8c8c:	d9002117 	ldw	r4,132(sp)
    8c90:	d9801a04 	addi	r6,sp,104
    8c94:	d8c02a15 	stw	r3,168(sp)
    8c98:	d9c02b15 	stw	r7,172(sp)
    8c9c:	0007bac0 	call	7bac <__sprint_r.part.0>
    8ca0:	d8c02a17 	ldw	r3,168(sp)
    8ca4:	d9c02b17 	ldw	r7,172(sp)
    8ca8:	103f3d1e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8cac:	d9001b17 	ldw	r4,108(sp)
    8cb0:	d8801c17 	ldw	r2,112(sp)
    8cb4:	d811883a 	mov	r8,sp
    8cb8:	21400044 	addi	r5,r4,1
    8cbc:	003d4406 	br	81d0 <___vfiprintf_internal_r+0x510>
    8cc0:	d9402017 	ldw	r5,128(sp)
    8cc4:	d9002117 	ldw	r4,132(sp)
    8cc8:	d9801a04 	addi	r6,sp,104
    8ccc:	d8c02a15 	stw	r3,168(sp)
    8cd0:	0007bac0 	call	7bac <__sprint_r.part.0>
    8cd4:	d8c02a17 	ldw	r3,168(sp)
    8cd8:	103f311e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8cdc:	d9001b17 	ldw	r4,108(sp)
    8ce0:	d8801c17 	ldw	r2,112(sp)
    8ce4:	d811883a 	mov	r8,sp
    8ce8:	21400044 	addi	r5,r4,1
    8cec:	003ef406 	br	88c0 <___vfiprintf_internal_r+0xc00>
    8cf0:	1000bd1e 	bne	r2,zero,8fe8 <___vfiprintf_internal_r+0x1328>
    8cf4:	01400044 	movi	r5,1
    8cf8:	0009883a 	mov	r4,zero
    8cfc:	d811883a 	mov	r8,sp
    8d00:	003ef106 	br	88c8 <___vfiprintf_internal_r+0xc08>
    8d04:	d9402017 	ldw	r5,128(sp)
    8d08:	d9002117 	ldw	r4,132(sp)
    8d0c:	d9801a04 	addi	r6,sp,104
    8d10:	0007bac0 	call	7bac <__sprint_r.part.0>
    8d14:	103f221e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8d18:	d9401b17 	ldw	r5,108(sp)
    8d1c:	d8801c17 	ldw	r2,112(sp)
    8d20:	d811883a 	mov	r8,sp
    8d24:	29400044 	addi	r5,r5,1
    8d28:	003d6206 	br	82b4 <___vfiprintf_internal_r+0x5f4>
    8d2c:	01410034 	movhi	r5,1024
    8d30:	29401704 	addi	r5,r5,92
    8d34:	d9402615 	stw	r5,152(sp)
    8d38:	d8c02215 	stw	r3,136(sp)
    8d3c:	1023883a 	mov	r17,r2
    8d40:	9d04b03a 	or	r2,r19,r20
    8d44:	103fa51e 	bne	r2,zero,8bdc <___vfiprintf_internal_r+0xf1c>
    8d48:	002b883a 	mov	r21,zero
    8d4c:	00800084 	movi	r2,2
    8d50:	003e4a06 	br	867c <___vfiprintf_internal_r+0x9bc>
    8d54:	01410034 	movhi	r5,1024
    8d58:	29401704 	addi	r5,r5,92
    8d5c:	002b883a 	mov	r21,zero
    8d60:	d9402615 	stw	r5,152(sp)
    8d64:	003f9e06 	br	8be0 <___vfiprintf_internal_r+0xf20>
    8d68:	d9402217 	ldw	r5,136(sp)
    8d6c:	d8001d85 	stb	zero,118(sp)
    8d70:	0029883a 	mov	r20,zero
    8d74:	28800104 	addi	r2,r5,4
    8d78:	2cc00017 	ldw	r19,0(r5)
    8d7c:	803e3a16 	blt	r16,zero,8668 <___vfiprintf_internal_r+0x9a8>
    8d80:	00ffdfc4 	movi	r3,-129
    8d84:	d8802215 	stw	r2,136(sp)
    8d88:	88e2703a 	and	r17,r17,r3
    8d8c:	002b883a 	mov	r21,zero
    8d90:	983e9b26 	beq	r19,zero,8800 <___vfiprintf_internal_r+0xb40>
    8d94:	00800244 	movi	r2,9
    8d98:	14fdc936 	bltu	r2,r19,84c0 <___vfiprintf_internal_r+0x800>
    8d9c:	003e9a06 	br	8808 <___vfiprintf_internal_r+0xb48>
    8da0:	00800c04 	movi	r2,48
    8da4:	d8c01d45 	stb	r3,117(sp)
    8da8:	d8801d05 	stb	r2,116(sp)
    8dac:	d8001d85 	stb	zero,118(sp)
    8db0:	88c00094 	ori	r3,r17,2
    8db4:	80009c16 	blt	r16,zero,9028 <___vfiprintf_internal_r+0x1368>
    8db8:	00bfdfc4 	movi	r2,-129
    8dbc:	88a2703a 	and	r17,r17,r2
    8dc0:	8c400094 	ori	r17,r17,2
    8dc4:	002b883a 	mov	r21,zero
    8dc8:	003f8506 	br	8be0 <___vfiprintf_internal_r+0xf20>
    8dcc:	b029883a 	mov	r20,r22
    8dd0:	003c0b06 	br	7e00 <___vfiprintf_internal_r+0x140>
    8dd4:	04e7c83a 	sub	r19,zero,r19
    8dd8:	05400b44 	movi	r21,45
    8ddc:	9804c03a 	cmpne	r2,r19,zero
    8de0:	0529c83a 	sub	r20,zero,r20
    8de4:	dd401d85 	stb	r21,118(sp)
    8de8:	a0a9c83a 	sub	r20,r20,r2
    8dec:	80009716 	blt	r16,zero,904c <___vfiprintf_internal_r+0x138c>
    8df0:	00bfdfc4 	movi	r2,-129
    8df4:	88a2703a 	and	r17,r17,r2
    8df8:	003db006 	br	84bc <___vfiprintf_internal_r+0x7fc>
    8dfc:	b0c00007 	ldb	r3,0(r22)
    8e00:	003c0c06 	br	7e34 <___vfiprintf_internal_r+0x174>
    8e04:	8880100c 	andi	r2,r17,64
    8e08:	d8001d85 	stb	zero,118(sp)
    8e0c:	1000461e 	bne	r2,zero,8f28 <___vfiprintf_internal_r+0x1268>
    8e10:	d9002217 	ldw	r4,136(sp)
    8e14:	0029883a 	mov	r20,zero
    8e18:	20800104 	addi	r2,r4,4
    8e1c:	24c00017 	ldw	r19,0(r4)
    8e20:	803df80e 	bge	r16,zero,8604 <___vfiprintf_internal_r+0x944>
    8e24:	9d06b03a 	or	r3,r19,r20
    8e28:	d8802215 	stw	r2,136(sp)
    8e2c:	183d5e1e 	bne	r3,zero,83a8 <___vfiprintf_internal_r+0x6e8>
    8e30:	002b883a 	mov	r21,zero
    8e34:	0005883a 	mov	r2,zero
    8e38:	003e1006 	br	867c <___vfiprintf_internal_r+0x9bc>
    8e3c:	8880040c 	andi	r2,r17,16
    8e40:	1000321e 	bne	r2,zero,8f0c <___vfiprintf_internal_r+0x124c>
    8e44:	8c40100c 	andi	r17,r17,64
    8e48:	88008d26 	beq	r17,zero,9080 <___vfiprintf_internal_r+0x13c0>
    8e4c:	d9402217 	ldw	r5,136(sp)
    8e50:	d8c02417 	ldw	r3,144(sp)
    8e54:	28800017 	ldw	r2,0(r5)
    8e58:	29400104 	addi	r5,r5,4
    8e5c:	d9402215 	stw	r5,136(sp)
    8e60:	10c0000d 	sth	r3,0(r2)
    8e64:	003bca06 	br	7d90 <___vfiprintf_internal_r+0xd0>
    8e68:	8880100c 	andi	r2,r17,64
    8e6c:	10003a26 	beq	r2,zero,8f58 <___vfiprintf_internal_r+0x1298>
    8e70:	d8802217 	ldw	r2,136(sp)
    8e74:	14c0000f 	ldh	r19,0(r2)
    8e78:	10800104 	addi	r2,r2,4
    8e7c:	d8802215 	stw	r2,136(sp)
    8e80:	9829d7fa 	srai	r20,r19,31
    8e84:	a005883a 	mov	r2,r20
    8e88:	003d8506 	br	84a0 <___vfiprintf_internal_r+0x7e0>
    8e8c:	8880100c 	andi	r2,r17,64
    8e90:	10002b26 	beq	r2,zero,8f40 <___vfiprintf_internal_r+0x1280>
    8e94:	d8802217 	ldw	r2,136(sp)
    8e98:	0029883a 	mov	r20,zero
    8e9c:	14c0000b 	ldhu	r19,0(r2)
    8ea0:	10800104 	addi	r2,r2,4
    8ea4:	d8802215 	stw	r2,136(sp)
    8ea8:	003d5d06 	br	8420 <___vfiprintf_internal_r+0x760>
    8eac:	d9402017 	ldw	r5,128(sp)
    8eb0:	d9002117 	ldw	r4,132(sp)
    8eb4:	d9801a04 	addi	r6,sp,104
    8eb8:	d8c02a15 	stw	r3,168(sp)
    8ebc:	d9c02b15 	stw	r7,172(sp)
    8ec0:	0007bac0 	call	7bac <__sprint_r.part.0>
    8ec4:	d8c02a17 	ldw	r3,168(sp)
    8ec8:	d9c02b17 	ldw	r7,172(sp)
    8ecc:	103eb41e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8ed0:	d9001b17 	ldw	r4,108(sp)
    8ed4:	d8801c17 	ldw	r2,112(sp)
    8ed8:	d811883a 	mov	r8,sp
    8edc:	21400044 	addi	r5,r4,1
    8ee0:	003e6706 	br	8880 <___vfiprintf_internal_r+0xbc0>
    8ee4:	00bfffc4 	movi	r2,-1
    8ee8:	003c4a06 	br	8014 <___vfiprintf_internal_r+0x354>
    8eec:	9805883a 	mov	r2,r19
    8ef0:	003ee806 	br	8a94 <___vfiprintf_internal_r+0xdd4>
    8ef4:	d8c02217 	ldw	r3,136(sp)
    8ef8:	0029883a 	mov	r20,zero
    8efc:	18800104 	addi	r2,r3,4
    8f00:	1cc0000b 	ldhu	r19,0(r3)
    8f04:	803f9e0e 	bge	r16,zero,8d80 <___vfiprintf_internal_r+0x10c0>
    8f08:	003dd706 	br	8668 <___vfiprintf_internal_r+0x9a8>
    8f0c:	d8c02217 	ldw	r3,136(sp)
    8f10:	d9002417 	ldw	r4,144(sp)
    8f14:	18800017 	ldw	r2,0(r3)
    8f18:	18c00104 	addi	r3,r3,4
    8f1c:	d8c02215 	stw	r3,136(sp)
    8f20:	11000015 	stw	r4,0(r2)
    8f24:	003b9a06 	br	7d90 <___vfiprintf_internal_r+0xd0>
    8f28:	d8c02217 	ldw	r3,136(sp)
    8f2c:	0029883a 	mov	r20,zero
    8f30:	18800104 	addi	r2,r3,4
    8f34:	1cc0000b 	ldhu	r19,0(r3)
    8f38:	803db20e 	bge	r16,zero,8604 <___vfiprintf_internal_r+0x944>
    8f3c:	003fb906 	br	8e24 <___vfiprintf_internal_r+0x1164>
    8f40:	d9002217 	ldw	r4,136(sp)
    8f44:	0029883a 	mov	r20,zero
    8f48:	24c00017 	ldw	r19,0(r4)
    8f4c:	21000104 	addi	r4,r4,4
    8f50:	d9002215 	stw	r4,136(sp)
    8f54:	003d3206 	br	8420 <___vfiprintf_internal_r+0x760>
    8f58:	d8c02217 	ldw	r3,136(sp)
    8f5c:	1cc00017 	ldw	r19,0(r3)
    8f60:	18c00104 	addi	r3,r3,4
    8f64:	d8c02215 	stw	r3,136(sp)
    8f68:	9829d7fa 	srai	r20,r19,31
    8f6c:	a005883a 	mov	r2,r20
    8f70:	003d4b06 	br	84a0 <___vfiprintf_internal_r+0x7e0>
    8f74:	0009883a 	mov	r4,zero
    8f78:	01400044 	movi	r5,1
    8f7c:	d811883a 	mov	r8,sp
    8f80:	003e4f06 	br	88c0 <___vfiprintf_internal_r+0xc00>
    8f84:	d8c02215 	stw	r3,136(sp)
    8f88:	002b883a 	mov	r21,zero
    8f8c:	003db806 	br	8670 <___vfiprintf_internal_r+0x9b0>
    8f90:	d811883a 	mov	r8,sp
    8f94:	003e9606 	br	89f0 <___vfiprintf_internal_r+0xd30>
    8f98:	01010034 	movhi	r4,1024
    8f9c:	21007804 	addi	r4,r4,480
    8fa0:	d9002315 	stw	r4,140(sp)
    8fa4:	003e6306 	br	8934 <___vfiprintf_internal_r+0xc74>
    8fa8:	b0c00043 	ldbu	r3,1(r22)
    8fac:	8c400814 	ori	r17,r17,32
    8fb0:	b5800044 	addi	r22,r22,1
    8fb4:	18c03fcc 	andi	r3,r3,255
    8fb8:	18c0201c 	xori	r3,r3,128
    8fbc:	18ffe004 	addi	r3,r3,-128
    8fc0:	003b9c06 	br	7e34 <___vfiprintf_internal_r+0x174>
    8fc4:	b809883a 	mov	r4,r23
    8fc8:	da002a15 	stw	r8,168(sp)
    8fcc:	00004300 	call	430 <strlen>
    8fd0:	1029883a 	mov	r20,r2
    8fd4:	dd401d83 	ldbu	r21,118(sp)
    8fd8:	df002215 	stw	fp,136(sp)
    8fdc:	0021883a 	mov	r16,zero
    8fe0:	da002a17 	ldw	r8,168(sp)
    8fe4:	003c3906 	br	80cc <___vfiprintf_internal_r+0x40c>
    8fe8:	d9402017 	ldw	r5,128(sp)
    8fec:	d9002117 	ldw	r4,132(sp)
    8ff0:	d9801a04 	addi	r6,sp,104
    8ff4:	0007bac0 	call	7bac <__sprint_r.part.0>
    8ff8:	103e691e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xce0>
    8ffc:	d9001b17 	ldw	r4,108(sp)
    9000:	d8801c17 	ldw	r2,112(sp)
    9004:	d811883a 	mov	r8,sp
    9008:	21400044 	addi	r5,r4,1
    900c:	003e2e06 	br	88c8 <___vfiprintf_internal_r+0xc08>
    9010:	01010034 	movhi	r4,1024
    9014:	21007c04 	addi	r4,r4,496
    9018:	d9002315 	stw	r4,140(sp)
    901c:	d9001b17 	ldw	r4,108(sp)
    9020:	21000044 	addi	r4,r4,1
    9024:	003c5e06 	br	81a0 <___vfiprintf_internal_r+0x4e0>
    9028:	002b883a 	mov	r21,zero
    902c:	00800084 	movi	r2,2
    9030:	10803fcc 	andi	r2,r2,255
    9034:	01000044 	movi	r4,1
    9038:	11002b26 	beq	r2,r4,90e8 <___vfiprintf_internal_r+0x1428>
    903c:	01000084 	movi	r4,2
    9040:	11002b1e 	bne	r2,r4,90f0 <___vfiprintf_internal_r+0x1430>
    9044:	1823883a 	mov	r17,r3
    9048:	003ee506 	br	8be0 <___vfiprintf_internal_r+0xf20>
    904c:	8807883a 	mov	r3,r17
    9050:	00800044 	movi	r2,1
    9054:	003ff606 	br	9030 <___vfiprintf_internal_r+0x1370>
    9058:	00800184 	movi	r2,6
    905c:	1400012e 	bgeu	r2,r16,9064 <___vfiprintf_internal_r+0x13a4>
    9060:	1021883a 	mov	r16,r2
    9064:	8029883a 	mov	r20,r16
    9068:	8027883a 	mov	r19,r16
    906c:	80002216 	blt	r16,zero,90f8 <___vfiprintf_internal_r+0x1438>
    9070:	05c10034 	movhi	r23,1024
    9074:	df002215 	stw	fp,136(sp)
    9078:	bdc01c04 	addi	r23,r23,112
    907c:	003cfb06 	br	846c <___vfiprintf_internal_r+0x7ac>
    9080:	d9002217 	ldw	r4,136(sp)
    9084:	d9402417 	ldw	r5,144(sp)
    9088:	20800017 	ldw	r2,0(r4)
    908c:	21000104 	addi	r4,r4,4
    9090:	d9002215 	stw	r4,136(sp)
    9094:	11400015 	stw	r5,0(r2)
    9098:	003b3d06 	br	7d90 <___vfiprintf_internal_r+0xd0>
    909c:	01410034 	movhi	r5,1024
    90a0:	29407c04 	addi	r5,r5,496
    90a4:	d9402315 	stw	r5,140(sp)
    90a8:	d9401b17 	ldw	r5,108(sp)
    90ac:	29400044 	addi	r5,r5,1
    90b0:	003e6d06 	br	8a68 <___vfiprintf_internal_r+0xda8>
    90b4:	8029883a 	mov	r20,r16
    90b8:	dd401d83 	ldbu	r21,118(sp)
    90bc:	df002215 	stw	fp,136(sp)
    90c0:	0021883a 	mov	r16,zero
    90c4:	003c0106 	br	80cc <___vfiprintf_internal_r+0x40c>
    90c8:	00c10034 	movhi	r3,1024
    90cc:	18c07804 	addi	r3,r3,480
    90d0:	d8c02315 	stw	r3,140(sp)
    90d4:	280d883a 	mov	r6,r5
    90d8:	003c6906 	br	8280 <___vfiprintf_internal_r+0x5c0>
    90dc:	802d883a 	mov	r22,r16
    90e0:	0021883a 	mov	r16,zero
    90e4:	003b5406 	br	7e38 <___vfiprintf_internal_r+0x178>
    90e8:	1823883a 	mov	r17,r3
    90ec:	003cf306 	br	84bc <___vfiprintf_internal_r+0x7fc>
    90f0:	1823883a 	mov	r17,r3
    90f4:	003cad06 	br	83ac <___vfiprintf_internal_r+0x6ec>
    90f8:	0027883a 	mov	r19,zero
    90fc:	003fdc06 	br	9070 <___vfiprintf_internal_r+0x13b0>
    9100:	d9402217 	ldw	r5,136(sp)
    9104:	8005883a 	mov	r2,r16
    9108:	b0c00043 	ldbu	r3,1(r22)
    910c:	2c000017 	ldw	r16,0(r5)
    9110:	29000104 	addi	r4,r5,4
    9114:	d9002215 	stw	r4,136(sp)
    9118:	102d883a 	mov	r22,r2
    911c:	803fa50e 	bge	r16,zero,8fb4 <___vfiprintf_internal_r+0x12f4>
    9120:	18c03fcc 	andi	r3,r3,255
    9124:	18c0201c 	xori	r3,r3,128
    9128:	043fffc4 	movi	r16,-1
    912c:	18ffe004 	addi	r3,r3,-128
    9130:	003b4006 	br	7e34 <___vfiprintf_internal_r+0x174>
    9134:	d9402303 	ldbu	r5,140(sp)
    9138:	d9401d85 	stb	r5,118(sp)
    913c:	003cae06 	br	83f8 <___vfiprintf_internal_r+0x738>
    9140:	d8c02303 	ldbu	r3,140(sp)
    9144:	d8c01d85 	stb	r3,118(sp)
    9148:	003d1406 	br	859c <___vfiprintf_internal_r+0x8dc>
    914c:	d8c02303 	ldbu	r3,140(sp)
    9150:	d8c01d85 	stb	r3,118(sp)
    9154:	003cca06 	br	8480 <___vfiprintf_internal_r+0x7c0>
    9158:	8880004c 	andi	r2,r17,1
    915c:	002b883a 	mov	r21,zero
    9160:	10000526 	beq	r2,zero,9178 <___vfiprintf_internal_r+0x14b8>
    9164:	00800c04 	movi	r2,48
    9168:	d88019c5 	stb	r2,103(sp)
    916c:	dd002817 	ldw	r20,160(sp)
    9170:	ddc019c4 	addi	r23,sp,103
    9174:	003bd506 	br	80cc <___vfiprintf_internal_r+0x40c>
    9178:	0029883a 	mov	r20,zero
    917c:	ddc01a04 	addi	r23,sp,104
    9180:	003bd206 	br	80cc <___vfiprintf_internal_r+0x40c>
    9184:	d9002303 	ldbu	r4,140(sp)
    9188:	d9001d85 	stb	r4,118(sp)
    918c:	003da606 	br	8828 <___vfiprintf_internal_r+0xb68>
    9190:	d8c02303 	ldbu	r3,140(sp)
    9194:	d8c01d85 	stb	r3,118(sp)
    9198:	003c7606 	br	8374 <___vfiprintf_internal_r+0x6b4>
    919c:	d8c02303 	ldbu	r3,140(sp)
    91a0:	d8c01d85 	stb	r3,118(sp)
    91a4:	003c6506 	br	833c <___vfiprintf_internal_r+0x67c>
    91a8:	d9002303 	ldbu	r4,140(sp)
    91ac:	d9001d85 	stb	r4,118(sp)
    91b0:	003d3d06 	br	86a8 <___vfiprintf_internal_r+0x9e8>
    91b4:	d8c02303 	ldbu	r3,140(sp)
    91b8:	d8c01d85 	stb	r3,118(sp)
    91bc:	003d1d06 	br	8634 <___vfiprintf_internal_r+0x974>
    91c0:	d8c02303 	ldbu	r3,140(sp)
    91c4:	d8c01d85 	stb	r3,118(sp)
    91c8:	003d0306 	br	85d8 <___vfiprintf_internal_r+0x918>

000091cc <__vfiprintf_internal>:
    91cc:	00810034 	movhi	r2,1024
    91d0:	10877904 	addi	r2,r2,7652
    91d4:	300f883a 	mov	r7,r6
    91d8:	280d883a 	mov	r6,r5
    91dc:	200b883a 	mov	r5,r4
    91e0:	11000017 	ldw	r4,0(r2)
    91e4:	0007cc01 	jmpi	7cc0 <___vfiprintf_internal_r>

000091e8 <__sbprintf>:
    91e8:	2880030b 	ldhu	r2,12(r5)
    91ec:	2ac01917 	ldw	r11,100(r5)
    91f0:	2a80038b 	ldhu	r10,14(r5)
    91f4:	2a400717 	ldw	r9,28(r5)
    91f8:	2a000917 	ldw	r8,36(r5)
    91fc:	defee204 	addi	sp,sp,-1144
    9200:	00c10004 	movi	r3,1024
    9204:	dc011a15 	stw	r16,1128(sp)
    9208:	10bfff4c 	andi	r2,r2,65533
    920c:	2821883a 	mov	r16,r5
    9210:	d8cb883a 	add	r5,sp,r3
    9214:	dc811c15 	stw	r18,1136(sp)
    9218:	dc411b15 	stw	r17,1132(sp)
    921c:	dfc11d15 	stw	ra,1140(sp)
    9220:	2025883a 	mov	r18,r4
    9224:	d881030d 	sth	r2,1036(sp)
    9228:	dac11915 	stw	r11,1124(sp)
    922c:	da81038d 	sth	r10,1038(sp)
    9230:	da410715 	stw	r9,1052(sp)
    9234:	da010915 	stw	r8,1060(sp)
    9238:	dec10015 	stw	sp,1024(sp)
    923c:	dec10415 	stw	sp,1040(sp)
    9240:	d8c10215 	stw	r3,1032(sp)
    9244:	d8c10515 	stw	r3,1044(sp)
    9248:	d8010615 	stw	zero,1048(sp)
    924c:	0007cc00 	call	7cc0 <___vfiprintf_internal_r>
    9250:	1023883a 	mov	r17,r2
    9254:	10000416 	blt	r2,zero,9268 <__sbprintf+0x80>
    9258:	d9410004 	addi	r5,sp,1024
    925c:	9009883a 	mov	r4,r18
    9260:	000449c0 	call	449c <_fflush_r>
    9264:	10000d1e 	bne	r2,zero,929c <__sbprintf+0xb4>
    9268:	d881030b 	ldhu	r2,1036(sp)
    926c:	1080100c 	andi	r2,r2,64
    9270:	10000326 	beq	r2,zero,9280 <__sbprintf+0x98>
    9274:	8080030b 	ldhu	r2,12(r16)
    9278:	10801014 	ori	r2,r2,64
    927c:	8080030d 	sth	r2,12(r16)
    9280:	8805883a 	mov	r2,r17
    9284:	dfc11d17 	ldw	ra,1140(sp)
    9288:	dc811c17 	ldw	r18,1136(sp)
    928c:	dc411b17 	ldw	r17,1132(sp)
    9290:	dc011a17 	ldw	r16,1128(sp)
    9294:	dec11e04 	addi	sp,sp,1144
    9298:	f800283a 	ret
    929c:	047fffc4 	movi	r17,-1
    92a0:	003ff106 	br	9268 <__sbprintf+0x80>

000092a4 <_write_r>:
    92a4:	defffd04 	addi	sp,sp,-12
    92a8:	2805883a 	mov	r2,r5
    92ac:	dc000015 	stw	r16,0(sp)
    92b0:	04010034 	movhi	r16,1024
    92b4:	dc400115 	stw	r17,4(sp)
    92b8:	300b883a 	mov	r5,r6
    92bc:	84078e04 	addi	r16,r16,7736
    92c0:	2023883a 	mov	r17,r4
    92c4:	380d883a 	mov	r6,r7
    92c8:	1009883a 	mov	r4,r2
    92cc:	dfc00215 	stw	ra,8(sp)
    92d0:	80000015 	stw	zero,0(r16)
    92d4:	000dac40 	call	dac4 <write>
    92d8:	00ffffc4 	movi	r3,-1
    92dc:	10c00526 	beq	r2,r3,92f4 <_write_r+0x50>
    92e0:	dfc00217 	ldw	ra,8(sp)
    92e4:	dc400117 	ldw	r17,4(sp)
    92e8:	dc000017 	ldw	r16,0(sp)
    92ec:	dec00304 	addi	sp,sp,12
    92f0:	f800283a 	ret
    92f4:	80c00017 	ldw	r3,0(r16)
    92f8:	183ff926 	beq	r3,zero,92e0 <_write_r+0x3c>
    92fc:	88c00015 	stw	r3,0(r17)
    9300:	003ff706 	br	92e0 <_write_r+0x3c>

00009304 <_close_r>:
    9304:	defffd04 	addi	sp,sp,-12
    9308:	dc000015 	stw	r16,0(sp)
    930c:	04010034 	movhi	r16,1024
    9310:	dc400115 	stw	r17,4(sp)
    9314:	84078e04 	addi	r16,r16,7736
    9318:	2023883a 	mov	r17,r4
    931c:	2809883a 	mov	r4,r5
    9320:	dfc00215 	stw	ra,8(sp)
    9324:	80000015 	stw	zero,0(r16)
    9328:	000d26c0 	call	d26c <close>
    932c:	00ffffc4 	movi	r3,-1
    9330:	10c00526 	beq	r2,r3,9348 <_close_r+0x44>
    9334:	dfc00217 	ldw	ra,8(sp)
    9338:	dc400117 	ldw	r17,4(sp)
    933c:	dc000017 	ldw	r16,0(sp)
    9340:	dec00304 	addi	sp,sp,12
    9344:	f800283a 	ret
    9348:	80c00017 	ldw	r3,0(r16)
    934c:	183ff926 	beq	r3,zero,9334 <_close_r+0x30>
    9350:	88c00015 	stw	r3,0(r17)
    9354:	003ff706 	br	9334 <_close_r+0x30>

00009358 <_calloc_r>:
    9358:	defffe04 	addi	sp,sp,-8
    935c:	2805883a 	mov	r2,r5
    9360:	dc000015 	stw	r16,0(sp)
    9364:	300b883a 	mov	r5,r6
    9368:	2021883a 	mov	r16,r4
    936c:	1009883a 	mov	r4,r2
    9370:	dfc00115 	stw	ra,4(sp)
    9374:	000a9640 	call	a964 <__mulsi3>
    9378:	100b883a 	mov	r5,r2
    937c:	8009883a 	mov	r4,r16
    9380:	00055f40 	call	55f4 <_malloc_r>
    9384:	10002926 	beq	r2,zero,942c <_calloc_r+0xd4>
    9388:	11bfff17 	ldw	r6,-4(r2)
    938c:	1021883a 	mov	r16,r2
    9390:	00bfff04 	movi	r2,-4
    9394:	308c703a 	and	r6,r6,r2
    9398:	00c00904 	movi	r3,36
    939c:	308d883a 	add	r6,r6,r2
    93a0:	19801636 	bltu	r3,r6,93fc <_calloc_r+0xa4>
    93a4:	008004c4 	movi	r2,19
    93a8:	11800b2e 	bgeu	r2,r6,93d8 <_calloc_r+0x80>
    93ac:	80000015 	stw	zero,0(r16)
    93b0:	80000115 	stw	zero,4(r16)
    93b4:	008006c4 	movi	r2,27
    93b8:	11801a2e 	bgeu	r2,r6,9424 <_calloc_r+0xcc>
    93bc:	80000215 	stw	zero,8(r16)
    93c0:	80000315 	stw	zero,12(r16)
    93c4:	30c0151e 	bne	r6,r3,941c <_calloc_r+0xc4>
    93c8:	80000415 	stw	zero,16(r16)
    93cc:	80800604 	addi	r2,r16,24
    93d0:	80000515 	stw	zero,20(r16)
    93d4:	00000106 	br	93dc <_calloc_r+0x84>
    93d8:	8005883a 	mov	r2,r16
    93dc:	10000015 	stw	zero,0(r2)
    93e0:	10000115 	stw	zero,4(r2)
    93e4:	10000215 	stw	zero,8(r2)
    93e8:	8005883a 	mov	r2,r16
    93ec:	dfc00117 	ldw	ra,4(sp)
    93f0:	dc000017 	ldw	r16,0(sp)
    93f4:	dec00204 	addi	sp,sp,8
    93f8:	f800283a 	ret
    93fc:	000b883a 	mov	r5,zero
    9400:	8009883a 	mov	r4,r16
    9404:	00061880 	call	6188 <memset>
    9408:	8005883a 	mov	r2,r16
    940c:	dfc00117 	ldw	ra,4(sp)
    9410:	dc000017 	ldw	r16,0(sp)
    9414:	dec00204 	addi	sp,sp,8
    9418:	f800283a 	ret
    941c:	80800404 	addi	r2,r16,16
    9420:	003fee06 	br	93dc <_calloc_r+0x84>
    9424:	80800204 	addi	r2,r16,8
    9428:	003fec06 	br	93dc <_calloc_r+0x84>
    942c:	0005883a 	mov	r2,zero
    9430:	003fee06 	br	93ec <_calloc_r+0x94>

00009434 <_fclose_r>:
    9434:	28003926 	beq	r5,zero,951c <_fclose_r+0xe8>
    9438:	defffc04 	addi	sp,sp,-16
    943c:	dc400115 	stw	r17,4(sp)
    9440:	dc000015 	stw	r16,0(sp)
    9444:	dfc00315 	stw	ra,12(sp)
    9448:	dc800215 	stw	r18,8(sp)
    944c:	2023883a 	mov	r17,r4
    9450:	2821883a 	mov	r16,r5
    9454:	20000226 	beq	r4,zero,9460 <_fclose_r+0x2c>
    9458:	20800e17 	ldw	r2,56(r4)
    945c:	10002726 	beq	r2,zero,94fc <_fclose_r+0xc8>
    9460:	8080030f 	ldh	r2,12(r16)
    9464:	1000071e 	bne	r2,zero,9484 <_fclose_r+0x50>
    9468:	0005883a 	mov	r2,zero
    946c:	dfc00317 	ldw	ra,12(sp)
    9470:	dc800217 	ldw	r18,8(sp)
    9474:	dc400117 	ldw	r17,4(sp)
    9478:	dc000017 	ldw	r16,0(sp)
    947c:	dec00404 	addi	sp,sp,16
    9480:	f800283a 	ret
    9484:	800b883a 	mov	r5,r16
    9488:	8809883a 	mov	r4,r17
    948c:	00042800 	call	4280 <__sflush_r>
    9490:	1025883a 	mov	r18,r2
    9494:	80800b17 	ldw	r2,44(r16)
    9498:	10000426 	beq	r2,zero,94ac <_fclose_r+0x78>
    949c:	81400717 	ldw	r5,28(r16)
    94a0:	8809883a 	mov	r4,r17
    94a4:	103ee83a 	callr	r2
    94a8:	10001616 	blt	r2,zero,9504 <_fclose_r+0xd0>
    94ac:	8080030b 	ldhu	r2,12(r16)
    94b0:	1080200c 	andi	r2,r2,128
    94b4:	1000151e 	bne	r2,zero,950c <_fclose_r+0xd8>
    94b8:	81400c17 	ldw	r5,48(r16)
    94bc:	28000526 	beq	r5,zero,94d4 <_fclose_r+0xa0>
    94c0:	80801004 	addi	r2,r16,64
    94c4:	28800226 	beq	r5,r2,94d0 <_fclose_r+0x9c>
    94c8:	8809883a 	mov	r4,r17
    94cc:	00049fc0 	call	49fc <_free_r>
    94d0:	80000c15 	stw	zero,48(r16)
    94d4:	81401117 	ldw	r5,68(r16)
    94d8:	28000326 	beq	r5,zero,94e8 <_fclose_r+0xb4>
    94dc:	8809883a 	mov	r4,r17
    94e0:	00049fc0 	call	49fc <_free_r>
    94e4:	80001115 	stw	zero,68(r16)
    94e8:	00048980 	call	4898 <__sfp_lock_acquire>
    94ec:	8000030d 	sth	zero,12(r16)
    94f0:	000489c0 	call	489c <__sfp_lock_release>
    94f4:	9005883a 	mov	r2,r18
    94f8:	003fdc06 	br	946c <_fclose_r+0x38>
    94fc:	00048880 	call	4888 <__sinit>
    9500:	003fd706 	br	9460 <_fclose_r+0x2c>
    9504:	04bfffc4 	movi	r18,-1
    9508:	003fe806 	br	94ac <_fclose_r+0x78>
    950c:	81400417 	ldw	r5,16(r16)
    9510:	8809883a 	mov	r4,r17
    9514:	00049fc0 	call	49fc <_free_r>
    9518:	003fe706 	br	94b8 <_fclose_r+0x84>
    951c:	0005883a 	mov	r2,zero
    9520:	f800283a 	ret

00009524 <fclose>:
    9524:	00810034 	movhi	r2,1024
    9528:	10877904 	addi	r2,r2,7652
    952c:	200b883a 	mov	r5,r4
    9530:	11000017 	ldw	r4,0(r2)
    9534:	00094341 	jmpi	9434 <_fclose_r>

00009538 <__fputwc>:
    9538:	defff804 	addi	sp,sp,-32
    953c:	dcc00415 	stw	r19,16(sp)
    9540:	dc800315 	stw	r18,12(sp)
    9544:	dc000115 	stw	r16,4(sp)
    9548:	dfc00715 	stw	ra,28(sp)
    954c:	dd400615 	stw	r21,24(sp)
    9550:	dd000515 	stw	r20,20(sp)
    9554:	dc400215 	stw	r17,8(sp)
    9558:	2027883a 	mov	r19,r4
    955c:	2825883a 	mov	r18,r5
    9560:	3021883a 	mov	r16,r6
    9564:	00053e40 	call	53e4 <__locale_mb_cur_max>
    9568:	00c00044 	movi	r3,1
    956c:	10c03e26 	beq	r2,r3,9668 <__fputwc+0x130>
    9570:	81c01704 	addi	r7,r16,92
    9574:	900d883a 	mov	r6,r18
    9578:	d80b883a 	mov	r5,sp
    957c:	9809883a 	mov	r4,r19
    9580:	0009a080 	call	9a08 <_wcrtomb_r>
    9584:	1029883a 	mov	r20,r2
    9588:	00bfffc4 	movi	r2,-1
    958c:	a0802026 	beq	r20,r2,9610 <__fputwc+0xd8>
    9590:	d9400003 	ldbu	r5,0(sp)
    9594:	a0001c26 	beq	r20,zero,9608 <__fputwc+0xd0>
    9598:	0023883a 	mov	r17,zero
    959c:	05400284 	movi	r21,10
    95a0:	00000906 	br	95c8 <__fputwc+0x90>
    95a4:	80800017 	ldw	r2,0(r16)
    95a8:	11400005 	stb	r5,0(r2)
    95ac:	80c00017 	ldw	r3,0(r16)
    95b0:	18c00044 	addi	r3,r3,1
    95b4:	80c00015 	stw	r3,0(r16)
    95b8:	8c400044 	addi	r17,r17,1
    95bc:	dc45883a 	add	r2,sp,r17
    95c0:	8d00112e 	bgeu	r17,r20,9608 <__fputwc+0xd0>
    95c4:	11400003 	ldbu	r5,0(r2)
    95c8:	80c00217 	ldw	r3,8(r16)
    95cc:	18ffffc4 	addi	r3,r3,-1
    95d0:	80c00215 	stw	r3,8(r16)
    95d4:	183ff30e 	bge	r3,zero,95a4 <__fputwc+0x6c>
    95d8:	80800617 	ldw	r2,24(r16)
    95dc:	18801916 	blt	r3,r2,9644 <__fputwc+0x10c>
    95e0:	80800017 	ldw	r2,0(r16)
    95e4:	11400005 	stb	r5,0(r2)
    95e8:	80800017 	ldw	r2,0(r16)
    95ec:	10c00003 	ldbu	r3,0(r2)
    95f0:	10800044 	addi	r2,r2,1
    95f4:	1d402326 	beq	r3,r21,9684 <__fputwc+0x14c>
    95f8:	80800015 	stw	r2,0(r16)
    95fc:	8c400044 	addi	r17,r17,1
    9600:	dc45883a 	add	r2,sp,r17
    9604:	8d3fef36 	bltu	r17,r20,95c4 <__fputwc+0x8c>
    9608:	9005883a 	mov	r2,r18
    960c:	00000406 	br	9620 <__fputwc+0xe8>
    9610:	80c0030b 	ldhu	r3,12(r16)
    9614:	a005883a 	mov	r2,r20
    9618:	18c01014 	ori	r3,r3,64
    961c:	80c0030d 	sth	r3,12(r16)
    9620:	dfc00717 	ldw	ra,28(sp)
    9624:	dd400617 	ldw	r21,24(sp)
    9628:	dd000517 	ldw	r20,20(sp)
    962c:	dcc00417 	ldw	r19,16(sp)
    9630:	dc800317 	ldw	r18,12(sp)
    9634:	dc400217 	ldw	r17,8(sp)
    9638:	dc000117 	ldw	r16,4(sp)
    963c:	dec00804 	addi	sp,sp,32
    9640:	f800283a 	ret
    9644:	800d883a 	mov	r6,r16
    9648:	29403fcc 	andi	r5,r5,255
    964c:	9809883a 	mov	r4,r19
    9650:	00098b00 	call	98b0 <__swbuf_r>
    9654:	10bfffe0 	cmpeqi	r2,r2,-1
    9658:	10803fcc 	andi	r2,r2,255
    965c:	103fd626 	beq	r2,zero,95b8 <__fputwc+0x80>
    9660:	00bfffc4 	movi	r2,-1
    9664:	003fee06 	br	9620 <__fputwc+0xe8>
    9668:	90ffffc4 	addi	r3,r18,-1
    966c:	01003f84 	movi	r4,254
    9670:	20ffbf36 	bltu	r4,r3,9570 <__fputwc+0x38>
    9674:	900b883a 	mov	r5,r18
    9678:	dc800005 	stb	r18,0(sp)
    967c:	1029883a 	mov	r20,r2
    9680:	003fc506 	br	9598 <__fputwc+0x60>
    9684:	800d883a 	mov	r6,r16
    9688:	a80b883a 	mov	r5,r21
    968c:	9809883a 	mov	r4,r19
    9690:	00098b00 	call	98b0 <__swbuf_r>
    9694:	10bfffe0 	cmpeqi	r2,r2,-1
    9698:	003fef06 	br	9658 <__fputwc+0x120>

0000969c <_fputwc_r>:
    969c:	3080030b 	ldhu	r2,12(r6)
    96a0:	10c8000c 	andi	r3,r2,8192
    96a4:	1800051e 	bne	r3,zero,96bc <_fputwc_r+0x20>
    96a8:	30c01917 	ldw	r3,100(r6)
    96ac:	10880014 	ori	r2,r2,8192
    96b0:	3080030d 	sth	r2,12(r6)
    96b4:	18880014 	ori	r2,r3,8192
    96b8:	30801915 	stw	r2,100(r6)
    96bc:	00095381 	jmpi	9538 <__fputwc>

000096c0 <fputwc>:
    96c0:	00810034 	movhi	r2,1024
    96c4:	defffc04 	addi	sp,sp,-16
    96c8:	10877904 	addi	r2,r2,7652
    96cc:	dc000115 	stw	r16,4(sp)
    96d0:	14000017 	ldw	r16,0(r2)
    96d4:	dc400215 	stw	r17,8(sp)
    96d8:	dfc00315 	stw	ra,12(sp)
    96dc:	2023883a 	mov	r17,r4
    96e0:	80000226 	beq	r16,zero,96ec <fputwc+0x2c>
    96e4:	80800e17 	ldw	r2,56(r16)
    96e8:	10001026 	beq	r2,zero,972c <fputwc+0x6c>
    96ec:	2880030b 	ldhu	r2,12(r5)
    96f0:	10c8000c 	andi	r3,r2,8192
    96f4:	1800051e 	bne	r3,zero,970c <fputwc+0x4c>
    96f8:	28c01917 	ldw	r3,100(r5)
    96fc:	10880014 	ori	r2,r2,8192
    9700:	2880030d 	sth	r2,12(r5)
    9704:	18880014 	ori	r2,r3,8192
    9708:	28801915 	stw	r2,100(r5)
    970c:	280d883a 	mov	r6,r5
    9710:	8009883a 	mov	r4,r16
    9714:	880b883a 	mov	r5,r17
    9718:	dfc00317 	ldw	ra,12(sp)
    971c:	dc400217 	ldw	r17,8(sp)
    9720:	dc000117 	ldw	r16,4(sp)
    9724:	dec00404 	addi	sp,sp,16
    9728:	00095381 	jmpi	9538 <__fputwc>
    972c:	8009883a 	mov	r4,r16
    9730:	d9400015 	stw	r5,0(sp)
    9734:	00048880 	call	4888 <__sinit>
    9738:	d9400017 	ldw	r5,0(sp)
    973c:	003feb06 	br	96ec <fputwc+0x2c>

00009740 <_fstat_r>:
    9740:	defffd04 	addi	sp,sp,-12
    9744:	2805883a 	mov	r2,r5
    9748:	dc000015 	stw	r16,0(sp)
    974c:	04010034 	movhi	r16,1024
    9750:	dc400115 	stw	r17,4(sp)
    9754:	84078e04 	addi	r16,r16,7736
    9758:	2023883a 	mov	r17,r4
    975c:	300b883a 	mov	r5,r6
    9760:	1009883a 	mov	r4,r2
    9764:	dfc00215 	stw	ra,8(sp)
    9768:	80000015 	stw	zero,0(r16)
    976c:	000d3ac0 	call	d3ac <fstat>
    9770:	00ffffc4 	movi	r3,-1
    9774:	10c00526 	beq	r2,r3,978c <_fstat_r+0x4c>
    9778:	dfc00217 	ldw	ra,8(sp)
    977c:	dc400117 	ldw	r17,4(sp)
    9780:	dc000017 	ldw	r16,0(sp)
    9784:	dec00304 	addi	sp,sp,12
    9788:	f800283a 	ret
    978c:	80c00017 	ldw	r3,0(r16)
    9790:	183ff926 	beq	r3,zero,9778 <_fstat_r+0x38>
    9794:	88c00015 	stw	r3,0(r17)
    9798:	003ff706 	br	9778 <_fstat_r+0x38>

0000979c <_isatty_r>:
    979c:	defffd04 	addi	sp,sp,-12
    97a0:	dc000015 	stw	r16,0(sp)
    97a4:	04010034 	movhi	r16,1024
    97a8:	dc400115 	stw	r17,4(sp)
    97ac:	84078e04 	addi	r16,r16,7736
    97b0:	2023883a 	mov	r17,r4
    97b4:	2809883a 	mov	r4,r5
    97b8:	dfc00215 	stw	ra,8(sp)
    97bc:	80000015 	stw	zero,0(r16)
    97c0:	000d4a00 	call	d4a0 <isatty>
    97c4:	00ffffc4 	movi	r3,-1
    97c8:	10c00526 	beq	r2,r3,97e0 <_isatty_r+0x44>
    97cc:	dfc00217 	ldw	ra,8(sp)
    97d0:	dc400117 	ldw	r17,4(sp)
    97d4:	dc000017 	ldw	r16,0(sp)
    97d8:	dec00304 	addi	sp,sp,12
    97dc:	f800283a 	ret
    97e0:	80c00017 	ldw	r3,0(r16)
    97e4:	183ff926 	beq	r3,zero,97cc <_isatty_r+0x30>
    97e8:	88c00015 	stw	r3,0(r17)
    97ec:	003ff706 	br	97cc <_isatty_r+0x30>

000097f0 <_lseek_r>:
    97f0:	defffd04 	addi	sp,sp,-12
    97f4:	2805883a 	mov	r2,r5
    97f8:	dc000015 	stw	r16,0(sp)
    97fc:	04010034 	movhi	r16,1024
    9800:	dc400115 	stw	r17,4(sp)
    9804:	300b883a 	mov	r5,r6
    9808:	84078e04 	addi	r16,r16,7736
    980c:	2023883a 	mov	r17,r4
    9810:	380d883a 	mov	r6,r7
    9814:	1009883a 	mov	r4,r2
    9818:	dfc00215 	stw	ra,8(sp)
    981c:	80000015 	stw	zero,0(r16)
    9820:	000d6740 	call	d674 <lseek>
    9824:	00ffffc4 	movi	r3,-1
    9828:	10c00526 	beq	r2,r3,9840 <_lseek_r+0x50>
    982c:	dfc00217 	ldw	ra,8(sp)
    9830:	dc400117 	ldw	r17,4(sp)
    9834:	dc000017 	ldw	r16,0(sp)
    9838:	dec00304 	addi	sp,sp,12
    983c:	f800283a 	ret
    9840:	80c00017 	ldw	r3,0(r16)
    9844:	183ff926 	beq	r3,zero,982c <_lseek_r+0x3c>
    9848:	88c00015 	stw	r3,0(r17)
    984c:	003ff706 	br	982c <_lseek_r+0x3c>

00009850 <_read_r>:
    9850:	defffd04 	addi	sp,sp,-12
    9854:	2805883a 	mov	r2,r5
    9858:	dc000015 	stw	r16,0(sp)
    985c:	04010034 	movhi	r16,1024
    9860:	dc400115 	stw	r17,4(sp)
    9864:	300b883a 	mov	r5,r6
    9868:	84078e04 	addi	r16,r16,7736
    986c:	2023883a 	mov	r17,r4
    9870:	380d883a 	mov	r6,r7
    9874:	1009883a 	mov	r4,r2
    9878:	dfc00215 	stw	ra,8(sp)
    987c:	80000015 	stw	zero,0(r16)
    9880:	000d8500 	call	d850 <read>
    9884:	00ffffc4 	movi	r3,-1
    9888:	10c00526 	beq	r2,r3,98a0 <_read_r+0x50>
    988c:	dfc00217 	ldw	ra,8(sp)
    9890:	dc400117 	ldw	r17,4(sp)
    9894:	dc000017 	ldw	r16,0(sp)
    9898:	dec00304 	addi	sp,sp,12
    989c:	f800283a 	ret
    98a0:	80c00017 	ldw	r3,0(r16)
    98a4:	183ff926 	beq	r3,zero,988c <_read_r+0x3c>
    98a8:	88c00015 	stw	r3,0(r17)
    98ac:	003ff706 	br	988c <_read_r+0x3c>

000098b0 <__swbuf_r>:
    98b0:	defffb04 	addi	sp,sp,-20
    98b4:	dcc00315 	stw	r19,12(sp)
    98b8:	dc800215 	stw	r18,8(sp)
    98bc:	dc000015 	stw	r16,0(sp)
    98c0:	dfc00415 	stw	ra,16(sp)
    98c4:	dc400115 	stw	r17,4(sp)
    98c8:	2025883a 	mov	r18,r4
    98cc:	2827883a 	mov	r19,r5
    98d0:	3021883a 	mov	r16,r6
    98d4:	20000226 	beq	r4,zero,98e0 <__swbuf_r+0x30>
    98d8:	20800e17 	ldw	r2,56(r4)
    98dc:	10004226 	beq	r2,zero,99e8 <__swbuf_r+0x138>
    98e0:	80800617 	ldw	r2,24(r16)
    98e4:	8100030b 	ldhu	r4,12(r16)
    98e8:	80800215 	stw	r2,8(r16)
    98ec:	2080020c 	andi	r2,r4,8
    98f0:	10003626 	beq	r2,zero,99cc <__swbuf_r+0x11c>
    98f4:	80c00417 	ldw	r3,16(r16)
    98f8:	18003426 	beq	r3,zero,99cc <__swbuf_r+0x11c>
    98fc:	2088000c 	andi	r2,r4,8192
    9900:	9c403fcc 	andi	r17,r19,255
    9904:	10001a26 	beq	r2,zero,9970 <__swbuf_r+0xc0>
    9908:	80800017 	ldw	r2,0(r16)
    990c:	81000517 	ldw	r4,20(r16)
    9910:	10c7c83a 	sub	r3,r2,r3
    9914:	1900200e 	bge	r3,r4,9998 <__swbuf_r+0xe8>
    9918:	18c00044 	addi	r3,r3,1
    991c:	81000217 	ldw	r4,8(r16)
    9920:	11400044 	addi	r5,r2,1
    9924:	81400015 	stw	r5,0(r16)
    9928:	213fffc4 	addi	r4,r4,-1
    992c:	81000215 	stw	r4,8(r16)
    9930:	14c00005 	stb	r19,0(r2)
    9934:	80800517 	ldw	r2,20(r16)
    9938:	10c01e26 	beq	r2,r3,99b4 <__swbuf_r+0x104>
    993c:	8080030b 	ldhu	r2,12(r16)
    9940:	1080004c 	andi	r2,r2,1
    9944:	10000226 	beq	r2,zero,9950 <__swbuf_r+0xa0>
    9948:	00800284 	movi	r2,10
    994c:	88801926 	beq	r17,r2,99b4 <__swbuf_r+0x104>
    9950:	8805883a 	mov	r2,r17
    9954:	dfc00417 	ldw	ra,16(sp)
    9958:	dcc00317 	ldw	r19,12(sp)
    995c:	dc800217 	ldw	r18,8(sp)
    9960:	dc400117 	ldw	r17,4(sp)
    9964:	dc000017 	ldw	r16,0(sp)
    9968:	dec00504 	addi	sp,sp,20
    996c:	f800283a 	ret
    9970:	81401917 	ldw	r5,100(r16)
    9974:	00b7ffc4 	movi	r2,-8193
    9978:	21080014 	ori	r4,r4,8192
    997c:	2884703a 	and	r2,r5,r2
    9980:	80801915 	stw	r2,100(r16)
    9984:	80800017 	ldw	r2,0(r16)
    9988:	8100030d 	sth	r4,12(r16)
    998c:	81000517 	ldw	r4,20(r16)
    9990:	10c7c83a 	sub	r3,r2,r3
    9994:	193fe016 	blt	r3,r4,9918 <__swbuf_r+0x68>
    9998:	800b883a 	mov	r5,r16
    999c:	9009883a 	mov	r4,r18
    99a0:	000449c0 	call	449c <_fflush_r>
    99a4:	1000071e 	bne	r2,zero,99c4 <__swbuf_r+0x114>
    99a8:	80800017 	ldw	r2,0(r16)
    99ac:	00c00044 	movi	r3,1
    99b0:	003fda06 	br	991c <__swbuf_r+0x6c>
    99b4:	800b883a 	mov	r5,r16
    99b8:	9009883a 	mov	r4,r18
    99bc:	000449c0 	call	449c <_fflush_r>
    99c0:	103fe326 	beq	r2,zero,9950 <__swbuf_r+0xa0>
    99c4:	00bfffc4 	movi	r2,-1
    99c8:	003fe206 	br	9954 <__swbuf_r+0xa4>
    99cc:	800b883a 	mov	r5,r16
    99d0:	9009883a 	mov	r4,r18
    99d4:	000287c0 	call	287c <__swsetup_r>
    99d8:	103ffa1e 	bne	r2,zero,99c4 <__swbuf_r+0x114>
    99dc:	8100030b 	ldhu	r4,12(r16)
    99e0:	80c00417 	ldw	r3,16(r16)
    99e4:	003fc506 	br	98fc <__swbuf_r+0x4c>
    99e8:	00048880 	call	4888 <__sinit>
    99ec:	003fbc06 	br	98e0 <__swbuf_r+0x30>

000099f0 <__swbuf>:
    99f0:	00810034 	movhi	r2,1024
    99f4:	10877904 	addi	r2,r2,7652
    99f8:	280d883a 	mov	r6,r5
    99fc:	200b883a 	mov	r5,r4
    9a00:	11000017 	ldw	r4,0(r2)
    9a04:	00098b01 	jmpi	98b0 <__swbuf_r>

00009a08 <_wcrtomb_r>:
    9a08:	defff604 	addi	sp,sp,-40
    9a0c:	00810034 	movhi	r2,1024
    9a10:	dc800815 	stw	r18,32(sp)
    9a14:	dc400715 	stw	r17,28(sp)
    9a18:	dc000615 	stw	r16,24(sp)
    9a1c:	10877d04 	addi	r2,r2,7668
    9a20:	dfc00915 	stw	ra,36(sp)
    9a24:	2021883a 	mov	r16,r4
    9a28:	3823883a 	mov	r17,r7
    9a2c:	14800017 	ldw	r18,0(r2)
    9a30:	28001426 	beq	r5,zero,9a84 <_wcrtomb_r+0x7c>
    9a34:	d9400415 	stw	r5,16(sp)
    9a38:	d9800515 	stw	r6,20(sp)
    9a3c:	00053d80 	call	53d8 <__locale_charset>
    9a40:	d9800517 	ldw	r6,20(sp)
    9a44:	d9400417 	ldw	r5,16(sp)
    9a48:	100f883a 	mov	r7,r2
    9a4c:	dc400015 	stw	r17,0(sp)
    9a50:	8009883a 	mov	r4,r16
    9a54:	903ee83a 	callr	r18
    9a58:	00ffffc4 	movi	r3,-1
    9a5c:	10c0031e 	bne	r2,r3,9a6c <_wcrtomb_r+0x64>
    9a60:	88000015 	stw	zero,0(r17)
    9a64:	00c02284 	movi	r3,138
    9a68:	80c00015 	stw	r3,0(r16)
    9a6c:	dfc00917 	ldw	ra,36(sp)
    9a70:	dc800817 	ldw	r18,32(sp)
    9a74:	dc400717 	ldw	r17,28(sp)
    9a78:	dc000617 	ldw	r16,24(sp)
    9a7c:	dec00a04 	addi	sp,sp,40
    9a80:	f800283a 	ret
    9a84:	00053d80 	call	53d8 <__locale_charset>
    9a88:	100f883a 	mov	r7,r2
    9a8c:	dc400015 	stw	r17,0(sp)
    9a90:	000d883a 	mov	r6,zero
    9a94:	d9400104 	addi	r5,sp,4
    9a98:	8009883a 	mov	r4,r16
    9a9c:	903ee83a 	callr	r18
    9aa0:	003fed06 	br	9a58 <_wcrtomb_r+0x50>

00009aa4 <wcrtomb>:
    9aa4:	defff604 	addi	sp,sp,-40
    9aa8:	00810034 	movhi	r2,1024
    9aac:	dc800615 	stw	r18,24(sp)
    9ab0:	dc400515 	stw	r17,20(sp)
    9ab4:	10877904 	addi	r2,r2,7652
    9ab8:	dfc00915 	stw	ra,36(sp)
    9abc:	dd000815 	stw	r20,32(sp)
    9ac0:	dcc00715 	stw	r19,28(sp)
    9ac4:	dc000415 	stw	r16,16(sp)
    9ac8:	3025883a 	mov	r18,r6
    9acc:	14400017 	ldw	r17,0(r2)
    9ad0:	20001926 	beq	r4,zero,9b38 <wcrtomb+0x94>
    9ad4:	00810034 	movhi	r2,1024
    9ad8:	10877d04 	addi	r2,r2,7668
    9adc:	15000017 	ldw	r20,0(r2)
    9ae0:	2021883a 	mov	r16,r4
    9ae4:	2827883a 	mov	r19,r5
    9ae8:	00053d80 	call	53d8 <__locale_charset>
    9aec:	100f883a 	mov	r7,r2
    9af0:	dc800015 	stw	r18,0(sp)
    9af4:	980d883a 	mov	r6,r19
    9af8:	800b883a 	mov	r5,r16
    9afc:	8809883a 	mov	r4,r17
    9b00:	a03ee83a 	callr	r20
    9b04:	00ffffc4 	movi	r3,-1
    9b08:	10c0031e 	bne	r2,r3,9b18 <wcrtomb+0x74>
    9b0c:	90000015 	stw	zero,0(r18)
    9b10:	00c02284 	movi	r3,138
    9b14:	88c00015 	stw	r3,0(r17)
    9b18:	dfc00917 	ldw	ra,36(sp)
    9b1c:	dd000817 	ldw	r20,32(sp)
    9b20:	dcc00717 	ldw	r19,28(sp)
    9b24:	dc800617 	ldw	r18,24(sp)
    9b28:	dc400517 	ldw	r17,20(sp)
    9b2c:	dc000417 	ldw	r16,16(sp)
    9b30:	dec00a04 	addi	sp,sp,40
    9b34:	f800283a 	ret
    9b38:	00810034 	movhi	r2,1024
    9b3c:	10877d04 	addi	r2,r2,7668
    9b40:	14000017 	ldw	r16,0(r2)
    9b44:	00053d80 	call	53d8 <__locale_charset>
    9b48:	100f883a 	mov	r7,r2
    9b4c:	dc800015 	stw	r18,0(sp)
    9b50:	000d883a 	mov	r6,zero
    9b54:	d9400104 	addi	r5,sp,4
    9b58:	8809883a 	mov	r4,r17
    9b5c:	803ee83a 	callr	r16
    9b60:	003fe806 	br	9b04 <wcrtomb+0x60>

00009b64 <__ascii_wctomb>:
    9b64:	28000526 	beq	r5,zero,9b7c <__ascii_wctomb+0x18>
    9b68:	00803fc4 	movi	r2,255
    9b6c:	11800536 	bltu	r2,r6,9b84 <__ascii_wctomb+0x20>
    9b70:	29800005 	stb	r6,0(r5)
    9b74:	00800044 	movi	r2,1
    9b78:	f800283a 	ret
    9b7c:	0005883a 	mov	r2,zero
    9b80:	f800283a 	ret
    9b84:	00802284 	movi	r2,138
    9b88:	20800015 	stw	r2,0(r4)
    9b8c:	00bfffc4 	movi	r2,-1
    9b90:	f800283a 	ret

00009b94 <_wctomb_r>:
    9b94:	00810034 	movhi	r2,1024
    9b98:	defff904 	addi	sp,sp,-28
    9b9c:	10877d04 	addi	r2,r2,7668
    9ba0:	dfc00615 	stw	ra,24(sp)
    9ba4:	dc400515 	stw	r17,20(sp)
    9ba8:	dc000415 	stw	r16,16(sp)
    9bac:	3823883a 	mov	r17,r7
    9bb0:	14000017 	ldw	r16,0(r2)
    9bb4:	d9000115 	stw	r4,4(sp)
    9bb8:	d9400215 	stw	r5,8(sp)
    9bbc:	d9800315 	stw	r6,12(sp)
    9bc0:	00053d80 	call	53d8 <__locale_charset>
    9bc4:	d9800317 	ldw	r6,12(sp)
    9bc8:	d9400217 	ldw	r5,8(sp)
    9bcc:	d9000117 	ldw	r4,4(sp)
    9bd0:	100f883a 	mov	r7,r2
    9bd4:	dc400015 	stw	r17,0(sp)
    9bd8:	803ee83a 	callr	r16
    9bdc:	dfc00617 	ldw	ra,24(sp)
    9be0:	dc400517 	ldw	r17,20(sp)
    9be4:	dc000417 	ldw	r16,16(sp)
    9be8:	dec00704 	addi	sp,sp,28
    9bec:	f800283a 	ret

00009bf0 <__udivdi3>:
    9bf0:	defff404 	addi	sp,sp,-48
    9bf4:	dcc00515 	stw	r19,20(sp)
    9bf8:	dc000215 	stw	r16,8(sp)
    9bfc:	dfc00b15 	stw	ra,44(sp)
    9c00:	df000a15 	stw	fp,40(sp)
    9c04:	ddc00915 	stw	r23,36(sp)
    9c08:	dd800815 	stw	r22,32(sp)
    9c0c:	dd400715 	stw	r21,28(sp)
    9c10:	dd000615 	stw	r20,24(sp)
    9c14:	dc800415 	stw	r18,16(sp)
    9c18:	dc400315 	stw	r17,12(sp)
    9c1c:	2027883a 	mov	r19,r4
    9c20:	2821883a 	mov	r16,r5
    9c24:	3800461e 	bne	r7,zero,9d40 <__udivdi3+0x150>
    9c28:	3023883a 	mov	r17,r6
    9c2c:	2025883a 	mov	r18,r4
    9c30:	2980572e 	bgeu	r5,r6,9d90 <__udivdi3+0x1a0>
    9c34:	00bfffd4 	movui	r2,65535
    9c38:	282d883a 	mov	r22,r5
    9c3c:	1180b236 	bltu	r2,r6,9f08 <__udivdi3+0x318>
    9c40:	00803fc4 	movi	r2,255
    9c44:	1185803a 	cmpltu	r2,r2,r6
    9c48:	100490fa 	slli	r2,r2,3
    9c4c:	3086d83a 	srl	r3,r6,r2
    9c50:	01010034 	movhi	r4,1024
    9c54:	21008004 	addi	r4,r4,512
    9c58:	20c7883a 	add	r3,r4,r3
    9c5c:	18c00003 	ldbu	r3,0(r3)
    9c60:	1885883a 	add	r2,r3,r2
    9c64:	00c00804 	movi	r3,32
    9c68:	1887c83a 	sub	r3,r3,r2
    9c6c:	18000526 	beq	r3,zero,9c84 <__udivdi3+0x94>
    9c70:	80e0983a 	sll	r16,r16,r3
    9c74:	9884d83a 	srl	r2,r19,r2
    9c78:	30e2983a 	sll	r17,r6,r3
    9c7c:	98e4983a 	sll	r18,r19,r3
    9c80:	142cb03a 	or	r22,r2,r16
    9c84:	882ad43a 	srli	r21,r17,16
    9c88:	b009883a 	mov	r4,r22
    9c8c:	8d3fffcc 	andi	r20,r17,65535
    9c90:	a80b883a 	mov	r5,r21
    9c94:	000a90c0 	call	a90c <__umodsi3>
    9c98:	b009883a 	mov	r4,r22
    9c9c:	a80b883a 	mov	r5,r21
    9ca0:	1027883a 	mov	r19,r2
    9ca4:	000a8a80 	call	a8a8 <__udivsi3>
    9ca8:	100b883a 	mov	r5,r2
    9cac:	a009883a 	mov	r4,r20
    9cb0:	102d883a 	mov	r22,r2
    9cb4:	000a9640 	call	a964 <__mulsi3>
    9cb8:	9826943a 	slli	r19,r19,16
    9cbc:	9006d43a 	srli	r3,r18,16
    9cc0:	1cc6b03a 	or	r3,r3,r19
    9cc4:	1880052e 	bgeu	r3,r2,9cdc <__udivdi3+0xec>
    9cc8:	1c47883a 	add	r3,r3,r17
    9ccc:	b13fffc4 	addi	r4,r22,-1
    9cd0:	1c400136 	bltu	r3,r17,9cd8 <__udivdi3+0xe8>
    9cd4:	18814236 	bltu	r3,r2,a1e0 <__udivdi3+0x5f0>
    9cd8:	202d883a 	mov	r22,r4
    9cdc:	18a1c83a 	sub	r16,r3,r2
    9ce0:	8009883a 	mov	r4,r16
    9ce4:	a80b883a 	mov	r5,r21
    9ce8:	000a90c0 	call	a90c <__umodsi3>
    9cec:	1027883a 	mov	r19,r2
    9cf0:	8009883a 	mov	r4,r16
    9cf4:	a80b883a 	mov	r5,r21
    9cf8:	9826943a 	slli	r19,r19,16
    9cfc:	000a8a80 	call	a8a8 <__udivsi3>
    9d00:	100b883a 	mov	r5,r2
    9d04:	a009883a 	mov	r4,r20
    9d08:	94bfffcc 	andi	r18,r18,65535
    9d0c:	1021883a 	mov	r16,r2
    9d10:	94e4b03a 	or	r18,r18,r19
    9d14:	000a9640 	call	a964 <__mulsi3>
    9d18:	9080052e 	bgeu	r18,r2,9d30 <__udivdi3+0x140>
    9d1c:	8ca5883a 	add	r18,r17,r18
    9d20:	80ffffc4 	addi	r3,r16,-1
    9d24:	94410c36 	bltu	r18,r17,a158 <__udivdi3+0x568>
    9d28:	90810b2e 	bgeu	r18,r2,a158 <__udivdi3+0x568>
    9d2c:	843fff84 	addi	r16,r16,-2
    9d30:	b004943a 	slli	r2,r22,16
    9d34:	0007883a 	mov	r3,zero
    9d38:	1404b03a 	or	r2,r2,r16
    9d3c:	00005e06 	br	9eb8 <__udivdi3+0x2c8>
    9d40:	29c05b36 	bltu	r5,r7,9eb0 <__udivdi3+0x2c0>
    9d44:	00bfffd4 	movui	r2,65535
    9d48:	11c0672e 	bgeu	r2,r7,9ee8 <__udivdi3+0x2f8>
    9d4c:	00804034 	movhi	r2,256
    9d50:	10bfffc4 	addi	r2,r2,-1
    9d54:	11c10a36 	bltu	r2,r7,a180 <__udivdi3+0x590>
    9d58:	00800404 	movi	r2,16
    9d5c:	3886d83a 	srl	r3,r7,r2
    9d60:	01010034 	movhi	r4,1024
    9d64:	21008004 	addi	r4,r4,512
    9d68:	20c7883a 	add	r3,r4,r3
    9d6c:	18c00003 	ldbu	r3,0(r3)
    9d70:	05c00804 	movi	r23,32
    9d74:	1885883a 	add	r2,r3,r2
    9d78:	b8afc83a 	sub	r23,r23,r2
    9d7c:	b800671e 	bne	r23,zero,9f1c <__udivdi3+0x32c>
    9d80:	3c010536 	bltu	r7,r16,a198 <__udivdi3+0x5a8>
    9d84:	9985403a 	cmpgeu	r2,r19,r6
    9d88:	0007883a 	mov	r3,zero
    9d8c:	00004a06 	br	9eb8 <__udivdi3+0x2c8>
    9d90:	3000041e 	bne	r6,zero,9da4 <__udivdi3+0x1b4>
    9d94:	000b883a 	mov	r5,zero
    9d98:	01000044 	movi	r4,1
    9d9c:	000a8a80 	call	a8a8 <__udivsi3>
    9da0:	1023883a 	mov	r17,r2
    9da4:	00bfffd4 	movui	r2,65535
    9da8:	1440532e 	bgeu	r2,r17,9ef8 <__udivdi3+0x308>
    9dac:	00804034 	movhi	r2,256
    9db0:	10bfffc4 	addi	r2,r2,-1
    9db4:	1440f436 	bltu	r2,r17,a188 <__udivdi3+0x598>
    9db8:	00800404 	movi	r2,16
    9dbc:	8886d83a 	srl	r3,r17,r2
    9dc0:	01010034 	movhi	r4,1024
    9dc4:	21008004 	addi	r4,r4,512
    9dc8:	20c7883a 	add	r3,r4,r3
    9dcc:	18c00003 	ldbu	r3,0(r3)
    9dd0:	1885883a 	add	r2,r3,r2
    9dd4:	00c00804 	movi	r3,32
    9dd8:	1887c83a 	sub	r3,r3,r2
    9ddc:	1800a51e 	bne	r3,zero,a074 <__udivdi3+0x484>
    9de0:	882ad43a 	srli	r21,r17,16
    9de4:	8461c83a 	sub	r16,r16,r17
    9de8:	8d3fffcc 	andi	r20,r17,65535
    9dec:	00c00044 	movi	r3,1
    9df0:	a80b883a 	mov	r5,r21
    9df4:	8009883a 	mov	r4,r16
    9df8:	d8c00115 	stw	r3,4(sp)
    9dfc:	000a90c0 	call	a90c <__umodsi3>
    9e00:	a80b883a 	mov	r5,r21
    9e04:	8009883a 	mov	r4,r16
    9e08:	1027883a 	mov	r19,r2
    9e0c:	000a8a80 	call	a8a8 <__udivsi3>
    9e10:	a00b883a 	mov	r5,r20
    9e14:	1009883a 	mov	r4,r2
    9e18:	102d883a 	mov	r22,r2
    9e1c:	000a9640 	call	a964 <__mulsi3>
    9e20:	9826943a 	slli	r19,r19,16
    9e24:	900ed43a 	srli	r7,r18,16
    9e28:	d8c00117 	ldw	r3,4(sp)
    9e2c:	3cceb03a 	or	r7,r7,r19
    9e30:	3880052e 	bgeu	r7,r2,9e48 <__udivdi3+0x258>
    9e34:	3c4f883a 	add	r7,r7,r17
    9e38:	b13fffc4 	addi	r4,r22,-1
    9e3c:	3c400136 	bltu	r7,r17,9e44 <__udivdi3+0x254>
    9e40:	3880e436 	bltu	r7,r2,a1d4 <__udivdi3+0x5e4>
    9e44:	202d883a 	mov	r22,r4
    9e48:	38a1c83a 	sub	r16,r7,r2
    9e4c:	8009883a 	mov	r4,r16
    9e50:	a80b883a 	mov	r5,r21
    9e54:	d8c00115 	stw	r3,4(sp)
    9e58:	000a90c0 	call	a90c <__umodsi3>
    9e5c:	1027883a 	mov	r19,r2
    9e60:	8009883a 	mov	r4,r16
    9e64:	a80b883a 	mov	r5,r21
    9e68:	9826943a 	slli	r19,r19,16
    9e6c:	000a8a80 	call	a8a8 <__udivsi3>
    9e70:	a00b883a 	mov	r5,r20
    9e74:	1009883a 	mov	r4,r2
    9e78:	94bfffcc 	andi	r18,r18,65535
    9e7c:	1021883a 	mov	r16,r2
    9e80:	94e4b03a 	or	r18,r18,r19
    9e84:	000a9640 	call	a964 <__mulsi3>
    9e88:	d8c00117 	ldw	r3,4(sp)
    9e8c:	9080052e 	bgeu	r18,r2,9ea4 <__udivdi3+0x2b4>
    9e90:	8ca5883a 	add	r18,r17,r18
    9e94:	813fffc4 	addi	r4,r16,-1
    9e98:	9440ad36 	bltu	r18,r17,a150 <__udivdi3+0x560>
    9e9c:	9080ac2e 	bgeu	r18,r2,a150 <__udivdi3+0x560>
    9ea0:	843fff84 	addi	r16,r16,-2
    9ea4:	b004943a 	slli	r2,r22,16
    9ea8:	1404b03a 	or	r2,r2,r16
    9eac:	00000206 	br	9eb8 <__udivdi3+0x2c8>
    9eb0:	0007883a 	mov	r3,zero
    9eb4:	0005883a 	mov	r2,zero
    9eb8:	dfc00b17 	ldw	ra,44(sp)
    9ebc:	df000a17 	ldw	fp,40(sp)
    9ec0:	ddc00917 	ldw	r23,36(sp)
    9ec4:	dd800817 	ldw	r22,32(sp)
    9ec8:	dd400717 	ldw	r21,28(sp)
    9ecc:	dd000617 	ldw	r20,24(sp)
    9ed0:	dcc00517 	ldw	r19,20(sp)
    9ed4:	dc800417 	ldw	r18,16(sp)
    9ed8:	dc400317 	ldw	r17,12(sp)
    9edc:	dc000217 	ldw	r16,8(sp)
    9ee0:	dec00c04 	addi	sp,sp,48
    9ee4:	f800283a 	ret
    9ee8:	00803fc4 	movi	r2,255
    9eec:	11c5803a 	cmpltu	r2,r2,r7
    9ef0:	100490fa 	slli	r2,r2,3
    9ef4:	003f9906 	br	9d5c <__udivdi3+0x16c>
    9ef8:	00803fc4 	movi	r2,255
    9efc:	1445803a 	cmpltu	r2,r2,r17
    9f00:	100490fa 	slli	r2,r2,3
    9f04:	003fad06 	br	9dbc <__udivdi3+0x1cc>
    9f08:	00804034 	movhi	r2,256
    9f0c:	10bfffc4 	addi	r2,r2,-1
    9f10:	11809f36 	bltu	r2,r6,a190 <__udivdi3+0x5a0>
    9f14:	00800404 	movi	r2,16
    9f18:	003f4c06 	br	9c4c <__udivdi3+0x5c>
    9f1c:	3dce983a 	sll	r7,r7,r23
    9f20:	30b8d83a 	srl	fp,r6,r2
    9f24:	80a2d83a 	srl	r17,r16,r2
    9f28:	35cc983a 	sll	r6,r6,r23
    9f2c:	3f38b03a 	or	fp,r7,fp
    9f30:	e024d43a 	srli	r18,fp,16
    9f34:	9884d83a 	srl	r2,r19,r2
    9f38:	85e0983a 	sll	r16,r16,r23
    9f3c:	8809883a 	mov	r4,r17
    9f40:	900b883a 	mov	r5,r18
    9f44:	d9800015 	stw	r6,0(sp)
    9f48:	1420b03a 	or	r16,r2,r16
    9f4c:	000a90c0 	call	a90c <__umodsi3>
    9f50:	900b883a 	mov	r5,r18
    9f54:	8809883a 	mov	r4,r17
    9f58:	1029883a 	mov	r20,r2
    9f5c:	e5bfffcc 	andi	r22,fp,65535
    9f60:	000a8a80 	call	a8a8 <__udivsi3>
    9f64:	100b883a 	mov	r5,r2
    9f68:	b009883a 	mov	r4,r22
    9f6c:	102b883a 	mov	r21,r2
    9f70:	000a9640 	call	a964 <__mulsi3>
    9f74:	a028943a 	slli	r20,r20,16
    9f78:	8006d43a 	srli	r3,r16,16
    9f7c:	1d06b03a 	or	r3,r3,r20
    9f80:	1880042e 	bgeu	r3,r2,9f94 <__udivdi3+0x3a4>
    9f84:	1f07883a 	add	r3,r3,fp
    9f88:	a93fffc4 	addi	r4,r21,-1
    9f8c:	1f00892e 	bgeu	r3,fp,a1b4 <__udivdi3+0x5c4>
    9f90:	202b883a 	mov	r21,r4
    9f94:	18a3c83a 	sub	r17,r3,r2
    9f98:	8809883a 	mov	r4,r17
    9f9c:	900b883a 	mov	r5,r18
    9fa0:	000a90c0 	call	a90c <__umodsi3>
    9fa4:	1029883a 	mov	r20,r2
    9fa8:	8809883a 	mov	r4,r17
    9fac:	900b883a 	mov	r5,r18
    9fb0:	a028943a 	slli	r20,r20,16
    9fb4:	000a8a80 	call	a8a8 <__udivsi3>
    9fb8:	100b883a 	mov	r5,r2
    9fbc:	b009883a 	mov	r4,r22
    9fc0:	843fffcc 	andi	r16,r16,65535
    9fc4:	1023883a 	mov	r17,r2
    9fc8:	8520b03a 	or	r16,r16,r20
    9fcc:	000a9640 	call	a964 <__mulsi3>
    9fd0:	8080042e 	bgeu	r16,r2,9fe4 <__udivdi3+0x3f4>
    9fd4:	8721883a 	add	r16,r16,fp
    9fd8:	88ffffc4 	addi	r3,r17,-1
    9fdc:	8700712e 	bgeu	r16,fp,a1a4 <__udivdi3+0x5b4>
    9fe0:	1823883a 	mov	r17,r3
    9fe4:	a80e943a 	slli	r7,r21,16
    9fe8:	d8c00017 	ldw	r3,0(sp)
    9fec:	80a1c83a 	sub	r16,r16,r2
    9ff0:	3c64b03a 	or	r18,r7,r17
    9ff4:	1d3fffcc 	andi	r20,r3,65535
    9ff8:	9022d43a 	srli	r17,r18,16
    9ffc:	95bfffcc 	andi	r22,r18,65535
    a000:	a00b883a 	mov	r5,r20
    a004:	b009883a 	mov	r4,r22
    a008:	182ad43a 	srli	r21,r3,16
    a00c:	000a9640 	call	a964 <__mulsi3>
    a010:	a00b883a 	mov	r5,r20
    a014:	8809883a 	mov	r4,r17
    a018:	1039883a 	mov	fp,r2
    a01c:	000a9640 	call	a964 <__mulsi3>
    a020:	8809883a 	mov	r4,r17
    a024:	a80b883a 	mov	r5,r21
    a028:	1029883a 	mov	r20,r2
    a02c:	000a9640 	call	a964 <__mulsi3>
    a030:	a80b883a 	mov	r5,r21
    a034:	b009883a 	mov	r4,r22
    a038:	1023883a 	mov	r17,r2
    a03c:	000a9640 	call	a964 <__mulsi3>
    a040:	e006d43a 	srli	r3,fp,16
    a044:	1505883a 	add	r2,r2,r20
    a048:	1887883a 	add	r3,r3,r2
    a04c:	1d00022e 	bgeu	r3,r20,a058 <__udivdi3+0x468>
    a050:	00800074 	movhi	r2,1
    a054:	88a3883a 	add	r17,r17,r2
    a058:	1804d43a 	srli	r2,r3,16
    a05c:	1463883a 	add	r17,r2,r17
    a060:	84404436 	bltu	r16,r17,a174 <__udivdi3+0x584>
    a064:	84403e26 	beq	r16,r17,a160 <__udivdi3+0x570>
    a068:	9005883a 	mov	r2,r18
    a06c:	0007883a 	mov	r3,zero
    a070:	003f9106 	br	9eb8 <__udivdi3+0x2c8>
    a074:	88e2983a 	sll	r17,r17,r3
    a078:	80aed83a 	srl	r23,r16,r2
    a07c:	80e0983a 	sll	r16,r16,r3
    a080:	882ad43a 	srli	r21,r17,16
    a084:	9884d83a 	srl	r2,r19,r2
    a088:	b809883a 	mov	r4,r23
    a08c:	a80b883a 	mov	r5,r21
    a090:	98e4983a 	sll	r18,r19,r3
    a094:	142cb03a 	or	r22,r2,r16
    a098:	000a90c0 	call	a90c <__umodsi3>
    a09c:	b809883a 	mov	r4,r23
    a0a0:	a80b883a 	mov	r5,r21
    a0a4:	1027883a 	mov	r19,r2
    a0a8:	8d3fffcc 	andi	r20,r17,65535
    a0ac:	000a8a80 	call	a8a8 <__udivsi3>
    a0b0:	a009883a 	mov	r4,r20
    a0b4:	100b883a 	mov	r5,r2
    a0b8:	102f883a 	mov	r23,r2
    a0bc:	000a9640 	call	a964 <__mulsi3>
    a0c0:	9826943a 	slli	r19,r19,16
    a0c4:	b008d43a 	srli	r4,r22,16
    a0c8:	24c8b03a 	or	r4,r4,r19
    a0cc:	2080062e 	bgeu	r4,r2,a0e8 <__udivdi3+0x4f8>
    a0d0:	2449883a 	add	r4,r4,r17
    a0d4:	b8ffffc4 	addi	r3,r23,-1
    a0d8:	24403c36 	bltu	r4,r17,a1cc <__udivdi3+0x5dc>
    a0dc:	20803b2e 	bgeu	r4,r2,a1cc <__udivdi3+0x5dc>
    a0e0:	bdffff84 	addi	r23,r23,-2
    a0e4:	2449883a 	add	r4,r4,r17
    a0e8:	20a1c83a 	sub	r16,r4,r2
    a0ec:	a80b883a 	mov	r5,r21
    a0f0:	8009883a 	mov	r4,r16
    a0f4:	000a90c0 	call	a90c <__umodsi3>
    a0f8:	a80b883a 	mov	r5,r21
    a0fc:	8009883a 	mov	r4,r16
    a100:	1027883a 	mov	r19,r2
    a104:	000a8a80 	call	a8a8 <__udivsi3>
    a108:	a009883a 	mov	r4,r20
    a10c:	100b883a 	mov	r5,r2
    a110:	9826943a 	slli	r19,r19,16
    a114:	1039883a 	mov	fp,r2
    a118:	000a9640 	call	a964 <__mulsi3>
    a11c:	b13fffcc 	andi	r4,r22,65535
    a120:	24c8b03a 	or	r4,r4,r19
    a124:	2080062e 	bgeu	r4,r2,a140 <__udivdi3+0x550>
    a128:	2449883a 	add	r4,r4,r17
    a12c:	e0ffffc4 	addi	r3,fp,-1
    a130:	24402436 	bltu	r4,r17,a1c4 <__udivdi3+0x5d4>
    a134:	2080232e 	bgeu	r4,r2,a1c4 <__udivdi3+0x5d4>
    a138:	e73fff84 	addi	fp,fp,-2
    a13c:	2449883a 	add	r4,r4,r17
    a140:	b82e943a 	slli	r23,r23,16
    a144:	20a1c83a 	sub	r16,r4,r2
    a148:	bf06b03a 	or	r3,r23,fp
    a14c:	003f2806 	br	9df0 <__udivdi3+0x200>
    a150:	2021883a 	mov	r16,r4
    a154:	003f5306 	br	9ea4 <__udivdi3+0x2b4>
    a158:	1821883a 	mov	r16,r3
    a15c:	003ef406 	br	9d30 <__udivdi3+0x140>
    a160:	1806943a 	slli	r3,r3,16
    a164:	9de6983a 	sll	r19,r19,r23
    a168:	e73fffcc 	andi	fp,fp,65535
    a16c:	1f07883a 	add	r3,r3,fp
    a170:	98ffbd2e 	bgeu	r19,r3,a068 <__udivdi3+0x478>
    a174:	90bfffc4 	addi	r2,r18,-1
    a178:	0007883a 	mov	r3,zero
    a17c:	003f4e06 	br	9eb8 <__udivdi3+0x2c8>
    a180:	00800604 	movi	r2,24
    a184:	003ef506 	br	9d5c <__udivdi3+0x16c>
    a188:	00800604 	movi	r2,24
    a18c:	003f0b06 	br	9dbc <__udivdi3+0x1cc>
    a190:	00800604 	movi	r2,24
    a194:	003ead06 	br	9c4c <__udivdi3+0x5c>
    a198:	0007883a 	mov	r3,zero
    a19c:	00800044 	movi	r2,1
    a1a0:	003f4506 	br	9eb8 <__udivdi3+0x2c8>
    a1a4:	80bf8e2e 	bgeu	r16,r2,9fe0 <__udivdi3+0x3f0>
    a1a8:	8c7fff84 	addi	r17,r17,-2
    a1ac:	8721883a 	add	r16,r16,fp
    a1b0:	003f8c06 	br	9fe4 <__udivdi3+0x3f4>
    a1b4:	18bf762e 	bgeu	r3,r2,9f90 <__udivdi3+0x3a0>
    a1b8:	ad7fff84 	addi	r21,r21,-2
    a1bc:	1f07883a 	add	r3,r3,fp
    a1c0:	003f7406 	br	9f94 <__udivdi3+0x3a4>
    a1c4:	1839883a 	mov	fp,r3
    a1c8:	003fdd06 	br	a140 <__udivdi3+0x550>
    a1cc:	182f883a 	mov	r23,r3
    a1d0:	003fc506 	br	a0e8 <__udivdi3+0x4f8>
    a1d4:	b5bfff84 	addi	r22,r22,-2
    a1d8:	3c4f883a 	add	r7,r7,r17
    a1dc:	003f1a06 	br	9e48 <__udivdi3+0x258>
    a1e0:	b5bfff84 	addi	r22,r22,-2
    a1e4:	1c47883a 	add	r3,r3,r17
    a1e8:	003ebc06 	br	9cdc <__udivdi3+0xec>

0000a1ec <__umoddi3>:
    a1ec:	defff304 	addi	sp,sp,-52
    a1f0:	df000b15 	stw	fp,44(sp)
    a1f4:	dc400415 	stw	r17,16(sp)
    a1f8:	dc000315 	stw	r16,12(sp)
    a1fc:	dfc00c15 	stw	ra,48(sp)
    a200:	ddc00a15 	stw	r23,40(sp)
    a204:	dd800915 	stw	r22,36(sp)
    a208:	dd400815 	stw	r21,32(sp)
    a20c:	dd000715 	stw	r20,28(sp)
    a210:	dcc00615 	stw	r19,24(sp)
    a214:	dc800515 	stw	r18,20(sp)
    a218:	2021883a 	mov	r16,r4
    a21c:	2823883a 	mov	r17,r5
    a220:	2839883a 	mov	fp,r5
    a224:	3800401e 	bne	r7,zero,a328 <__umoddi3+0x13c>
    a228:	3027883a 	mov	r19,r6
    a22c:	2029883a 	mov	r20,r4
    a230:	2980552e 	bgeu	r5,r6,a388 <__umoddi3+0x19c>
    a234:	00bfffd4 	movui	r2,65535
    a238:	1180a236 	bltu	r2,r6,a4c4 <__umoddi3+0x2d8>
    a23c:	01003fc4 	movi	r4,255
    a240:	2189803a 	cmpltu	r4,r4,r6
    a244:	200890fa 	slli	r4,r4,3
    a248:	3104d83a 	srl	r2,r6,r4
    a24c:	00c10034 	movhi	r3,1024
    a250:	18c08004 	addi	r3,r3,512
    a254:	1885883a 	add	r2,r3,r2
    a258:	10c00003 	ldbu	r3,0(r2)
    a25c:	00800804 	movi	r2,32
    a260:	1909883a 	add	r4,r3,r4
    a264:	1125c83a 	sub	r18,r2,r4
    a268:	90000526 	beq	r18,zero,a280 <__umoddi3+0x94>
    a26c:	8ca2983a 	sll	r17,r17,r18
    a270:	8108d83a 	srl	r4,r16,r4
    a274:	34a6983a 	sll	r19,r6,r18
    a278:	84a8983a 	sll	r20,r16,r18
    a27c:	2478b03a 	or	fp,r4,r17
    a280:	982cd43a 	srli	r22,r19,16
    a284:	e009883a 	mov	r4,fp
    a288:	9dffffcc 	andi	r23,r19,65535
    a28c:	b00b883a 	mov	r5,r22
    a290:	000a90c0 	call	a90c <__umodsi3>
    a294:	b00b883a 	mov	r5,r22
    a298:	e009883a 	mov	r4,fp
    a29c:	102b883a 	mov	r21,r2
    a2a0:	000a8a80 	call	a8a8 <__udivsi3>
    a2a4:	100b883a 	mov	r5,r2
    a2a8:	b809883a 	mov	r4,r23
    a2ac:	000a9640 	call	a964 <__mulsi3>
    a2b0:	a82a943a 	slli	r21,r21,16
    a2b4:	a006d43a 	srli	r3,r20,16
    a2b8:	1d46b03a 	or	r3,r3,r21
    a2bc:	1880032e 	bgeu	r3,r2,a2cc <__umoddi3+0xe0>
    a2c0:	1cc7883a 	add	r3,r3,r19
    a2c4:	1cc00136 	bltu	r3,r19,a2cc <__umoddi3+0xe0>
    a2c8:	18813136 	bltu	r3,r2,a790 <__umoddi3+0x5a4>
    a2cc:	18a1c83a 	sub	r16,r3,r2
    a2d0:	b00b883a 	mov	r5,r22
    a2d4:	8009883a 	mov	r4,r16
    a2d8:	000a90c0 	call	a90c <__umodsi3>
    a2dc:	b00b883a 	mov	r5,r22
    a2e0:	8009883a 	mov	r4,r16
    a2e4:	1023883a 	mov	r17,r2
    a2e8:	000a8a80 	call	a8a8 <__udivsi3>
    a2ec:	100b883a 	mov	r5,r2
    a2f0:	b809883a 	mov	r4,r23
    a2f4:	8822943a 	slli	r17,r17,16
    a2f8:	000a9640 	call	a964 <__mulsi3>
    a2fc:	a0ffffcc 	andi	r3,r20,65535
    a300:	1c46b03a 	or	r3,r3,r17
    a304:	1880042e 	bgeu	r3,r2,a318 <__umoddi3+0x12c>
    a308:	1cc7883a 	add	r3,r3,r19
    a30c:	1cc00236 	bltu	r3,r19,a318 <__umoddi3+0x12c>
    a310:	1880012e 	bgeu	r3,r2,a318 <__umoddi3+0x12c>
    a314:	1cc7883a 	add	r3,r3,r19
    a318:	1885c83a 	sub	r2,r3,r2
    a31c:	1484d83a 	srl	r2,r2,r18
    a320:	0007883a 	mov	r3,zero
    a324:	00005306 	br	a474 <__umoddi3+0x288>
    a328:	29c05036 	bltu	r5,r7,a46c <__umoddi3+0x280>
    a32c:	00bfffd4 	movui	r2,65535
    a330:	11c05c2e 	bgeu	r2,r7,a4a4 <__umoddi3+0x2b8>
    a334:	00804034 	movhi	r2,256
    a338:	10bfffc4 	addi	r2,r2,-1
    a33c:	11c10636 	bltu	r2,r7,a758 <__umoddi3+0x56c>
    a340:	01000404 	movi	r4,16
    a344:	3904d83a 	srl	r2,r7,r4
    a348:	00c10034 	movhi	r3,1024
    a34c:	18c08004 	addi	r3,r3,512
    a350:	1885883a 	add	r2,r3,r2
    a354:	14c00003 	ldbu	r19,0(r2)
    a358:	00c00804 	movi	r3,32
    a35c:	9927883a 	add	r19,r19,r4
    a360:	1ce9c83a 	sub	r20,r3,r19
    a364:	a0005c1e 	bne	r20,zero,a4d8 <__umoddi3+0x2ec>
    a368:	3c400136 	bltu	r7,r17,a370 <__umoddi3+0x184>
    a36c:	81810a36 	bltu	r16,r6,a798 <__umoddi3+0x5ac>
    a370:	8185c83a 	sub	r2,r16,r6
    a374:	89e3c83a 	sub	r17,r17,r7
    a378:	8089803a 	cmpltu	r4,r16,r2
    a37c:	8939c83a 	sub	fp,r17,r4
    a380:	e007883a 	mov	r3,fp
    a384:	00003b06 	br	a474 <__umoddi3+0x288>
    a388:	3000041e 	bne	r6,zero,a39c <__umoddi3+0x1b0>
    a38c:	000b883a 	mov	r5,zero
    a390:	01000044 	movi	r4,1
    a394:	000a8a80 	call	a8a8 <__udivsi3>
    a398:	1027883a 	mov	r19,r2
    a39c:	00bfffd4 	movui	r2,65535
    a3a0:	14c0442e 	bgeu	r2,r19,a4b4 <__umoddi3+0x2c8>
    a3a4:	00804034 	movhi	r2,256
    a3a8:	10bfffc4 	addi	r2,r2,-1
    a3ac:	14c0ec36 	bltu	r2,r19,a760 <__umoddi3+0x574>
    a3b0:	00800404 	movi	r2,16
    a3b4:	9886d83a 	srl	r3,r19,r2
    a3b8:	01010034 	movhi	r4,1024
    a3bc:	21008004 	addi	r4,r4,512
    a3c0:	20c7883a 	add	r3,r4,r3
    a3c4:	18c00003 	ldbu	r3,0(r3)
    a3c8:	1887883a 	add	r3,r3,r2
    a3cc:	00800804 	movi	r2,32
    a3d0:	10e5c83a 	sub	r18,r2,r3
    a3d4:	9000ab1e 	bne	r18,zero,a684 <__umoddi3+0x498>
    a3d8:	982cd43a 	srli	r22,r19,16
    a3dc:	8ce3c83a 	sub	r17,r17,r19
    a3e0:	9dffffcc 	andi	r23,r19,65535
    a3e4:	b00b883a 	mov	r5,r22
    a3e8:	8809883a 	mov	r4,r17
    a3ec:	000a90c0 	call	a90c <__umodsi3>
    a3f0:	b00b883a 	mov	r5,r22
    a3f4:	8809883a 	mov	r4,r17
    a3f8:	102b883a 	mov	r21,r2
    a3fc:	000a8a80 	call	a8a8 <__udivsi3>
    a400:	b80b883a 	mov	r5,r23
    a404:	1009883a 	mov	r4,r2
    a408:	000a9640 	call	a964 <__mulsi3>
    a40c:	a82a943a 	slli	r21,r21,16
    a410:	a006d43a 	srli	r3,r20,16
    a414:	1d46b03a 	or	r3,r3,r21
    a418:	1880042e 	bgeu	r3,r2,a42c <__umoddi3+0x240>
    a41c:	1cc7883a 	add	r3,r3,r19
    a420:	1cc00236 	bltu	r3,r19,a42c <__umoddi3+0x240>
    a424:	1880012e 	bgeu	r3,r2,a42c <__umoddi3+0x240>
    a428:	1cc7883a 	add	r3,r3,r19
    a42c:	18a1c83a 	sub	r16,r3,r2
    a430:	b00b883a 	mov	r5,r22
    a434:	8009883a 	mov	r4,r16
    a438:	000a90c0 	call	a90c <__umodsi3>
    a43c:	1023883a 	mov	r17,r2
    a440:	b00b883a 	mov	r5,r22
    a444:	8009883a 	mov	r4,r16
    a448:	000a8a80 	call	a8a8 <__udivsi3>
    a44c:	8822943a 	slli	r17,r17,16
    a450:	b80b883a 	mov	r5,r23
    a454:	1009883a 	mov	r4,r2
    a458:	000a9640 	call	a964 <__mulsi3>
    a45c:	a53fffcc 	andi	r20,r20,65535
    a460:	a446b03a 	or	r3,r20,r17
    a464:	18bfac2e 	bgeu	r3,r2,a318 <__umoddi3+0x12c>
    a468:	003fa706 	br	a308 <__umoddi3+0x11c>
    a46c:	2005883a 	mov	r2,r4
    a470:	2807883a 	mov	r3,r5
    a474:	dfc00c17 	ldw	ra,48(sp)
    a478:	df000b17 	ldw	fp,44(sp)
    a47c:	ddc00a17 	ldw	r23,40(sp)
    a480:	dd800917 	ldw	r22,36(sp)
    a484:	dd400817 	ldw	r21,32(sp)
    a488:	dd000717 	ldw	r20,28(sp)
    a48c:	dcc00617 	ldw	r19,24(sp)
    a490:	dc800517 	ldw	r18,20(sp)
    a494:	dc400417 	ldw	r17,16(sp)
    a498:	dc000317 	ldw	r16,12(sp)
    a49c:	dec00d04 	addi	sp,sp,52
    a4a0:	f800283a 	ret
    a4a4:	04c03fc4 	movi	r19,255
    a4a8:	99c9803a 	cmpltu	r4,r19,r7
    a4ac:	200890fa 	slli	r4,r4,3
    a4b0:	003fa406 	br	a344 <__umoddi3+0x158>
    a4b4:	00803fc4 	movi	r2,255
    a4b8:	14c5803a 	cmpltu	r2,r2,r19
    a4bc:	100490fa 	slli	r2,r2,3
    a4c0:	003fbc06 	br	a3b4 <__umoddi3+0x1c8>
    a4c4:	00804034 	movhi	r2,256
    a4c8:	10bfffc4 	addi	r2,r2,-1
    a4cc:	1180a636 	bltu	r2,r6,a768 <__umoddi3+0x57c>
    a4d0:	01000404 	movi	r4,16
    a4d4:	003f5c06 	br	a248 <__umoddi3+0x5c>
    a4d8:	3d0e983a 	sll	r7,r7,r20
    a4dc:	34ead83a 	srl	r21,r6,r19
    a4e0:	8cc6d83a 	srl	r3,r17,r19
    a4e4:	8d10983a 	sll	r8,r17,r20
    a4e8:	3d6ab03a 	or	r21,r7,r21
    a4ec:	a82cd43a 	srli	r22,r21,16
    a4f0:	84e2d83a 	srl	r17,r16,r19
    a4f4:	1809883a 	mov	r4,r3
    a4f8:	b00b883a 	mov	r5,r22
    a4fc:	8a22b03a 	or	r17,r17,r8
    a500:	3524983a 	sll	r18,r6,r20
    a504:	dc400015 	stw	r17,0(sp)
    a508:	d8c00115 	stw	r3,4(sp)
    a50c:	000a90c0 	call	a90c <__umodsi3>
    a510:	d8c00117 	ldw	r3,4(sp)
    a514:	b00b883a 	mov	r5,r22
    a518:	1039883a 	mov	fp,r2
    a51c:	1809883a 	mov	r4,r3
    a520:	000a8a80 	call	a8a8 <__udivsi3>
    a524:	adffffcc 	andi	r23,r21,65535
    a528:	100b883a 	mov	r5,r2
    a52c:	b809883a 	mov	r4,r23
    a530:	1023883a 	mov	r17,r2
    a534:	000a9640 	call	a964 <__mulsi3>
    a538:	d9400017 	ldw	r5,0(sp)
    a53c:	e008943a 	slli	r4,fp,16
    a540:	8520983a 	sll	r16,r16,r20
    a544:	2806d43a 	srli	r3,r5,16
    a548:	1906b03a 	or	r3,r3,r4
    a54c:	1880042e 	bgeu	r3,r2,a560 <__umoddi3+0x374>
    a550:	1d47883a 	add	r3,r3,r21
    a554:	893fffc4 	addi	r4,r17,-1
    a558:	1d40892e 	bgeu	r3,r21,a780 <__umoddi3+0x594>
    a55c:	2023883a 	mov	r17,r4
    a560:	18b9c83a 	sub	fp,r3,r2
    a564:	b00b883a 	mov	r5,r22
    a568:	e009883a 	mov	r4,fp
    a56c:	000a90c0 	call	a90c <__umodsi3>
    a570:	b00b883a 	mov	r5,r22
    a574:	e009883a 	mov	r4,fp
    a578:	d8800215 	stw	r2,8(sp)
    a57c:	000a8a80 	call	a8a8 <__udivsi3>
    a580:	100b883a 	mov	r5,r2
    a584:	b809883a 	mov	r4,r23
    a588:	102d883a 	mov	r22,r2
    a58c:	000a9640 	call	a964 <__mulsi3>
    a590:	d9800217 	ldw	r6,8(sp)
    a594:	d8c00017 	ldw	r3,0(sp)
    a598:	300c943a 	slli	r6,r6,16
    a59c:	1a3fffcc 	andi	r8,r3,65535
    a5a0:	4190b03a 	or	r8,r8,r6
    a5a4:	4080042e 	bgeu	r8,r2,a5b8 <__umoddi3+0x3cc>
    a5a8:	4551883a 	add	r8,r8,r21
    a5ac:	b0ffffc4 	addi	r3,r22,-1
    a5b0:	45406f2e 	bgeu	r8,r21,a770 <__umoddi3+0x584>
    a5b4:	182d883a 	mov	r22,r3
    a5b8:	880e943a 	slli	r7,r17,16
    a5bc:	9006d43a 	srli	r3,r18,16
    a5c0:	91bfffcc 	andi	r6,r18,65535
    a5c4:	3dacb03a 	or	r22,r7,r22
    a5c8:	b02ed43a 	srli	r23,r22,16
    a5cc:	b5bfffcc 	andi	r22,r22,65535
    a5d0:	300b883a 	mov	r5,r6
    a5d4:	b009883a 	mov	r4,r22
    a5d8:	40a3c83a 	sub	r17,r8,r2
    a5dc:	d8c00115 	stw	r3,4(sp)
    a5e0:	d9800215 	stw	r6,8(sp)
    a5e4:	000a9640 	call	a964 <__mulsi3>
    a5e8:	d9800217 	ldw	r6,8(sp)
    a5ec:	b809883a 	mov	r4,r23
    a5f0:	1039883a 	mov	fp,r2
    a5f4:	300b883a 	mov	r5,r6
    a5f8:	000a9640 	call	a964 <__mulsi3>
    a5fc:	d8c00117 	ldw	r3,4(sp)
    a600:	b809883a 	mov	r4,r23
    a604:	d8800215 	stw	r2,8(sp)
    a608:	180b883a 	mov	r5,r3
    a60c:	000a9640 	call	a964 <__mulsi3>
    a610:	d8c00117 	ldw	r3,4(sp)
    a614:	b009883a 	mov	r4,r22
    a618:	102f883a 	mov	r23,r2
    a61c:	180b883a 	mov	r5,r3
    a620:	000a9640 	call	a964 <__mulsi3>
    a624:	d9800217 	ldw	r6,8(sp)
    a628:	e006d43a 	srli	r3,fp,16
    a62c:	1185883a 	add	r2,r2,r6
    a630:	1885883a 	add	r2,r3,r2
    a634:	1180022e 	bgeu	r2,r6,a640 <__umoddi3+0x454>
    a638:	00c00074 	movhi	r3,1
    a63c:	b8ef883a 	add	r23,r23,r3
    a640:	1006d43a 	srli	r3,r2,16
    a644:	1004943a 	slli	r2,r2,16
    a648:	e73fffcc 	andi	fp,fp,65535
    a64c:	1dc7883a 	add	r3,r3,r23
    a650:	1739883a 	add	fp,r2,fp
    a654:	88c03a36 	bltu	r17,r3,a740 <__umoddi3+0x554>
    a658:	88c05126 	beq	r17,r3,a7a0 <__umoddi3+0x5b4>
    a65c:	88c9c83a 	sub	r4,r17,r3
    a660:	e00f883a 	mov	r7,fp
    a664:	81cfc83a 	sub	r7,r16,r7
    a668:	81c7803a 	cmpltu	r3,r16,r7
    a66c:	20c7c83a 	sub	r3,r4,r3
    a670:	1cc4983a 	sll	r2,r3,r19
    a674:	3d0ed83a 	srl	r7,r7,r20
    a678:	1d06d83a 	srl	r3,r3,r20
    a67c:	11c4b03a 	or	r2,r2,r7
    a680:	003f7c06 	br	a474 <__umoddi3+0x288>
    a684:	9ca6983a 	sll	r19,r19,r18
    a688:	88f8d83a 	srl	fp,r17,r3
    a68c:	80c4d83a 	srl	r2,r16,r3
    a690:	982cd43a 	srli	r22,r19,16
    a694:	8ca2983a 	sll	r17,r17,r18
    a698:	e009883a 	mov	r4,fp
    a69c:	b00b883a 	mov	r5,r22
    a6a0:	146ab03a 	or	r21,r2,r17
    a6a4:	000a90c0 	call	a90c <__umodsi3>
    a6a8:	b00b883a 	mov	r5,r22
    a6ac:	e009883a 	mov	r4,fp
    a6b0:	1029883a 	mov	r20,r2
    a6b4:	9dffffcc 	andi	r23,r19,65535
    a6b8:	000a8a80 	call	a8a8 <__udivsi3>
    a6bc:	b809883a 	mov	r4,r23
    a6c0:	100b883a 	mov	r5,r2
    a6c4:	000a9640 	call	a964 <__mulsi3>
    a6c8:	a008943a 	slli	r4,r20,16
    a6cc:	a806d43a 	srli	r3,r21,16
    a6d0:	84a8983a 	sll	r20,r16,r18
    a6d4:	1906b03a 	or	r3,r3,r4
    a6d8:	1880042e 	bgeu	r3,r2,a6ec <__umoddi3+0x500>
    a6dc:	1cc7883a 	add	r3,r3,r19
    a6e0:	1cc00236 	bltu	r3,r19,a6ec <__umoddi3+0x500>
    a6e4:	1880012e 	bgeu	r3,r2,a6ec <__umoddi3+0x500>
    a6e8:	1cc7883a 	add	r3,r3,r19
    a6ec:	18a3c83a 	sub	r17,r3,r2
    a6f0:	b00b883a 	mov	r5,r22
    a6f4:	8809883a 	mov	r4,r17
    a6f8:	000a90c0 	call	a90c <__umodsi3>
    a6fc:	b00b883a 	mov	r5,r22
    a700:	8809883a 	mov	r4,r17
    a704:	1021883a 	mov	r16,r2
    a708:	000a8a80 	call	a8a8 <__udivsi3>
    a70c:	100b883a 	mov	r5,r2
    a710:	b809883a 	mov	r4,r23
    a714:	8020943a 	slli	r16,r16,16
    a718:	000a9640 	call	a964 <__mulsi3>
    a71c:	a8ffffcc 	andi	r3,r21,65535
    a720:	1c06b03a 	or	r3,r3,r16
    a724:	1880042e 	bgeu	r3,r2,a738 <__umoddi3+0x54c>
    a728:	1cc7883a 	add	r3,r3,r19
    a72c:	1cc00236 	bltu	r3,r19,a738 <__umoddi3+0x54c>
    a730:	1880012e 	bgeu	r3,r2,a738 <__umoddi3+0x54c>
    a734:	1cc7883a 	add	r3,r3,r19
    a738:	18a3c83a 	sub	r17,r3,r2
    a73c:	003f2906 	br	a3e4 <__umoddi3+0x1f8>
    a740:	e48fc83a 	sub	r7,fp,r18
    a744:	1d49c83a 	sub	r4,r3,r21
    a748:	e1f9803a 	cmpltu	fp,fp,r7
    a74c:	2739c83a 	sub	fp,r4,fp
    a750:	8f09c83a 	sub	r4,r17,fp
    a754:	003fc306 	br	a664 <__umoddi3+0x478>
    a758:	01000604 	movi	r4,24
    a75c:	003ef906 	br	a344 <__umoddi3+0x158>
    a760:	00800604 	movi	r2,24
    a764:	003f1306 	br	a3b4 <__umoddi3+0x1c8>
    a768:	01000604 	movi	r4,24
    a76c:	003eb606 	br	a248 <__umoddi3+0x5c>
    a770:	40bf902e 	bgeu	r8,r2,a5b4 <__umoddi3+0x3c8>
    a774:	b5bfff84 	addi	r22,r22,-2
    a778:	4551883a 	add	r8,r8,r21
    a77c:	003f8e06 	br	a5b8 <__umoddi3+0x3cc>
    a780:	18bf762e 	bgeu	r3,r2,a55c <__umoddi3+0x370>
    a784:	8c7fff84 	addi	r17,r17,-2
    a788:	1d47883a 	add	r3,r3,r21
    a78c:	003f7406 	br	a560 <__umoddi3+0x374>
    a790:	1cc7883a 	add	r3,r3,r19
    a794:	003ecd06 	br	a2cc <__umoddi3+0xe0>
    a798:	8005883a 	mov	r2,r16
    a79c:	003ef806 	br	a380 <__umoddi3+0x194>
    a7a0:	873fe736 	bltu	r16,fp,a740 <__umoddi3+0x554>
    a7a4:	e00f883a 	mov	r7,fp
    a7a8:	0009883a 	mov	r4,zero
    a7ac:	003fad06 	br	a664 <__umoddi3+0x478>

0000a7b0 <__divsi3>:
    a7b0:	20001b16 	blt	r4,zero,a820 <__divsi3+0x70>
    a7b4:	000f883a 	mov	r7,zero
    a7b8:	28001616 	blt	r5,zero,a814 <__divsi3+0x64>
    a7bc:	200d883a 	mov	r6,r4
    a7c0:	29001a2e 	bgeu	r5,r4,a82c <__divsi3+0x7c>
    a7c4:	00800804 	movi	r2,32
    a7c8:	00c00044 	movi	r3,1
    a7cc:	00000106 	br	a7d4 <__divsi3+0x24>
    a7d0:	10000d26 	beq	r2,zero,a808 <__divsi3+0x58>
    a7d4:	294b883a 	add	r5,r5,r5
    a7d8:	10bfffc4 	addi	r2,r2,-1
    a7dc:	18c7883a 	add	r3,r3,r3
    a7e0:	293ffb36 	bltu	r5,r4,a7d0 <__divsi3+0x20>
    a7e4:	0005883a 	mov	r2,zero
    a7e8:	18000726 	beq	r3,zero,a808 <__divsi3+0x58>
    a7ec:	0005883a 	mov	r2,zero
    a7f0:	31400236 	bltu	r6,r5,a7fc <__divsi3+0x4c>
    a7f4:	314dc83a 	sub	r6,r6,r5
    a7f8:	10c4b03a 	or	r2,r2,r3
    a7fc:	1806d07a 	srli	r3,r3,1
    a800:	280ad07a 	srli	r5,r5,1
    a804:	183ffa1e 	bne	r3,zero,a7f0 <__divsi3+0x40>
    a808:	38000126 	beq	r7,zero,a810 <__divsi3+0x60>
    a80c:	0085c83a 	sub	r2,zero,r2
    a810:	f800283a 	ret
    a814:	014bc83a 	sub	r5,zero,r5
    a818:	39c0005c 	xori	r7,r7,1
    a81c:	003fe706 	br	a7bc <__divsi3+0xc>
    a820:	0109c83a 	sub	r4,zero,r4
    a824:	01c00044 	movi	r7,1
    a828:	003fe306 	br	a7b8 <__divsi3+0x8>
    a82c:	00c00044 	movi	r3,1
    a830:	003fee06 	br	a7ec <__divsi3+0x3c>

0000a834 <__modsi3>:
    a834:	20001716 	blt	r4,zero,a894 <__modsi3+0x60>
    a838:	000f883a 	mov	r7,zero
    a83c:	2005883a 	mov	r2,r4
    a840:	28001216 	blt	r5,zero,a88c <__modsi3+0x58>
    a844:	2900162e 	bgeu	r5,r4,a8a0 <__modsi3+0x6c>
    a848:	01800804 	movi	r6,32
    a84c:	00c00044 	movi	r3,1
    a850:	00000106 	br	a858 <__modsi3+0x24>
    a854:	30000a26 	beq	r6,zero,a880 <__modsi3+0x4c>
    a858:	294b883a 	add	r5,r5,r5
    a85c:	31bfffc4 	addi	r6,r6,-1
    a860:	18c7883a 	add	r3,r3,r3
    a864:	293ffb36 	bltu	r5,r4,a854 <__modsi3+0x20>
    a868:	18000526 	beq	r3,zero,a880 <__modsi3+0x4c>
    a86c:	1806d07a 	srli	r3,r3,1
    a870:	11400136 	bltu	r2,r5,a878 <__modsi3+0x44>
    a874:	1145c83a 	sub	r2,r2,r5
    a878:	280ad07a 	srli	r5,r5,1
    a87c:	183ffb1e 	bne	r3,zero,a86c <__modsi3+0x38>
    a880:	38000126 	beq	r7,zero,a888 <__modsi3+0x54>
    a884:	0085c83a 	sub	r2,zero,r2
    a888:	f800283a 	ret
    a88c:	014bc83a 	sub	r5,zero,r5
    a890:	003fec06 	br	a844 <__modsi3+0x10>
    a894:	0109c83a 	sub	r4,zero,r4
    a898:	01c00044 	movi	r7,1
    a89c:	003fe706 	br	a83c <__modsi3+0x8>
    a8a0:	00c00044 	movi	r3,1
    a8a4:	003ff106 	br	a86c <__modsi3+0x38>

0000a8a8 <__udivsi3>:
    a8a8:	200d883a 	mov	r6,r4
    a8ac:	2900152e 	bgeu	r5,r4,a904 <__udivsi3+0x5c>
    a8b0:	28001416 	blt	r5,zero,a904 <__udivsi3+0x5c>
    a8b4:	00800804 	movi	r2,32
    a8b8:	00c00044 	movi	r3,1
    a8bc:	00000206 	br	a8c8 <__udivsi3+0x20>
    a8c0:	10000e26 	beq	r2,zero,a8fc <__udivsi3+0x54>
    a8c4:	28000516 	blt	r5,zero,a8dc <__udivsi3+0x34>
    a8c8:	294b883a 	add	r5,r5,r5
    a8cc:	10bfffc4 	addi	r2,r2,-1
    a8d0:	18c7883a 	add	r3,r3,r3
    a8d4:	293ffa36 	bltu	r5,r4,a8c0 <__udivsi3+0x18>
    a8d8:	18000826 	beq	r3,zero,a8fc <__udivsi3+0x54>
    a8dc:	0005883a 	mov	r2,zero
    a8e0:	31400236 	bltu	r6,r5,a8ec <__udivsi3+0x44>
    a8e4:	314dc83a 	sub	r6,r6,r5
    a8e8:	10c4b03a 	or	r2,r2,r3
    a8ec:	1806d07a 	srli	r3,r3,1
    a8f0:	280ad07a 	srli	r5,r5,1
    a8f4:	183ffa1e 	bne	r3,zero,a8e0 <__udivsi3+0x38>
    a8f8:	f800283a 	ret
    a8fc:	0005883a 	mov	r2,zero
    a900:	f800283a 	ret
    a904:	00c00044 	movi	r3,1
    a908:	003ff406 	br	a8dc <__udivsi3+0x34>

0000a90c <__umodsi3>:
    a90c:	2005883a 	mov	r2,r4
    a910:	2900122e 	bgeu	r5,r4,a95c <__umodsi3+0x50>
    a914:	28001116 	blt	r5,zero,a95c <__umodsi3+0x50>
    a918:	01800804 	movi	r6,32
    a91c:	00c00044 	movi	r3,1
    a920:	00000206 	br	a92c <__umodsi3+0x20>
    a924:	30000c26 	beq	r6,zero,a958 <__umodsi3+0x4c>
    a928:	28000516 	blt	r5,zero,a940 <__umodsi3+0x34>
    a92c:	294b883a 	add	r5,r5,r5
    a930:	31bfffc4 	addi	r6,r6,-1
    a934:	18c7883a 	add	r3,r3,r3
    a938:	293ffa36 	bltu	r5,r4,a924 <__umodsi3+0x18>
    a93c:	18000626 	beq	r3,zero,a958 <__umodsi3+0x4c>
    a940:	1806d07a 	srli	r3,r3,1
    a944:	11400136 	bltu	r2,r5,a94c <__umodsi3+0x40>
    a948:	1145c83a 	sub	r2,r2,r5
    a94c:	280ad07a 	srli	r5,r5,1
    a950:	183ffb1e 	bne	r3,zero,a940 <__umodsi3+0x34>
    a954:	f800283a 	ret
    a958:	f800283a 	ret
    a95c:	00c00044 	movi	r3,1
    a960:	003ff706 	br	a940 <__umodsi3+0x34>

0000a964 <__mulsi3>:
    a964:	0005883a 	mov	r2,zero
    a968:	20000726 	beq	r4,zero,a988 <__mulsi3+0x24>
    a96c:	20c0004c 	andi	r3,r4,1
    a970:	2008d07a 	srli	r4,r4,1
    a974:	18000126 	beq	r3,zero,a97c <__mulsi3+0x18>
    a978:	1145883a 	add	r2,r2,r5
    a97c:	294b883a 	add	r5,r5,r5
    a980:	203ffa1e 	bne	r4,zero,a96c <__mulsi3+0x8>
    a984:	f800283a 	ret
    a988:	f800283a 	ret

0000a98c <__adddf3>:
    a98c:	02c00434 	movhi	r11,16
    a990:	5affffc4 	addi	r11,r11,-1
    a994:	2806d7fa 	srli	r3,r5,31
    a998:	2ad4703a 	and	r10,r5,r11
    a99c:	3ad2703a 	and	r9,r7,r11
    a9a0:	3804d53a 	srli	r2,r7,20
    a9a4:	3018d77a 	srli	r12,r6,29
    a9a8:	280ad53a 	srli	r5,r5,20
    a9ac:	501490fa 	slli	r10,r10,3
    a9b0:	2010d77a 	srli	r8,r4,29
    a9b4:	481290fa 	slli	r9,r9,3
    a9b8:	380ed7fa 	srli	r7,r7,31
    a9bc:	defffb04 	addi	sp,sp,-20
    a9c0:	dc800215 	stw	r18,8(sp)
    a9c4:	dc400115 	stw	r17,4(sp)
    a9c8:	dc000015 	stw	r16,0(sp)
    a9cc:	dfc00415 	stw	ra,16(sp)
    a9d0:	dcc00315 	stw	r19,12(sp)
    a9d4:	1c803fcc 	andi	r18,r3,255
    a9d8:	2c01ffcc 	andi	r16,r5,2047
    a9dc:	5210b03a 	or	r8,r10,r8
    a9e0:	202290fa 	slli	r17,r4,3
    a9e4:	1081ffcc 	andi	r2,r2,2047
    a9e8:	4b12b03a 	or	r9,r9,r12
    a9ec:	300c90fa 	slli	r6,r6,3
    a9f0:	91c07526 	beq	r18,r7,abc8 <__adddf3+0x23c>
    a9f4:	8087c83a 	sub	r3,r16,r2
    a9f8:	00c0ab0e 	bge	zero,r3,aca8 <__adddf3+0x31c>
    a9fc:	10002a1e 	bne	r2,zero,aaa8 <__adddf3+0x11c>
    aa00:	4984b03a 	or	r2,r9,r6
    aa04:	1000961e 	bne	r2,zero,ac60 <__adddf3+0x2d4>
    aa08:	888001cc 	andi	r2,r17,7
    aa0c:	10000726 	beq	r2,zero,aa2c <__adddf3+0xa0>
    aa10:	888003cc 	andi	r2,r17,15
    aa14:	00c00104 	movi	r3,4
    aa18:	10c00426 	beq	r2,r3,aa2c <__adddf3+0xa0>
    aa1c:	88c7883a 	add	r3,r17,r3
    aa20:	1c63803a 	cmpltu	r17,r3,r17
    aa24:	4451883a 	add	r8,r8,r17
    aa28:	1823883a 	mov	r17,r3
    aa2c:	4080202c 	andhi	r2,r8,128
    aa30:	10005926 	beq	r2,zero,ab98 <__adddf3+0x20c>
    aa34:	84000044 	addi	r16,r16,1
    aa38:	0081ffc4 	movi	r2,2047
    aa3c:	8080ba26 	beq	r16,r2,ad28 <__adddf3+0x39c>
    aa40:	00bfe034 	movhi	r2,65408
    aa44:	10bfffc4 	addi	r2,r2,-1
    aa48:	4090703a 	and	r8,r8,r2
    aa4c:	4004977a 	slli	r2,r8,29
    aa50:	4010927a 	slli	r8,r8,9
    aa54:	8822d0fa 	srli	r17,r17,3
    aa58:	8401ffcc 	andi	r16,r16,2047
    aa5c:	4010d33a 	srli	r8,r8,12
    aa60:	9007883a 	mov	r3,r18
    aa64:	1444b03a 	or	r2,r2,r17
    aa68:	8401ffcc 	andi	r16,r16,2047
    aa6c:	8020953a 	slli	r16,r16,20
    aa70:	18c03fcc 	andi	r3,r3,255
    aa74:	01000434 	movhi	r4,16
    aa78:	213fffc4 	addi	r4,r4,-1
    aa7c:	180697fa 	slli	r3,r3,31
    aa80:	4110703a 	and	r8,r8,r4
    aa84:	4410b03a 	or	r8,r8,r16
    aa88:	40c6b03a 	or	r3,r8,r3
    aa8c:	dfc00417 	ldw	ra,16(sp)
    aa90:	dcc00317 	ldw	r19,12(sp)
    aa94:	dc800217 	ldw	r18,8(sp)
    aa98:	dc400117 	ldw	r17,4(sp)
    aa9c:	dc000017 	ldw	r16,0(sp)
    aaa0:	dec00504 	addi	sp,sp,20
    aaa4:	f800283a 	ret
    aaa8:	0081ffc4 	movi	r2,2047
    aaac:	80bfd626 	beq	r16,r2,aa08 <__adddf3+0x7c>
    aab0:	4a402034 	orhi	r9,r9,128
    aab4:	00800e04 	movi	r2,56
    aab8:	10c09f16 	blt	r2,r3,ad38 <__adddf3+0x3ac>
    aabc:	008007c4 	movi	r2,31
    aac0:	10c0c216 	blt	r2,r3,adcc <__adddf3+0x440>
    aac4:	00800804 	movi	r2,32
    aac8:	10c5c83a 	sub	r2,r2,r3
    aacc:	488a983a 	sll	r5,r9,r2
    aad0:	30c8d83a 	srl	r4,r6,r3
    aad4:	3084983a 	sll	r2,r6,r2
    aad8:	48c6d83a 	srl	r3,r9,r3
    aadc:	290cb03a 	or	r6,r5,r4
    aae0:	1004c03a 	cmpne	r2,r2,zero
    aae4:	308cb03a 	or	r6,r6,r2
    aae8:	898dc83a 	sub	r6,r17,r6
    aaec:	89a3803a 	cmpltu	r17,r17,r6
    aaf0:	40d1c83a 	sub	r8,r8,r3
    aaf4:	4451c83a 	sub	r8,r8,r17
    aaf8:	3023883a 	mov	r17,r6
    aafc:	4080202c 	andhi	r2,r8,128
    ab00:	10002326 	beq	r2,zero,ab90 <__adddf3+0x204>
    ab04:	04c02034 	movhi	r19,128
    ab08:	9cffffc4 	addi	r19,r19,-1
    ab0c:	44e6703a 	and	r19,r8,r19
    ab10:	98007626 	beq	r19,zero,acec <__adddf3+0x360>
    ab14:	9809883a 	mov	r4,r19
    ab18:	000d1cc0 	call	d1cc <__clzsi2>
    ab1c:	10fffe04 	addi	r3,r2,-8
    ab20:	010007c4 	movi	r4,31
    ab24:	20c07716 	blt	r4,r3,ad04 <__adddf3+0x378>
    ab28:	00800804 	movi	r2,32
    ab2c:	10c5c83a 	sub	r2,r2,r3
    ab30:	8884d83a 	srl	r2,r17,r2
    ab34:	98d0983a 	sll	r8,r19,r3
    ab38:	88e2983a 	sll	r17,r17,r3
    ab3c:	1204b03a 	or	r2,r2,r8
    ab40:	1c007416 	blt	r3,r16,ad14 <__adddf3+0x388>
    ab44:	1c21c83a 	sub	r16,r3,r16
    ab48:	82000044 	addi	r8,r16,1
    ab4c:	00c007c4 	movi	r3,31
    ab50:	1a009116 	blt	r3,r8,ad98 <__adddf3+0x40c>
    ab54:	00c00804 	movi	r3,32
    ab58:	1a07c83a 	sub	r3,r3,r8
    ab5c:	8a08d83a 	srl	r4,r17,r8
    ab60:	88e2983a 	sll	r17,r17,r3
    ab64:	10c6983a 	sll	r3,r2,r3
    ab68:	1210d83a 	srl	r8,r2,r8
    ab6c:	8804c03a 	cmpne	r2,r17,zero
    ab70:	1906b03a 	or	r3,r3,r4
    ab74:	18a2b03a 	or	r17,r3,r2
    ab78:	0021883a 	mov	r16,zero
    ab7c:	003fa206 	br	aa08 <__adddf3+0x7c>
    ab80:	1890b03a 	or	r8,r3,r2
    ab84:	40017d26 	beq	r8,zero,b17c <__adddf3+0x7f0>
    ab88:	1011883a 	mov	r8,r2
    ab8c:	1823883a 	mov	r17,r3
    ab90:	888001cc 	andi	r2,r17,7
    ab94:	103f9e1e 	bne	r2,zero,aa10 <__adddf3+0x84>
    ab98:	4004977a 	slli	r2,r8,29
    ab9c:	8822d0fa 	srli	r17,r17,3
    aba0:	4010d0fa 	srli	r8,r8,3
    aba4:	9007883a 	mov	r3,r18
    aba8:	1444b03a 	or	r2,r2,r17
    abac:	0101ffc4 	movi	r4,2047
    abb0:	81002426 	beq	r16,r4,ac44 <__adddf3+0x2b8>
    abb4:	8120703a 	and	r16,r16,r4
    abb8:	01000434 	movhi	r4,16
    abbc:	213fffc4 	addi	r4,r4,-1
    abc0:	4110703a 	and	r8,r8,r4
    abc4:	003fa806 	br	aa68 <__adddf3+0xdc>
    abc8:	8089c83a 	sub	r4,r16,r2
    abcc:	01005e0e 	bge	zero,r4,ad48 <__adddf3+0x3bc>
    abd0:	10002b26 	beq	r2,zero,ac80 <__adddf3+0x2f4>
    abd4:	0081ffc4 	movi	r2,2047
    abd8:	80bf8b26 	beq	r16,r2,aa08 <__adddf3+0x7c>
    abdc:	4a402034 	orhi	r9,r9,128
    abe0:	00800e04 	movi	r2,56
    abe4:	1100a40e 	bge	r2,r4,ae78 <__adddf3+0x4ec>
    abe8:	498cb03a 	or	r6,r9,r6
    abec:	300ac03a 	cmpne	r5,r6,zero
    abf0:	0013883a 	mov	r9,zero
    abf4:	2c4b883a 	add	r5,r5,r17
    abf8:	2c63803a 	cmpltu	r17,r5,r17
    abfc:	4a11883a 	add	r8,r9,r8
    ac00:	8a11883a 	add	r8,r17,r8
    ac04:	2823883a 	mov	r17,r5
    ac08:	4080202c 	andhi	r2,r8,128
    ac0c:	103fe026 	beq	r2,zero,ab90 <__adddf3+0x204>
    ac10:	84000044 	addi	r16,r16,1
    ac14:	0081ffc4 	movi	r2,2047
    ac18:	8080d226 	beq	r16,r2,af64 <__adddf3+0x5d8>
    ac1c:	00bfe034 	movhi	r2,65408
    ac20:	10bfffc4 	addi	r2,r2,-1
    ac24:	4090703a 	and	r8,r8,r2
    ac28:	880ad07a 	srli	r5,r17,1
    ac2c:	400897fa 	slli	r4,r8,31
    ac30:	88c0004c 	andi	r3,r17,1
    ac34:	28e2b03a 	or	r17,r5,r3
    ac38:	4010d07a 	srli	r8,r8,1
    ac3c:	2462b03a 	or	r17,r4,r17
    ac40:	003f7106 	br	aa08 <__adddf3+0x7c>
    ac44:	4088b03a 	or	r4,r8,r2
    ac48:	20014526 	beq	r4,zero,b160 <__adddf3+0x7d4>
    ac4c:	01000434 	movhi	r4,16
    ac50:	42000234 	orhi	r8,r8,8
    ac54:	213fffc4 	addi	r4,r4,-1
    ac58:	4110703a 	and	r8,r8,r4
    ac5c:	003f8206 	br	aa68 <__adddf3+0xdc>
    ac60:	18ffffc4 	addi	r3,r3,-1
    ac64:	1800491e 	bne	r3,zero,ad8c <__adddf3+0x400>
    ac68:	898bc83a 	sub	r5,r17,r6
    ac6c:	8963803a 	cmpltu	r17,r17,r5
    ac70:	4251c83a 	sub	r8,r8,r9
    ac74:	4451c83a 	sub	r8,r8,r17
    ac78:	2823883a 	mov	r17,r5
    ac7c:	003f9f06 	br	aafc <__adddf3+0x170>
    ac80:	4984b03a 	or	r2,r9,r6
    ac84:	103f6026 	beq	r2,zero,aa08 <__adddf3+0x7c>
    ac88:	213fffc4 	addi	r4,r4,-1
    ac8c:	2000931e 	bne	r4,zero,aedc <__adddf3+0x550>
    ac90:	898d883a 	add	r6,r17,r6
    ac94:	3463803a 	cmpltu	r17,r6,r17
    ac98:	4251883a 	add	r8,r8,r9
    ac9c:	8a11883a 	add	r8,r17,r8
    aca0:	3023883a 	mov	r17,r6
    aca4:	003fd806 	br	ac08 <__adddf3+0x27c>
    aca8:	1800541e 	bne	r3,zero,adfc <__adddf3+0x470>
    acac:	80800044 	addi	r2,r16,1
    acb0:	1081ffcc 	andi	r2,r2,2047
    acb4:	00c00044 	movi	r3,1
    acb8:	1880a00e 	bge	r3,r2,af3c <__adddf3+0x5b0>
    acbc:	8989c83a 	sub	r4,r17,r6
    acc0:	8905803a 	cmpltu	r2,r17,r4
    acc4:	4267c83a 	sub	r19,r8,r9
    acc8:	98a7c83a 	sub	r19,r19,r2
    accc:	9880202c 	andhi	r2,r19,128
    acd0:	10006326 	beq	r2,zero,ae60 <__adddf3+0x4d4>
    acd4:	3463c83a 	sub	r17,r6,r17
    acd8:	4a07c83a 	sub	r3,r9,r8
    acdc:	344d803a 	cmpltu	r6,r6,r17
    ace0:	19a7c83a 	sub	r19,r3,r6
    ace4:	3825883a 	mov	r18,r7
    ace8:	983f8a1e 	bne	r19,zero,ab14 <__adddf3+0x188>
    acec:	8809883a 	mov	r4,r17
    acf0:	000d1cc0 	call	d1cc <__clzsi2>
    acf4:	10800804 	addi	r2,r2,32
    acf8:	10fffe04 	addi	r3,r2,-8
    acfc:	010007c4 	movi	r4,31
    ad00:	20ff890e 	bge	r4,r3,ab28 <__adddf3+0x19c>
    ad04:	10bff604 	addi	r2,r2,-40
    ad08:	8884983a 	sll	r2,r17,r2
    ad0c:	0023883a 	mov	r17,zero
    ad10:	1c3f8c0e 	bge	r3,r16,ab44 <__adddf3+0x1b8>
    ad14:	023fe034 	movhi	r8,65408
    ad18:	423fffc4 	addi	r8,r8,-1
    ad1c:	80e1c83a 	sub	r16,r16,r3
    ad20:	1210703a 	and	r8,r2,r8
    ad24:	003f3806 	br	aa08 <__adddf3+0x7c>
    ad28:	9007883a 	mov	r3,r18
    ad2c:	0011883a 	mov	r8,zero
    ad30:	0005883a 	mov	r2,zero
    ad34:	003f4c06 	br	aa68 <__adddf3+0xdc>
    ad38:	498cb03a 	or	r6,r9,r6
    ad3c:	300cc03a 	cmpne	r6,r6,zero
    ad40:	0007883a 	mov	r3,zero
    ad44:	003f6806 	br	aae8 <__adddf3+0x15c>
    ad48:	20009c1e 	bne	r4,zero,afbc <__adddf3+0x630>
    ad4c:	80800044 	addi	r2,r16,1
    ad50:	1141ffcc 	andi	r5,r2,2047
    ad54:	01000044 	movi	r4,1
    ad58:	2140670e 	bge	r4,r5,aef8 <__adddf3+0x56c>
    ad5c:	0101ffc4 	movi	r4,2047
    ad60:	11007f26 	beq	r2,r4,af60 <__adddf3+0x5d4>
    ad64:	898d883a 	add	r6,r17,r6
    ad68:	4247883a 	add	r3,r8,r9
    ad6c:	3451803a 	cmpltu	r8,r6,r17
    ad70:	40d1883a 	add	r8,r8,r3
    ad74:	402297fa 	slli	r17,r8,31
    ad78:	300cd07a 	srli	r6,r6,1
    ad7c:	4010d07a 	srli	r8,r8,1
    ad80:	1021883a 	mov	r16,r2
    ad84:	89a2b03a 	or	r17,r17,r6
    ad88:	003f1f06 	br	aa08 <__adddf3+0x7c>
    ad8c:	0081ffc4 	movi	r2,2047
    ad90:	80bf481e 	bne	r16,r2,aab4 <__adddf3+0x128>
    ad94:	003f1c06 	br	aa08 <__adddf3+0x7c>
    ad98:	843ff844 	addi	r16,r16,-31
    ad9c:	01000804 	movi	r4,32
    ada0:	1406d83a 	srl	r3,r2,r16
    ada4:	41005026 	beq	r8,r4,aee8 <__adddf3+0x55c>
    ada8:	01001004 	movi	r4,64
    adac:	2211c83a 	sub	r8,r4,r8
    adb0:	1204983a 	sll	r2,r2,r8
    adb4:	88a2b03a 	or	r17,r17,r2
    adb8:	8822c03a 	cmpne	r17,r17,zero
    adbc:	1c62b03a 	or	r17,r3,r17
    adc0:	0011883a 	mov	r8,zero
    adc4:	0021883a 	mov	r16,zero
    adc8:	003f7106 	br	ab90 <__adddf3+0x204>
    adcc:	193ff804 	addi	r4,r3,-32
    add0:	00800804 	movi	r2,32
    add4:	4908d83a 	srl	r4,r9,r4
    add8:	18804526 	beq	r3,r2,aef0 <__adddf3+0x564>
    addc:	00801004 	movi	r2,64
    ade0:	10c5c83a 	sub	r2,r2,r3
    ade4:	4886983a 	sll	r3,r9,r2
    ade8:	198cb03a 	or	r6,r3,r6
    adec:	300cc03a 	cmpne	r6,r6,zero
    adf0:	218cb03a 	or	r6,r4,r6
    adf4:	0007883a 	mov	r3,zero
    adf8:	003f3b06 	br	aae8 <__adddf3+0x15c>
    adfc:	80002a26 	beq	r16,zero,aea8 <__adddf3+0x51c>
    ae00:	0101ffc4 	movi	r4,2047
    ae04:	11006826 	beq	r2,r4,afa8 <__adddf3+0x61c>
    ae08:	00c7c83a 	sub	r3,zero,r3
    ae0c:	42002034 	orhi	r8,r8,128
    ae10:	01000e04 	movi	r4,56
    ae14:	20c07c16 	blt	r4,r3,b008 <__adddf3+0x67c>
    ae18:	010007c4 	movi	r4,31
    ae1c:	20c0da16 	blt	r4,r3,b188 <__adddf3+0x7fc>
    ae20:	01000804 	movi	r4,32
    ae24:	20c9c83a 	sub	r4,r4,r3
    ae28:	4114983a 	sll	r10,r8,r4
    ae2c:	88cad83a 	srl	r5,r17,r3
    ae30:	8908983a 	sll	r4,r17,r4
    ae34:	40c6d83a 	srl	r3,r8,r3
    ae38:	5162b03a 	or	r17,r10,r5
    ae3c:	2008c03a 	cmpne	r4,r4,zero
    ae40:	8922b03a 	or	r17,r17,r4
    ae44:	3463c83a 	sub	r17,r6,r17
    ae48:	48c7c83a 	sub	r3,r9,r3
    ae4c:	344d803a 	cmpltu	r6,r6,r17
    ae50:	1991c83a 	sub	r8,r3,r6
    ae54:	1021883a 	mov	r16,r2
    ae58:	3825883a 	mov	r18,r7
    ae5c:	003f2706 	br	aafc <__adddf3+0x170>
    ae60:	24d0b03a 	or	r8,r4,r19
    ae64:	40001b1e 	bne	r8,zero,aed4 <__adddf3+0x548>
    ae68:	0005883a 	mov	r2,zero
    ae6c:	0007883a 	mov	r3,zero
    ae70:	0021883a 	mov	r16,zero
    ae74:	003f4d06 	br	abac <__adddf3+0x220>
    ae78:	008007c4 	movi	r2,31
    ae7c:	11003c16 	blt	r2,r4,af70 <__adddf3+0x5e4>
    ae80:	00800804 	movi	r2,32
    ae84:	1105c83a 	sub	r2,r2,r4
    ae88:	488e983a 	sll	r7,r9,r2
    ae8c:	310ad83a 	srl	r5,r6,r4
    ae90:	3084983a 	sll	r2,r6,r2
    ae94:	4912d83a 	srl	r9,r9,r4
    ae98:	394ab03a 	or	r5,r7,r5
    ae9c:	1004c03a 	cmpne	r2,r2,zero
    aea0:	288ab03a 	or	r5,r5,r2
    aea4:	003f5306 	br	abf4 <__adddf3+0x268>
    aea8:	4448b03a 	or	r4,r8,r17
    aeac:	20003e26 	beq	r4,zero,afa8 <__adddf3+0x61c>
    aeb0:	00c6303a 	nor	r3,zero,r3
    aeb4:	18003a1e 	bne	r3,zero,afa0 <__adddf3+0x614>
    aeb8:	3463c83a 	sub	r17,r6,r17
    aebc:	4a07c83a 	sub	r3,r9,r8
    aec0:	344d803a 	cmpltu	r6,r6,r17
    aec4:	1991c83a 	sub	r8,r3,r6
    aec8:	1021883a 	mov	r16,r2
    aecc:	3825883a 	mov	r18,r7
    aed0:	003f0a06 	br	aafc <__adddf3+0x170>
    aed4:	2023883a 	mov	r17,r4
    aed8:	003f0d06 	br	ab10 <__adddf3+0x184>
    aedc:	0081ffc4 	movi	r2,2047
    aee0:	80bf3f1e 	bne	r16,r2,abe0 <__adddf3+0x254>
    aee4:	003ec806 	br	aa08 <__adddf3+0x7c>
    aee8:	0005883a 	mov	r2,zero
    aeec:	003fb106 	br	adb4 <__adddf3+0x428>
    aef0:	0007883a 	mov	r3,zero
    aef4:	003fbc06 	br	ade8 <__adddf3+0x45c>
    aef8:	4444b03a 	or	r2,r8,r17
    aefc:	8000871e 	bne	r16,zero,b11c <__adddf3+0x790>
    af00:	1000ba26 	beq	r2,zero,b1ec <__adddf3+0x860>
    af04:	4984b03a 	or	r2,r9,r6
    af08:	103ebf26 	beq	r2,zero,aa08 <__adddf3+0x7c>
    af0c:	8985883a 	add	r2,r17,r6
    af10:	4247883a 	add	r3,r8,r9
    af14:	1451803a 	cmpltu	r8,r2,r17
    af18:	40d1883a 	add	r8,r8,r3
    af1c:	40c0202c 	andhi	r3,r8,128
    af20:	1023883a 	mov	r17,r2
    af24:	183f1a26 	beq	r3,zero,ab90 <__adddf3+0x204>
    af28:	00bfe034 	movhi	r2,65408
    af2c:	10bfffc4 	addi	r2,r2,-1
    af30:	2021883a 	mov	r16,r4
    af34:	4090703a 	and	r8,r8,r2
    af38:	003eb306 	br	aa08 <__adddf3+0x7c>
    af3c:	4444b03a 	or	r2,r8,r17
    af40:	8000291e 	bne	r16,zero,afe8 <__adddf3+0x65c>
    af44:	10004b1e 	bne	r2,zero,b074 <__adddf3+0x6e8>
    af48:	4990b03a 	or	r8,r9,r6
    af4c:	40008b26 	beq	r8,zero,b17c <__adddf3+0x7f0>
    af50:	4811883a 	mov	r8,r9
    af54:	3023883a 	mov	r17,r6
    af58:	3825883a 	mov	r18,r7
    af5c:	003eaa06 	br	aa08 <__adddf3+0x7c>
    af60:	1021883a 	mov	r16,r2
    af64:	0011883a 	mov	r8,zero
    af68:	0005883a 	mov	r2,zero
    af6c:	003f0f06 	br	abac <__adddf3+0x220>
    af70:	217ff804 	addi	r5,r4,-32
    af74:	00800804 	movi	r2,32
    af78:	494ad83a 	srl	r5,r9,r5
    af7c:	20807d26 	beq	r4,r2,b174 <__adddf3+0x7e8>
    af80:	00801004 	movi	r2,64
    af84:	1109c83a 	sub	r4,r2,r4
    af88:	4912983a 	sll	r9,r9,r4
    af8c:	498cb03a 	or	r6,r9,r6
    af90:	300cc03a 	cmpne	r6,r6,zero
    af94:	298ab03a 	or	r5,r5,r6
    af98:	0013883a 	mov	r9,zero
    af9c:	003f1506 	br	abf4 <__adddf3+0x268>
    afa0:	0101ffc4 	movi	r4,2047
    afa4:	113f9a1e 	bne	r2,r4,ae10 <__adddf3+0x484>
    afa8:	4811883a 	mov	r8,r9
    afac:	3023883a 	mov	r17,r6
    afb0:	1021883a 	mov	r16,r2
    afb4:	3825883a 	mov	r18,r7
    afb8:	003e9306 	br	aa08 <__adddf3+0x7c>
    afbc:	8000161e 	bne	r16,zero,b018 <__adddf3+0x68c>
    afc0:	444ab03a 	or	r5,r8,r17
    afc4:	28005126 	beq	r5,zero,b10c <__adddf3+0x780>
    afc8:	0108303a 	nor	r4,zero,r4
    afcc:	20004d1e 	bne	r4,zero,b104 <__adddf3+0x778>
    afd0:	89a3883a 	add	r17,r17,r6
    afd4:	4253883a 	add	r9,r8,r9
    afd8:	898d803a 	cmpltu	r6,r17,r6
    afdc:	3251883a 	add	r8,r6,r9
    afe0:	1021883a 	mov	r16,r2
    afe4:	003f0806 	br	ac08 <__adddf3+0x27c>
    afe8:	1000301e 	bne	r2,zero,b0ac <__adddf3+0x720>
    afec:	4984b03a 	or	r2,r9,r6
    aff0:	10007126 	beq	r2,zero,b1b8 <__adddf3+0x82c>
    aff4:	4811883a 	mov	r8,r9
    aff8:	3023883a 	mov	r17,r6
    affc:	3825883a 	mov	r18,r7
    b000:	0401ffc4 	movi	r16,2047
    b004:	003e8006 	br	aa08 <__adddf3+0x7c>
    b008:	4462b03a 	or	r17,r8,r17
    b00c:	8822c03a 	cmpne	r17,r17,zero
    b010:	0007883a 	mov	r3,zero
    b014:	003f8b06 	br	ae44 <__adddf3+0x4b8>
    b018:	0141ffc4 	movi	r5,2047
    b01c:	11403b26 	beq	r2,r5,b10c <__adddf3+0x780>
    b020:	0109c83a 	sub	r4,zero,r4
    b024:	42002034 	orhi	r8,r8,128
    b028:	01400e04 	movi	r5,56
    b02c:	29006716 	blt	r5,r4,b1cc <__adddf3+0x840>
    b030:	014007c4 	movi	r5,31
    b034:	29007016 	blt	r5,r4,b1f8 <__adddf3+0x86c>
    b038:	01400804 	movi	r5,32
    b03c:	290bc83a 	sub	r5,r5,r4
    b040:	4154983a 	sll	r10,r8,r5
    b044:	890ed83a 	srl	r7,r17,r4
    b048:	894a983a 	sll	r5,r17,r5
    b04c:	4108d83a 	srl	r4,r8,r4
    b050:	51e2b03a 	or	r17,r10,r7
    b054:	280ac03a 	cmpne	r5,r5,zero
    b058:	8962b03a 	or	r17,r17,r5
    b05c:	89a3883a 	add	r17,r17,r6
    b060:	2253883a 	add	r9,r4,r9
    b064:	898d803a 	cmpltu	r6,r17,r6
    b068:	3251883a 	add	r8,r6,r9
    b06c:	1021883a 	mov	r16,r2
    b070:	003ee506 	br	ac08 <__adddf3+0x27c>
    b074:	4984b03a 	or	r2,r9,r6
    b078:	103e6326 	beq	r2,zero,aa08 <__adddf3+0x7c>
    b07c:	8987c83a 	sub	r3,r17,r6
    b080:	88c9803a 	cmpltu	r4,r17,r3
    b084:	4245c83a 	sub	r2,r8,r9
    b088:	1105c83a 	sub	r2,r2,r4
    b08c:	1100202c 	andhi	r4,r2,128
    b090:	203ebb26 	beq	r4,zero,ab80 <__adddf3+0x1f4>
    b094:	3463c83a 	sub	r17,r6,r17
    b098:	4a07c83a 	sub	r3,r9,r8
    b09c:	344d803a 	cmpltu	r6,r6,r17
    b0a0:	1991c83a 	sub	r8,r3,r6
    b0a4:	3825883a 	mov	r18,r7
    b0a8:	003e5706 	br	aa08 <__adddf3+0x7c>
    b0ac:	4984b03a 	or	r2,r9,r6
    b0b0:	10002e26 	beq	r2,zero,b16c <__adddf3+0x7e0>
    b0b4:	4004d0fa 	srli	r2,r8,3
    b0b8:	8822d0fa 	srli	r17,r17,3
    b0bc:	4010977a 	slli	r8,r8,29
    b0c0:	10c0022c 	andhi	r3,r2,8
    b0c4:	4462b03a 	or	r17,r8,r17
    b0c8:	18000826 	beq	r3,zero,b0ec <__adddf3+0x760>
    b0cc:	4808d0fa 	srli	r4,r9,3
    b0d0:	20c0022c 	andhi	r3,r4,8
    b0d4:	1800051e 	bne	r3,zero,b0ec <__adddf3+0x760>
    b0d8:	300cd0fa 	srli	r6,r6,3
    b0dc:	4806977a 	slli	r3,r9,29
    b0e0:	2005883a 	mov	r2,r4
    b0e4:	3825883a 	mov	r18,r7
    b0e8:	19a2b03a 	or	r17,r3,r6
    b0ec:	8810d77a 	srli	r8,r17,29
    b0f0:	100490fa 	slli	r2,r2,3
    b0f4:	882290fa 	slli	r17,r17,3
    b0f8:	0401ffc4 	movi	r16,2047
    b0fc:	4090b03a 	or	r8,r8,r2
    b100:	003e4106 	br	aa08 <__adddf3+0x7c>
    b104:	0141ffc4 	movi	r5,2047
    b108:	117fc71e 	bne	r2,r5,b028 <__adddf3+0x69c>
    b10c:	4811883a 	mov	r8,r9
    b110:	3023883a 	mov	r17,r6
    b114:	1021883a 	mov	r16,r2
    b118:	003e3b06 	br	aa08 <__adddf3+0x7c>
    b11c:	10002f26 	beq	r2,zero,b1dc <__adddf3+0x850>
    b120:	4984b03a 	or	r2,r9,r6
    b124:	10001126 	beq	r2,zero,b16c <__adddf3+0x7e0>
    b128:	4004d0fa 	srli	r2,r8,3
    b12c:	8822d0fa 	srli	r17,r17,3
    b130:	4010977a 	slli	r8,r8,29
    b134:	10c0022c 	andhi	r3,r2,8
    b138:	4462b03a 	or	r17,r8,r17
    b13c:	183feb26 	beq	r3,zero,b0ec <__adddf3+0x760>
    b140:	4808d0fa 	srli	r4,r9,3
    b144:	20c0022c 	andhi	r3,r4,8
    b148:	183fe81e 	bne	r3,zero,b0ec <__adddf3+0x760>
    b14c:	300cd0fa 	srli	r6,r6,3
    b150:	4806977a 	slli	r3,r9,29
    b154:	2005883a 	mov	r2,r4
    b158:	19a2b03a 	or	r17,r3,r6
    b15c:	003fe306 	br	b0ec <__adddf3+0x760>
    b160:	0011883a 	mov	r8,zero
    b164:	0005883a 	mov	r2,zero
    b168:	003e3f06 	br	aa68 <__adddf3+0xdc>
    b16c:	0401ffc4 	movi	r16,2047
    b170:	003e2506 	br	aa08 <__adddf3+0x7c>
    b174:	0013883a 	mov	r9,zero
    b178:	003f8406 	br	af8c <__adddf3+0x600>
    b17c:	0005883a 	mov	r2,zero
    b180:	0007883a 	mov	r3,zero
    b184:	003e8906 	br	abac <__adddf3+0x220>
    b188:	197ff804 	addi	r5,r3,-32
    b18c:	01000804 	movi	r4,32
    b190:	414ad83a 	srl	r5,r8,r5
    b194:	19002426 	beq	r3,r4,b228 <__adddf3+0x89c>
    b198:	01001004 	movi	r4,64
    b19c:	20c7c83a 	sub	r3,r4,r3
    b1a0:	40c6983a 	sll	r3,r8,r3
    b1a4:	1c46b03a 	or	r3,r3,r17
    b1a8:	1806c03a 	cmpne	r3,r3,zero
    b1ac:	28e2b03a 	or	r17,r5,r3
    b1b0:	0007883a 	mov	r3,zero
    b1b4:	003f2306 	br	ae44 <__adddf3+0x4b8>
    b1b8:	0007883a 	mov	r3,zero
    b1bc:	5811883a 	mov	r8,r11
    b1c0:	00bfffc4 	movi	r2,-1
    b1c4:	0401ffc4 	movi	r16,2047
    b1c8:	003e7806 	br	abac <__adddf3+0x220>
    b1cc:	4462b03a 	or	r17,r8,r17
    b1d0:	8822c03a 	cmpne	r17,r17,zero
    b1d4:	0009883a 	mov	r4,zero
    b1d8:	003fa006 	br	b05c <__adddf3+0x6d0>
    b1dc:	4811883a 	mov	r8,r9
    b1e0:	3023883a 	mov	r17,r6
    b1e4:	0401ffc4 	movi	r16,2047
    b1e8:	003e0706 	br	aa08 <__adddf3+0x7c>
    b1ec:	4811883a 	mov	r8,r9
    b1f0:	3023883a 	mov	r17,r6
    b1f4:	003e0406 	br	aa08 <__adddf3+0x7c>
    b1f8:	21fff804 	addi	r7,r4,-32
    b1fc:	01400804 	movi	r5,32
    b200:	41ced83a 	srl	r7,r8,r7
    b204:	21400a26 	beq	r4,r5,b230 <__adddf3+0x8a4>
    b208:	01401004 	movi	r5,64
    b20c:	2909c83a 	sub	r4,r5,r4
    b210:	4108983a 	sll	r4,r8,r4
    b214:	2448b03a 	or	r4,r4,r17
    b218:	2008c03a 	cmpne	r4,r4,zero
    b21c:	3922b03a 	or	r17,r7,r4
    b220:	0009883a 	mov	r4,zero
    b224:	003f8d06 	br	b05c <__adddf3+0x6d0>
    b228:	0007883a 	mov	r3,zero
    b22c:	003fdd06 	br	b1a4 <__adddf3+0x818>
    b230:	0009883a 	mov	r4,zero
    b234:	003ff706 	br	b214 <__adddf3+0x888>

0000b238 <__divdf3>:
    b238:	defff004 	addi	sp,sp,-64
    b23c:	dc800815 	stw	r18,32(sp)
    b240:	2824d53a 	srli	r18,r5,20
    b244:	dd800c15 	stw	r22,48(sp)
    b248:	282cd7fa 	srli	r22,r5,31
    b24c:	dc000615 	stw	r16,24(sp)
    b250:	04000434 	movhi	r16,16
    b254:	843fffc4 	addi	r16,r16,-1
    b258:	dfc00f15 	stw	ra,60(sp)
    b25c:	df000e15 	stw	fp,56(sp)
    b260:	ddc00d15 	stw	r23,52(sp)
    b264:	dd400b15 	stw	r21,44(sp)
    b268:	dd000a15 	stw	r20,40(sp)
    b26c:	dcc00915 	stw	r19,36(sp)
    b270:	dc400715 	stw	r17,28(sp)
    b274:	9481ffcc 	andi	r18,r18,2047
    b278:	2c20703a 	and	r16,r5,r16
    b27c:	b2003fcc 	andi	r8,r22,255
    b280:	90006126 	beq	r18,zero,b408 <__divdf3+0x1d0>
    b284:	0081ffc4 	movi	r2,2047
    b288:	202b883a 	mov	r21,r4
    b28c:	90803726 	beq	r18,r2,b36c <__divdf3+0x134>
    b290:	80800434 	orhi	r2,r16,16
    b294:	100490fa 	slli	r2,r2,3
    b298:	2020d77a 	srli	r16,r4,29
    b29c:	202a90fa 	slli	r21,r4,3
    b2a0:	94bf0044 	addi	r18,r18,-1023
    b2a4:	80a0b03a 	or	r16,r16,r2
    b2a8:	0013883a 	mov	r9,zero
    b2ac:	000b883a 	mov	r5,zero
    b2b0:	3806d53a 	srli	r3,r7,20
    b2b4:	382ed7fa 	srli	r23,r7,31
    b2b8:	04400434 	movhi	r17,16
    b2bc:	8c7fffc4 	addi	r17,r17,-1
    b2c0:	18c1ffcc 	andi	r3,r3,2047
    b2c4:	3029883a 	mov	r20,r6
    b2c8:	3c62703a 	and	r17,r7,r17
    b2cc:	bf003fcc 	andi	fp,r23,255
    b2d0:	18006e26 	beq	r3,zero,b48c <__divdf3+0x254>
    b2d4:	0081ffc4 	movi	r2,2047
    b2d8:	18806626 	beq	r3,r2,b474 <__divdf3+0x23c>
    b2dc:	88800434 	orhi	r2,r17,16
    b2e0:	100490fa 	slli	r2,r2,3
    b2e4:	3022d77a 	srli	r17,r6,29
    b2e8:	302890fa 	slli	r20,r6,3
    b2ec:	18ff0044 	addi	r3,r3,-1023
    b2f0:	88a2b03a 	or	r17,r17,r2
    b2f4:	000f883a 	mov	r7,zero
    b2f8:	b5e6f03a 	xor	r19,r22,r23
    b2fc:	3a4cb03a 	or	r6,r7,r9
    b300:	008003c4 	movi	r2,15
    b304:	9809883a 	mov	r4,r19
    b308:	90c7c83a 	sub	r3,r18,r3
    b30c:	9cc03fcc 	andi	r19,r19,255
    b310:	11809636 	bltu	r2,r6,b56c <__divdf3+0x334>
    b314:	300c90ba 	slli	r6,r6,2
    b318:	00800074 	movhi	r2,1
    b31c:	10accb04 	addi	r2,r2,-19668
    b320:	308d883a 	add	r6,r6,r2
    b324:	30800017 	ldw	r2,0(r6)
    b328:	1000683a 	jmp	r2
    b32c:	0000b56c 	andhi	zero,zero,725
    b330:	0000b3a4 	muli	zero,zero,718
    b334:	0000b55c 	xori	zero,zero,725
    b338:	0000b398 	cmpnei	zero,zero,718
    b33c:	0000b55c 	xori	zero,zero,725
    b340:	0000b530 	cmpltui	zero,zero,724
    b344:	0000b55c 	xori	zero,zero,725
    b348:	0000b398 	cmpnei	zero,zero,718
    b34c:	0000b3a4 	muli	zero,zero,718
    b350:	0000b3a4 	muli	zero,zero,718
    b354:	0000b530 	cmpltui	zero,zero,724
    b358:	0000b398 	cmpnei	zero,zero,718
    b35c:	0000b388 	cmpgei	zero,zero,718
    b360:	0000b388 	cmpgei	zero,zero,718
    b364:	0000b388 	cmpgei	zero,zero,718
    b368:	0000b8f4 	movhi	zero,739
    b36c:	2404b03a 	or	r2,r4,r16
    b370:	10006c1e 	bne	r2,zero,b524 <__divdf3+0x2ec>
    b374:	02400204 	movi	r9,8
    b378:	0021883a 	mov	r16,zero
    b37c:	002b883a 	mov	r21,zero
    b380:	01400084 	movi	r5,2
    b384:	003fca06 	br	b2b0 <__divdf3+0x78>
    b388:	8023883a 	mov	r17,r16
    b38c:	a829883a 	mov	r20,r21
    b390:	4039883a 	mov	fp,r8
    b394:	280f883a 	mov	r7,r5
    b398:	00800084 	movi	r2,2
    b39c:	3881601e 	bne	r7,r2,b920 <__divdf3+0x6e8>
    b3a0:	e027883a 	mov	r19,fp
    b3a4:	9900004c 	andi	r4,r19,1
    b3a8:	0081ffc4 	movi	r2,2047
    b3ac:	0021883a 	mov	r16,zero
    b3b0:	002b883a 	mov	r21,zero
    b3b4:	1004953a 	slli	r2,r2,20
    b3b8:	20c03fcc 	andi	r3,r4,255
    b3bc:	01400434 	movhi	r5,16
    b3c0:	297fffc4 	addi	r5,r5,-1
    b3c4:	180697fa 	slli	r3,r3,31
    b3c8:	8160703a 	and	r16,r16,r5
    b3cc:	80a0b03a 	or	r16,r16,r2
    b3d0:	80c6b03a 	or	r3,r16,r3
    b3d4:	a805883a 	mov	r2,r21
    b3d8:	dfc00f17 	ldw	ra,60(sp)
    b3dc:	df000e17 	ldw	fp,56(sp)
    b3e0:	ddc00d17 	ldw	r23,52(sp)
    b3e4:	dd800c17 	ldw	r22,48(sp)
    b3e8:	dd400b17 	ldw	r21,44(sp)
    b3ec:	dd000a17 	ldw	r20,40(sp)
    b3f0:	dcc00917 	ldw	r19,36(sp)
    b3f4:	dc800817 	ldw	r18,32(sp)
    b3f8:	dc400717 	ldw	r17,28(sp)
    b3fc:	dc000617 	ldw	r16,24(sp)
    b400:	dec01004 	addi	sp,sp,64
    b404:	f800283a 	ret
    b408:	2404b03a 	or	r2,r4,r16
    b40c:	2023883a 	mov	r17,r4
    b410:	10003f26 	beq	r2,zero,b510 <__divdf3+0x2d8>
    b414:	80015e26 	beq	r16,zero,b990 <__divdf3+0x758>
    b418:	8009883a 	mov	r4,r16
    b41c:	d9800215 	stw	r6,8(sp)
    b420:	d9c00515 	stw	r7,20(sp)
    b424:	da000415 	stw	r8,16(sp)
    b428:	000d1cc0 	call	d1cc <__clzsi2>
    b42c:	d9800217 	ldw	r6,8(sp)
    b430:	d9c00517 	ldw	r7,20(sp)
    b434:	da000417 	ldw	r8,16(sp)
    b438:	113ffd44 	addi	r4,r2,-11
    b43c:	00c00704 	movi	r3,28
    b440:	19014f16 	blt	r3,r4,b980 <__divdf3+0x748>
    b444:	00c00744 	movi	r3,29
    b448:	157ffe04 	addi	r21,r2,-8
    b44c:	1907c83a 	sub	r3,r3,r4
    b450:	8560983a 	sll	r16,r16,r21
    b454:	88c6d83a 	srl	r3,r17,r3
    b458:	8d6a983a 	sll	r21,r17,r21
    b45c:	1c20b03a 	or	r16,r3,r16
    b460:	1080fcc4 	addi	r2,r2,1011
    b464:	00a5c83a 	sub	r18,zero,r2
    b468:	0013883a 	mov	r9,zero
    b46c:	000b883a 	mov	r5,zero
    b470:	003f8f06 	br	b2b0 <__divdf3+0x78>
    b474:	3444b03a 	or	r2,r6,r17
    b478:	1000231e 	bne	r2,zero,b508 <__divdf3+0x2d0>
    b47c:	0023883a 	mov	r17,zero
    b480:	0029883a 	mov	r20,zero
    b484:	01c00084 	movi	r7,2
    b488:	003f9b06 	br	b2f8 <__divdf3+0xc0>
    b48c:	3444b03a 	or	r2,r6,r17
    b490:	10001926 	beq	r2,zero,b4f8 <__divdf3+0x2c0>
    b494:	88014b26 	beq	r17,zero,b9c4 <__divdf3+0x78c>
    b498:	8809883a 	mov	r4,r17
    b49c:	d9400115 	stw	r5,4(sp)
    b4a0:	d9800215 	stw	r6,8(sp)
    b4a4:	da000415 	stw	r8,16(sp)
    b4a8:	da400315 	stw	r9,12(sp)
    b4ac:	000d1cc0 	call	d1cc <__clzsi2>
    b4b0:	d9400117 	ldw	r5,4(sp)
    b4b4:	d9800217 	ldw	r6,8(sp)
    b4b8:	da000417 	ldw	r8,16(sp)
    b4bc:	da400317 	ldw	r9,12(sp)
    b4c0:	113ffd44 	addi	r4,r2,-11
    b4c4:	00c00704 	movi	r3,28
    b4c8:	19013a16 	blt	r3,r4,b9b4 <__divdf3+0x77c>
    b4cc:	00c00744 	movi	r3,29
    b4d0:	153ffe04 	addi	r20,r2,-8
    b4d4:	1907c83a 	sub	r3,r3,r4
    b4d8:	8d22983a 	sll	r17,r17,r20
    b4dc:	30c6d83a 	srl	r3,r6,r3
    b4e0:	3528983a 	sll	r20,r6,r20
    b4e4:	1c62b03a 	or	r17,r3,r17
    b4e8:	1080fcc4 	addi	r2,r2,1011
    b4ec:	0087c83a 	sub	r3,zero,r2
    b4f0:	000f883a 	mov	r7,zero
    b4f4:	003f8006 	br	b2f8 <__divdf3+0xc0>
    b4f8:	0023883a 	mov	r17,zero
    b4fc:	0029883a 	mov	r20,zero
    b500:	01c00044 	movi	r7,1
    b504:	003f7c06 	br	b2f8 <__divdf3+0xc0>
    b508:	01c000c4 	movi	r7,3
    b50c:	003f7a06 	br	b2f8 <__divdf3+0xc0>
    b510:	02400104 	movi	r9,4
    b514:	0021883a 	mov	r16,zero
    b518:	002b883a 	mov	r21,zero
    b51c:	01400044 	movi	r5,1
    b520:	003f6306 	br	b2b0 <__divdf3+0x78>
    b524:	02400304 	movi	r9,12
    b528:	014000c4 	movi	r5,3
    b52c:	003f6006 	br	b2b0 <__divdf3+0x78>
    b530:	04000434 	movhi	r16,16
    b534:	0009883a 	mov	r4,zero
    b538:	843fffc4 	addi	r16,r16,-1
    b53c:	057fffc4 	movi	r21,-1
    b540:	0081ffc4 	movi	r2,2047
    b544:	003f9b06 	br	b3b4 <__divdf3+0x17c>
    b548:	00c00044 	movi	r3,1
    b54c:	1887c83a 	sub	r3,r3,r2
    b550:	01000e04 	movi	r4,56
    b554:	20c1530e 	bge	r4,r3,baa4 <__divdf3+0x86c>
    b558:	9900004c 	andi	r4,r19,1
    b55c:	0005883a 	mov	r2,zero
    b560:	0021883a 	mov	r16,zero
    b564:	002b883a 	mov	r21,zero
    b568:	003f9206 	br	b3b4 <__divdf3+0x17c>
    b56c:	8c012e36 	bltu	r17,r16,ba28 <__divdf3+0x7f0>
    b570:	84412c26 	beq	r16,r17,ba24 <__divdf3+0x7ec>
    b574:	a82f883a 	mov	r23,r21
    b578:	18ffffc4 	addi	r3,r3,-1
    b57c:	002b883a 	mov	r21,zero
    b580:	a004d63a 	srli	r2,r20,24
    b584:	8822923a 	slli	r17,r17,8
    b588:	a028923a 	slli	r20,r20,8
    b58c:	8009883a 	mov	r4,r16
    b590:	88acb03a 	or	r22,r17,r2
    b594:	dd000015 	stw	r20,0(sp)
    b598:	b028d43a 	srli	r20,r22,16
    b59c:	d8c00215 	stw	r3,8(sp)
    b5a0:	b4bfffcc 	andi	r18,r22,65535
    b5a4:	a00b883a 	mov	r5,r20
    b5a8:	000a8a80 	call	a8a8 <__udivsi3>
    b5ac:	100b883a 	mov	r5,r2
    b5b0:	9009883a 	mov	r4,r18
    b5b4:	1023883a 	mov	r17,r2
    b5b8:	000a9640 	call	a964 <__mulsi3>
    b5bc:	8009883a 	mov	r4,r16
    b5c0:	a00b883a 	mov	r5,r20
    b5c4:	1039883a 	mov	fp,r2
    b5c8:	000a90c0 	call	a90c <__umodsi3>
    b5cc:	1004943a 	slli	r2,r2,16
    b5d0:	b808d43a 	srli	r4,r23,16
    b5d4:	d8c00217 	ldw	r3,8(sp)
    b5d8:	2084b03a 	or	r2,r4,r2
    b5dc:	1700062e 	bgeu	r2,fp,b5f8 <__divdf3+0x3c0>
    b5e0:	1585883a 	add	r2,r2,r22
    b5e4:	893fffc4 	addi	r4,r17,-1
    b5e8:	15811d36 	bltu	r2,r22,ba60 <__divdf3+0x828>
    b5ec:	17011c2e 	bgeu	r2,fp,ba60 <__divdf3+0x828>
    b5f0:	8c7fff84 	addi	r17,r17,-2
    b5f4:	1585883a 	add	r2,r2,r22
    b5f8:	1739c83a 	sub	fp,r2,fp
    b5fc:	a00b883a 	mov	r5,r20
    b600:	e009883a 	mov	r4,fp
    b604:	d8c00215 	stw	r3,8(sp)
    b608:	000a8a80 	call	a8a8 <__udivsi3>
    b60c:	100b883a 	mov	r5,r2
    b610:	9009883a 	mov	r4,r18
    b614:	1021883a 	mov	r16,r2
    b618:	000a9640 	call	a964 <__mulsi3>
    b61c:	a00b883a 	mov	r5,r20
    b620:	e009883a 	mov	r4,fp
    b624:	d8800415 	stw	r2,16(sp)
    b628:	000a90c0 	call	a90c <__umodsi3>
    b62c:	1004943a 	slli	r2,r2,16
    b630:	da000417 	ldw	r8,16(sp)
    b634:	bdffffcc 	andi	r23,r23,65535
    b638:	b884b03a 	or	r2,r23,r2
    b63c:	d8c00217 	ldw	r3,8(sp)
    b640:	1200062e 	bgeu	r2,r8,b65c <__divdf3+0x424>
    b644:	1585883a 	add	r2,r2,r22
    b648:	813fffc4 	addi	r4,r16,-1
    b64c:	15810236 	bltu	r2,r22,ba58 <__divdf3+0x820>
    b650:	1201012e 	bgeu	r2,r8,ba58 <__divdf3+0x820>
    b654:	843fff84 	addi	r16,r16,-2
    b658:	1585883a 	add	r2,r2,r22
    b65c:	8822943a 	slli	r17,r17,16
    b660:	d9800017 	ldw	r6,0(sp)
    b664:	1211c83a 	sub	r8,r2,r8
    b668:	8c22b03a 	or	r17,r17,r16
    b66c:	373fffcc 	andi	fp,r6,65535
    b670:	8abfffcc 	andi	r10,r17,65535
    b674:	8820d43a 	srli	r16,r17,16
    b678:	5009883a 	mov	r4,r10
    b67c:	e00b883a 	mov	r5,fp
    b680:	302ed43a 	srli	r23,r6,16
    b684:	d8c00215 	stw	r3,8(sp)
    b688:	da000415 	stw	r8,16(sp)
    b68c:	da800115 	stw	r10,4(sp)
    b690:	000a9640 	call	a964 <__mulsi3>
    b694:	800b883a 	mov	r5,r16
    b698:	e009883a 	mov	r4,fp
    b69c:	d8800515 	stw	r2,20(sp)
    b6a0:	000a9640 	call	a964 <__mulsi3>
    b6a4:	8009883a 	mov	r4,r16
    b6a8:	b80b883a 	mov	r5,r23
    b6ac:	d8800315 	stw	r2,12(sp)
    b6b0:	000a9640 	call	a964 <__mulsi3>
    b6b4:	da800117 	ldw	r10,4(sp)
    b6b8:	b80b883a 	mov	r5,r23
    b6bc:	1021883a 	mov	r16,r2
    b6c0:	5009883a 	mov	r4,r10
    b6c4:	000a9640 	call	a964 <__mulsi3>
    b6c8:	d9c00517 	ldw	r7,20(sp)
    b6cc:	da400317 	ldw	r9,12(sp)
    b6d0:	d8c00217 	ldw	r3,8(sp)
    b6d4:	3808d43a 	srli	r4,r7,16
    b6d8:	1245883a 	add	r2,r2,r9
    b6dc:	da000417 	ldw	r8,16(sp)
    b6e0:	2085883a 	add	r2,r4,r2
    b6e4:	1240022e 	bgeu	r2,r9,b6f0 <__divdf3+0x4b8>
    b6e8:	01000074 	movhi	r4,1
    b6ec:	8121883a 	add	r16,r16,r4
    b6f0:	1008d43a 	srli	r4,r2,16
    b6f4:	1004943a 	slli	r2,r2,16
    b6f8:	39ffffcc 	andi	r7,r7,65535
    b6fc:	2409883a 	add	r4,r4,r16
    b700:	11c5883a 	add	r2,r2,r7
    b704:	4100bb36 	bltu	r8,r4,b9f4 <__divdf3+0x7bc>
    b708:	4100d726 	beq	r8,r4,ba68 <__divdf3+0x830>
    b70c:	4109c83a 	sub	r4,r8,r4
    b710:	a8a1c83a 	sub	r16,r21,r2
    b714:	ac2b803a 	cmpltu	r21,r21,r16
    b718:	256bc83a 	sub	r21,r4,r21
    b71c:	b540d926 	beq	r22,r21,ba84 <__divdf3+0x84c>
    b720:	a00b883a 	mov	r5,r20
    b724:	a809883a 	mov	r4,r21
    b728:	d8c00215 	stw	r3,8(sp)
    b72c:	000a8a80 	call	a8a8 <__udivsi3>
    b730:	100b883a 	mov	r5,r2
    b734:	9009883a 	mov	r4,r18
    b738:	d8800515 	stw	r2,20(sp)
    b73c:	000a9640 	call	a964 <__mulsi3>
    b740:	a809883a 	mov	r4,r21
    b744:	a00b883a 	mov	r5,r20
    b748:	d8800415 	stw	r2,16(sp)
    b74c:	000a90c0 	call	a90c <__umodsi3>
    b750:	1004943a 	slli	r2,r2,16
    b754:	8008d43a 	srli	r4,r16,16
    b758:	da000417 	ldw	r8,16(sp)
    b75c:	d8c00217 	ldw	r3,8(sp)
    b760:	2084b03a 	or	r2,r4,r2
    b764:	d9c00517 	ldw	r7,20(sp)
    b768:	1200062e 	bgeu	r2,r8,b784 <__divdf3+0x54c>
    b76c:	1585883a 	add	r2,r2,r22
    b770:	393fffc4 	addi	r4,r7,-1
    b774:	1580c536 	bltu	r2,r22,ba8c <__divdf3+0x854>
    b778:	1200c42e 	bgeu	r2,r8,ba8c <__divdf3+0x854>
    b77c:	39ffff84 	addi	r7,r7,-2
    b780:	1585883a 	add	r2,r2,r22
    b784:	122bc83a 	sub	r21,r2,r8
    b788:	a00b883a 	mov	r5,r20
    b78c:	a809883a 	mov	r4,r21
    b790:	d8c00215 	stw	r3,8(sp)
    b794:	d9c00515 	stw	r7,20(sp)
    b798:	000a8a80 	call	a8a8 <__udivsi3>
    b79c:	9009883a 	mov	r4,r18
    b7a0:	100b883a 	mov	r5,r2
    b7a4:	d8800415 	stw	r2,16(sp)
    b7a8:	000a9640 	call	a964 <__mulsi3>
    b7ac:	a809883a 	mov	r4,r21
    b7b0:	a00b883a 	mov	r5,r20
    b7b4:	1025883a 	mov	r18,r2
    b7b8:	000a90c0 	call	a90c <__umodsi3>
    b7bc:	1004943a 	slli	r2,r2,16
    b7c0:	813fffcc 	andi	r4,r16,65535
    b7c4:	d8c00217 	ldw	r3,8(sp)
    b7c8:	20a0b03a 	or	r16,r4,r2
    b7cc:	d9c00517 	ldw	r7,20(sp)
    b7d0:	da000417 	ldw	r8,16(sp)
    b7d4:	8480062e 	bgeu	r16,r18,b7f0 <__divdf3+0x5b8>
    b7d8:	85a1883a 	add	r16,r16,r22
    b7dc:	40bfffc4 	addi	r2,r8,-1
    b7e0:	8580ac36 	bltu	r16,r22,ba94 <__divdf3+0x85c>
    b7e4:	8480ab2e 	bgeu	r16,r18,ba94 <__divdf3+0x85c>
    b7e8:	423fff84 	addi	r8,r8,-2
    b7ec:	85a1883a 	add	r16,r16,r22
    b7f0:	3804943a 	slli	r2,r7,16
    b7f4:	84a1c83a 	sub	r16,r16,r18
    b7f8:	e009883a 	mov	r4,fp
    b7fc:	1228b03a 	or	r20,r2,r8
    b800:	a1ffffcc 	andi	r7,r20,65535
    b804:	a024d43a 	srli	r18,r20,16
    b808:	380b883a 	mov	r5,r7
    b80c:	d8c00215 	stw	r3,8(sp)
    b810:	d9c00515 	stw	r7,20(sp)
    b814:	000a9640 	call	a964 <__mulsi3>
    b818:	900b883a 	mov	r5,r18
    b81c:	e009883a 	mov	r4,fp
    b820:	102b883a 	mov	r21,r2
    b824:	000a9640 	call	a964 <__mulsi3>
    b828:	900b883a 	mov	r5,r18
    b82c:	b809883a 	mov	r4,r23
    b830:	1039883a 	mov	fp,r2
    b834:	000a9640 	call	a964 <__mulsi3>
    b838:	d9c00517 	ldw	r7,20(sp)
    b83c:	b80b883a 	mov	r5,r23
    b840:	1025883a 	mov	r18,r2
    b844:	3809883a 	mov	r4,r7
    b848:	000a9640 	call	a964 <__mulsi3>
    b84c:	a808d43a 	srli	r4,r21,16
    b850:	1705883a 	add	r2,r2,fp
    b854:	d8c00217 	ldw	r3,8(sp)
    b858:	2085883a 	add	r2,r4,r2
    b85c:	1700022e 	bgeu	r2,fp,b868 <__divdf3+0x630>
    b860:	01000074 	movhi	r4,1
    b864:	9125883a 	add	r18,r18,r4
    b868:	1008d43a 	srli	r4,r2,16
    b86c:	1004943a 	slli	r2,r2,16
    b870:	ad7fffcc 	andi	r21,r21,65535
    b874:	2489883a 	add	r4,r4,r18
    b878:	1545883a 	add	r2,r2,r21
    b87c:	81003836 	bltu	r16,r4,b960 <__divdf3+0x728>
    b880:	81003626 	beq	r16,r4,b95c <__divdf3+0x724>
    b884:	a5000054 	ori	r20,r20,1
    b888:	1880ffc4 	addi	r2,r3,1023
    b88c:	00bf2e0e 	bge	zero,r2,b548 <__divdf3+0x310>
    b890:	a10001cc 	andi	r4,r20,7
    b894:	20000726 	beq	r4,zero,b8b4 <__divdf3+0x67c>
    b898:	a10003cc 	andi	r4,r20,15
    b89c:	01400104 	movi	r5,4
    b8a0:	21400426 	beq	r4,r5,b8b4 <__divdf3+0x67c>
    b8a4:	a149883a 	add	r4,r20,r5
    b8a8:	2529803a 	cmpltu	r20,r4,r20
    b8ac:	8d23883a 	add	r17,r17,r20
    b8b0:	2029883a 	mov	r20,r4
    b8b4:	8900402c 	andhi	r4,r17,256
    b8b8:	20000426 	beq	r4,zero,b8cc <__divdf3+0x694>
    b8bc:	18810004 	addi	r2,r3,1024
    b8c0:	00ffc034 	movhi	r3,65280
    b8c4:	18ffffc4 	addi	r3,r3,-1
    b8c8:	88e2703a 	and	r17,r17,r3
    b8cc:	00c1ff84 	movi	r3,2046
    b8d0:	18beb416 	blt	r3,r2,b3a4 <__divdf3+0x16c>
    b8d4:	a028d0fa 	srli	r20,r20,3
    b8d8:	882a977a 	slli	r21,r17,29
    b8dc:	8820927a 	slli	r16,r17,9
    b8e0:	1081ffcc 	andi	r2,r2,2047
    b8e4:	ad2ab03a 	or	r21,r21,r20
    b8e8:	8020d33a 	srli	r16,r16,12
    b8ec:	9900004c 	andi	r4,r19,1
    b8f0:	003eb006 	br	b3b4 <__divdf3+0x17c>
    b8f4:	8080022c 	andhi	r2,r16,8
    b8f8:	10001226 	beq	r2,zero,b944 <__divdf3+0x70c>
    b8fc:	8880022c 	andhi	r2,r17,8
    b900:	1000101e 	bne	r2,zero,b944 <__divdf3+0x70c>
    b904:	00800434 	movhi	r2,16
    b908:	8c000234 	orhi	r16,r17,8
    b90c:	10bfffc4 	addi	r2,r2,-1
    b910:	b809883a 	mov	r4,r23
    b914:	80a0703a 	and	r16,r16,r2
    b918:	a02b883a 	mov	r21,r20
    b91c:	003f0806 	br	b540 <__divdf3+0x308>
    b920:	008000c4 	movi	r2,3
    b924:	3880b126 	beq	r7,r2,bbec <__divdf3+0x9b4>
    b928:	00800044 	movi	r2,1
    b92c:	38805b1e 	bne	r7,r2,ba9c <__divdf3+0x864>
    b930:	e009883a 	mov	r4,fp
    b934:	0005883a 	mov	r2,zero
    b938:	0021883a 	mov	r16,zero
    b93c:	002b883a 	mov	r21,zero
    b940:	003e9c06 	br	b3b4 <__divdf3+0x17c>
    b944:	00800434 	movhi	r2,16
    b948:	84000234 	orhi	r16,r16,8
    b94c:	10bfffc4 	addi	r2,r2,-1
    b950:	b009883a 	mov	r4,r22
    b954:	80a0703a 	and	r16,r16,r2
    b958:	003ef906 	br	b540 <__divdf3+0x308>
    b95c:	103fca26 	beq	r2,zero,b888 <__divdf3+0x650>
    b960:	b421883a 	add	r16,r22,r16
    b964:	a17fffc4 	addi	r5,r20,-1
    b968:	8580422e 	bgeu	r16,r22,ba74 <__divdf3+0x83c>
    b96c:	2829883a 	mov	r20,r5
    b970:	813fc41e 	bne	r16,r4,b884 <__divdf3+0x64c>
    b974:	d9800017 	ldw	r6,0(sp)
    b978:	30bfc21e 	bne	r6,r2,b884 <__divdf3+0x64c>
    b97c:	003fc206 	br	b888 <__divdf3+0x650>
    b980:	143ff604 	addi	r16,r2,-40
    b984:	8c20983a 	sll	r16,r17,r16
    b988:	002b883a 	mov	r21,zero
    b98c:	003eb406 	br	b460 <__divdf3+0x228>
    b990:	d9800215 	stw	r6,8(sp)
    b994:	d9c00515 	stw	r7,20(sp)
    b998:	da000415 	stw	r8,16(sp)
    b99c:	000d1cc0 	call	d1cc <__clzsi2>
    b9a0:	10800804 	addi	r2,r2,32
    b9a4:	da000417 	ldw	r8,16(sp)
    b9a8:	d9c00517 	ldw	r7,20(sp)
    b9ac:	d9800217 	ldw	r6,8(sp)
    b9b0:	003ea106 	br	b438 <__divdf3+0x200>
    b9b4:	147ff604 	addi	r17,r2,-40
    b9b8:	3462983a 	sll	r17,r6,r17
    b9bc:	0029883a 	mov	r20,zero
    b9c0:	003ec906 	br	b4e8 <__divdf3+0x2b0>
    b9c4:	3009883a 	mov	r4,r6
    b9c8:	d9400115 	stw	r5,4(sp)
    b9cc:	d9800215 	stw	r6,8(sp)
    b9d0:	da000415 	stw	r8,16(sp)
    b9d4:	da400315 	stw	r9,12(sp)
    b9d8:	000d1cc0 	call	d1cc <__clzsi2>
    b9dc:	10800804 	addi	r2,r2,32
    b9e0:	da400317 	ldw	r9,12(sp)
    b9e4:	da000417 	ldw	r8,16(sp)
    b9e8:	d9800217 	ldw	r6,8(sp)
    b9ec:	d9400117 	ldw	r5,4(sp)
    b9f0:	003eb306 	br	b4c0 <__divdf3+0x288>
    b9f4:	d9800017 	ldw	r6,0(sp)
    b9f8:	a9ab883a 	add	r21,r21,r6
    b9fc:	a98b803a 	cmpltu	r5,r21,r6
    ba00:	2d8b883a 	add	r5,r5,r22
    ba04:	2a11883a 	add	r8,r5,r8
    ba08:	897fffc4 	addi	r5,r17,-1
    ba0c:	b2000c2e 	bgeu	r22,r8,ba40 <__divdf3+0x808>
    ba10:	41003f36 	bltu	r8,r4,bb10 <__divdf3+0x8d8>
    ba14:	22006c26 	beq	r4,r8,bbc8 <__divdf3+0x990>
    ba18:	4109c83a 	sub	r4,r8,r4
    ba1c:	2823883a 	mov	r17,r5
    ba20:	003f3b06 	br	b710 <__divdf3+0x4d8>
    ba24:	ad3ed336 	bltu	r21,r20,b574 <__divdf3+0x33c>
    ba28:	a804d07a 	srli	r2,r21,1
    ba2c:	802e97fa 	slli	r23,r16,31
    ba30:	a82a97fa 	slli	r21,r21,31
    ba34:	8020d07a 	srli	r16,r16,1
    ba38:	b8aeb03a 	or	r23,r23,r2
    ba3c:	003ed006 	br	b580 <__divdf3+0x348>
    ba40:	b23ff51e 	bne	r22,r8,ba18 <__divdf3+0x7e0>
    ba44:	d9800017 	ldw	r6,0(sp)
    ba48:	a9bff12e 	bgeu	r21,r6,ba10 <__divdf3+0x7d8>
    ba4c:	b109c83a 	sub	r4,r22,r4
    ba50:	2823883a 	mov	r17,r5
    ba54:	003f2e06 	br	b710 <__divdf3+0x4d8>
    ba58:	2021883a 	mov	r16,r4
    ba5c:	003eff06 	br	b65c <__divdf3+0x424>
    ba60:	2023883a 	mov	r17,r4
    ba64:	003ee406 	br	b5f8 <__divdf3+0x3c0>
    ba68:	a8bfe236 	bltu	r21,r2,b9f4 <__divdf3+0x7bc>
    ba6c:	0009883a 	mov	r4,zero
    ba70:	003f2706 	br	b710 <__divdf3+0x4d8>
    ba74:	81002d36 	bltu	r16,r4,bb2c <__divdf3+0x8f4>
    ba78:	24005626 	beq	r4,r16,bbd4 <__divdf3+0x99c>
    ba7c:	2829883a 	mov	r20,r5
    ba80:	003f8006 	br	b884 <__divdf3+0x64c>
    ba84:	053fffc4 	movi	r20,-1
    ba88:	003f7f06 	br	b888 <__divdf3+0x650>
    ba8c:	200f883a 	mov	r7,r4
    ba90:	003f3c06 	br	b784 <__divdf3+0x54c>
    ba94:	1011883a 	mov	r8,r2
    ba98:	003f5506 	br	b7f0 <__divdf3+0x5b8>
    ba9c:	e027883a 	mov	r19,fp
    baa0:	003f7906 	br	b888 <__divdf3+0x650>
    baa4:	010007c4 	movi	r4,31
    baa8:	20c02816 	blt	r4,r3,bb4c <__divdf3+0x914>
    baac:	00800804 	movi	r2,32
    bab0:	10c5c83a 	sub	r2,r2,r3
    bab4:	888a983a 	sll	r5,r17,r2
    bab8:	a0c8d83a 	srl	r4,r20,r3
    babc:	a084983a 	sll	r2,r20,r2
    bac0:	88e2d83a 	srl	r17,r17,r3
    bac4:	2906b03a 	or	r3,r5,r4
    bac8:	1004c03a 	cmpne	r2,r2,zero
    bacc:	1886b03a 	or	r3,r3,r2
    bad0:	188001cc 	andi	r2,r3,7
    bad4:	10000726 	beq	r2,zero,baf4 <__divdf3+0x8bc>
    bad8:	188003cc 	andi	r2,r3,15
    badc:	01000104 	movi	r4,4
    bae0:	11000426 	beq	r2,r4,baf4 <__divdf3+0x8bc>
    bae4:	1805883a 	mov	r2,r3
    bae8:	10c00104 	addi	r3,r2,4
    baec:	1885803a 	cmpltu	r2,r3,r2
    baf0:	88a3883a 	add	r17,r17,r2
    baf4:	8880202c 	andhi	r2,r17,128
    baf8:	10002926 	beq	r2,zero,bba0 <__divdf3+0x968>
    bafc:	9900004c 	andi	r4,r19,1
    bb00:	00800044 	movi	r2,1
    bb04:	0021883a 	mov	r16,zero
    bb08:	002b883a 	mov	r21,zero
    bb0c:	003e2906 	br	b3b4 <__divdf3+0x17c>
    bb10:	d9800017 	ldw	r6,0(sp)
    bb14:	8c7fff84 	addi	r17,r17,-2
    bb18:	a9ab883a 	add	r21,r21,r6
    bb1c:	a98b803a 	cmpltu	r5,r21,r6
    bb20:	2d8b883a 	add	r5,r5,r22
    bb24:	2a11883a 	add	r8,r5,r8
    bb28:	003ef806 	br	b70c <__divdf3+0x4d4>
    bb2c:	d9800017 	ldw	r6,0(sp)
    bb30:	318f883a 	add	r7,r6,r6
    bb34:	398b803a 	cmpltu	r5,r7,r6
    bb38:	2d8d883a 	add	r6,r5,r22
    bb3c:	81a1883a 	add	r16,r16,r6
    bb40:	a17fff84 	addi	r5,r20,-2
    bb44:	d9c00015 	stw	r7,0(sp)
    bb48:	003f8806 	br	b96c <__divdf3+0x734>
    bb4c:	013ff844 	movi	r4,-31
    bb50:	2085c83a 	sub	r2,r4,r2
    bb54:	8888d83a 	srl	r4,r17,r2
    bb58:	00800804 	movi	r2,32
    bb5c:	18802126 	beq	r3,r2,bbe4 <__divdf3+0x9ac>
    bb60:	04001004 	movi	r16,64
    bb64:	80c7c83a 	sub	r3,r16,r3
    bb68:	88e0983a 	sll	r16,r17,r3
    bb6c:	8504b03a 	or	r2,r16,r20
    bb70:	1004c03a 	cmpne	r2,r2,zero
    bb74:	2084b03a 	or	r2,r4,r2
    bb78:	144001cc 	andi	r17,r2,7
    bb7c:	88000d1e 	bne	r17,zero,bbb4 <__divdf3+0x97c>
    bb80:	0021883a 	mov	r16,zero
    bb84:	102ad0fa 	srli	r21,r2,3
    bb88:	9900004c 	andi	r4,r19,1
    bb8c:	0005883a 	mov	r2,zero
    bb90:	ac6ab03a 	or	r21,r21,r17
    bb94:	003e0706 	br	b3b4 <__divdf3+0x17c>
    bb98:	1007883a 	mov	r3,r2
    bb9c:	0023883a 	mov	r17,zero
    bba0:	8820927a 	slli	r16,r17,9
    bba4:	1805883a 	mov	r2,r3
    bba8:	8822977a 	slli	r17,r17,29
    bbac:	8020d33a 	srli	r16,r16,12
    bbb0:	003ff406 	br	bb84 <__divdf3+0x94c>
    bbb4:	10c003cc 	andi	r3,r2,15
    bbb8:	01000104 	movi	r4,4
    bbbc:	193ff626 	beq	r3,r4,bb98 <__divdf3+0x960>
    bbc0:	0023883a 	mov	r17,zero
    bbc4:	003fc806 	br	bae8 <__divdf3+0x8b0>
    bbc8:	a8bfd136 	bltu	r21,r2,bb10 <__divdf3+0x8d8>
    bbcc:	2823883a 	mov	r17,r5
    bbd0:	003fa606 	br	ba6c <__divdf3+0x834>
    bbd4:	d9800017 	ldw	r6,0(sp)
    bbd8:	30bfd436 	bltu	r6,r2,bb2c <__divdf3+0x8f4>
    bbdc:	2829883a 	mov	r20,r5
    bbe0:	003f6406 	br	b974 <__divdf3+0x73c>
    bbe4:	0021883a 	mov	r16,zero
    bbe8:	003fe006 	br	bb6c <__divdf3+0x934>
    bbec:	00800434 	movhi	r2,16
    bbf0:	8c000234 	orhi	r16,r17,8
    bbf4:	10bfffc4 	addi	r2,r2,-1
    bbf8:	e009883a 	mov	r4,fp
    bbfc:	80a0703a 	and	r16,r16,r2
    bc00:	a02b883a 	mov	r21,r20
    bc04:	003e4e06 	br	b540 <__divdf3+0x308>

0000bc08 <__eqdf2>:
    bc08:	2804d53a 	srli	r2,r5,20
    bc0c:	3806d53a 	srli	r3,r7,20
    bc10:	02000434 	movhi	r8,16
    bc14:	423fffc4 	addi	r8,r8,-1
    bc18:	1081ffcc 	andi	r2,r2,2047
    bc1c:	0281ffc4 	movi	r10,2047
    bc20:	2a12703a 	and	r9,r5,r8
    bc24:	18c1ffcc 	andi	r3,r3,2047
    bc28:	3a10703a 	and	r8,r7,r8
    bc2c:	280ad7fa 	srli	r5,r5,31
    bc30:	380ed7fa 	srli	r7,r7,31
    bc34:	12801026 	beq	r2,r10,bc78 <__eqdf2+0x70>
    bc38:	0281ffc4 	movi	r10,2047
    bc3c:	1a800a26 	beq	r3,r10,bc68 <__eqdf2+0x60>
    bc40:	10c00226 	beq	r2,r3,bc4c <__eqdf2+0x44>
    bc44:	00800044 	movi	r2,1
    bc48:	f800283a 	ret
    bc4c:	4a3ffd1e 	bne	r9,r8,bc44 <__eqdf2+0x3c>
    bc50:	21bffc1e 	bne	r4,r6,bc44 <__eqdf2+0x3c>
    bc54:	29c00c26 	beq	r5,r7,bc88 <__eqdf2+0x80>
    bc58:	103ffa1e 	bne	r2,zero,bc44 <__eqdf2+0x3c>
    bc5c:	2244b03a 	or	r2,r4,r9
    bc60:	1004c03a 	cmpne	r2,r2,zero
    bc64:	f800283a 	ret
    bc68:	3214b03a 	or	r10,r6,r8
    bc6c:	503ff426 	beq	r10,zero,bc40 <__eqdf2+0x38>
    bc70:	00800044 	movi	r2,1
    bc74:	f800283a 	ret
    bc78:	2254b03a 	or	r10,r4,r9
    bc7c:	503fee26 	beq	r10,zero,bc38 <__eqdf2+0x30>
    bc80:	00800044 	movi	r2,1
    bc84:	f800283a 	ret
    bc88:	0005883a 	mov	r2,zero
    bc8c:	f800283a 	ret

0000bc90 <__gedf2>:
    bc90:	2804d53a 	srli	r2,r5,20
    bc94:	3806d53a 	srli	r3,r7,20
    bc98:	02000434 	movhi	r8,16
    bc9c:	423fffc4 	addi	r8,r8,-1
    bca0:	1081ffcc 	andi	r2,r2,2047
    bca4:	0241ffc4 	movi	r9,2047
    bca8:	2a14703a 	and	r10,r5,r8
    bcac:	18c1ffcc 	andi	r3,r3,2047
    bcb0:	3a10703a 	and	r8,r7,r8
    bcb4:	280ad7fa 	srli	r5,r5,31
    bcb8:	380ed7fa 	srli	r7,r7,31
    bcbc:	12401d26 	beq	r2,r9,bd34 <__gedf2+0xa4>
    bcc0:	0241ffc4 	movi	r9,2047
    bcc4:	1a401226 	beq	r3,r9,bd10 <__gedf2+0x80>
    bcc8:	1000081e 	bne	r2,zero,bcec <__gedf2+0x5c>
    bccc:	2296b03a 	or	r11,r4,r10
    bcd0:	5813003a 	cmpeq	r9,r11,zero
    bcd4:	1800091e 	bne	r3,zero,bcfc <__gedf2+0x6c>
    bcd8:	3218b03a 	or	r12,r6,r8
    bcdc:	6000071e 	bne	r12,zero,bcfc <__gedf2+0x6c>
    bce0:	0005883a 	mov	r2,zero
    bce4:	5800101e 	bne	r11,zero,bd28 <__gedf2+0x98>
    bce8:	f800283a 	ret
    bcec:	18000c1e 	bne	r3,zero,bd20 <__gedf2+0x90>
    bcf0:	3212b03a 	or	r9,r6,r8
    bcf4:	48000c26 	beq	r9,zero,bd28 <__gedf2+0x98>
    bcf8:	0013883a 	mov	r9,zero
    bcfc:	39c03fcc 	andi	r7,r7,255
    bd00:	48000826 	beq	r9,zero,bd24 <__gedf2+0x94>
    bd04:	38000926 	beq	r7,zero,bd2c <__gedf2+0x9c>
    bd08:	00800044 	movi	r2,1
    bd0c:	f800283a 	ret
    bd10:	3212b03a 	or	r9,r6,r8
    bd14:	483fec26 	beq	r9,zero,bcc8 <__gedf2+0x38>
    bd18:	00bfff84 	movi	r2,-2
    bd1c:	f800283a 	ret
    bd20:	39c03fcc 	andi	r7,r7,255
    bd24:	29c00626 	beq	r5,r7,bd40 <__gedf2+0xb0>
    bd28:	283ff726 	beq	r5,zero,bd08 <__gedf2+0x78>
    bd2c:	00bfffc4 	movi	r2,-1
    bd30:	f800283a 	ret
    bd34:	2292b03a 	or	r9,r4,r10
    bd38:	483fe126 	beq	r9,zero,bcc0 <__gedf2+0x30>
    bd3c:	003ff606 	br	bd18 <__gedf2+0x88>
    bd40:	18bff916 	blt	r3,r2,bd28 <__gedf2+0x98>
    bd44:	10c00316 	blt	r2,r3,bd54 <__gedf2+0xc4>
    bd48:	42bff736 	bltu	r8,r10,bd28 <__gedf2+0x98>
    bd4c:	52000326 	beq	r10,r8,bd5c <__gedf2+0xcc>
    bd50:	5200042e 	bgeu	r10,r8,bd64 <__gedf2+0xd4>
    bd54:	283fec1e 	bne	r5,zero,bd08 <__gedf2+0x78>
    bd58:	003ff406 	br	bd2c <__gedf2+0x9c>
    bd5c:	313ff236 	bltu	r6,r4,bd28 <__gedf2+0x98>
    bd60:	21bffc36 	bltu	r4,r6,bd54 <__gedf2+0xc4>
    bd64:	0005883a 	mov	r2,zero
    bd68:	f800283a 	ret

0000bd6c <__ledf2>:
    bd6c:	2804d53a 	srli	r2,r5,20
    bd70:	3810d53a 	srli	r8,r7,20
    bd74:	00c00434 	movhi	r3,16
    bd78:	18ffffc4 	addi	r3,r3,-1
    bd7c:	1081ffcc 	andi	r2,r2,2047
    bd80:	0241ffc4 	movi	r9,2047
    bd84:	28d4703a 	and	r10,r5,r3
    bd88:	4201ffcc 	andi	r8,r8,2047
    bd8c:	38c6703a 	and	r3,r7,r3
    bd90:	280ad7fa 	srli	r5,r5,31
    bd94:	380ed7fa 	srli	r7,r7,31
    bd98:	12401f26 	beq	r2,r9,be18 <__ledf2+0xac>
    bd9c:	0241ffc4 	movi	r9,2047
    bda0:	42401426 	beq	r8,r9,bdf4 <__ledf2+0x88>
    bda4:	1000091e 	bne	r2,zero,bdcc <__ledf2+0x60>
    bda8:	2296b03a 	or	r11,r4,r10
    bdac:	5813003a 	cmpeq	r9,r11,zero
    bdb0:	29403fcc 	andi	r5,r5,255
    bdb4:	40000a1e 	bne	r8,zero,bde0 <__ledf2+0x74>
    bdb8:	30d8b03a 	or	r12,r6,r3
    bdbc:	6000081e 	bne	r12,zero,bde0 <__ledf2+0x74>
    bdc0:	0005883a 	mov	r2,zero
    bdc4:	5800111e 	bne	r11,zero,be0c <__ledf2+0xa0>
    bdc8:	f800283a 	ret
    bdcc:	29403fcc 	andi	r5,r5,255
    bdd0:	40000c1e 	bne	r8,zero,be04 <__ledf2+0x98>
    bdd4:	30d2b03a 	or	r9,r6,r3
    bdd8:	48000c26 	beq	r9,zero,be0c <__ledf2+0xa0>
    bddc:	0013883a 	mov	r9,zero
    bde0:	39c03fcc 	andi	r7,r7,255
    bde4:	48000826 	beq	r9,zero,be08 <__ledf2+0x9c>
    bde8:	38001126 	beq	r7,zero,be30 <__ledf2+0xc4>
    bdec:	00800044 	movi	r2,1
    bdf0:	f800283a 	ret
    bdf4:	30d2b03a 	or	r9,r6,r3
    bdf8:	483fea26 	beq	r9,zero,bda4 <__ledf2+0x38>
    bdfc:	00800084 	movi	r2,2
    be00:	f800283a 	ret
    be04:	39c03fcc 	andi	r7,r7,255
    be08:	39400726 	beq	r7,r5,be28 <__ledf2+0xbc>
    be0c:	2800081e 	bne	r5,zero,be30 <__ledf2+0xc4>
    be10:	00800044 	movi	r2,1
    be14:	f800283a 	ret
    be18:	2292b03a 	or	r9,r4,r10
    be1c:	483fdf26 	beq	r9,zero,bd9c <__ledf2+0x30>
    be20:	00800084 	movi	r2,2
    be24:	f800283a 	ret
    be28:	4080030e 	bge	r8,r2,be38 <__ledf2+0xcc>
    be2c:	383fef26 	beq	r7,zero,bdec <__ledf2+0x80>
    be30:	00bfffc4 	movi	r2,-1
    be34:	f800283a 	ret
    be38:	123feb16 	blt	r2,r8,bde8 <__ledf2+0x7c>
    be3c:	1abff336 	bltu	r3,r10,be0c <__ledf2+0xa0>
    be40:	50c00326 	beq	r10,r3,be50 <__ledf2+0xe4>
    be44:	50c0042e 	bgeu	r10,r3,be58 <__ledf2+0xec>
    be48:	283fe81e 	bne	r5,zero,bdec <__ledf2+0x80>
    be4c:	003ff806 	br	be30 <__ledf2+0xc4>
    be50:	313fee36 	bltu	r6,r4,be0c <__ledf2+0xa0>
    be54:	21bffc36 	bltu	r4,r6,be48 <__ledf2+0xdc>
    be58:	0005883a 	mov	r2,zero
    be5c:	f800283a 	ret

0000be60 <__muldf3>:
    be60:	deffee04 	addi	sp,sp,-72
    be64:	dd000c15 	stw	r20,48(sp)
    be68:	2828d53a 	srli	r20,r5,20
    be6c:	ddc00f15 	stw	r23,60(sp)
    be70:	282ed7fa 	srli	r23,r5,31
    be74:	dc000815 	stw	r16,32(sp)
    be78:	04000434 	movhi	r16,16
    be7c:	dcc00b15 	stw	r19,44(sp)
    be80:	843fffc4 	addi	r16,r16,-1
    be84:	dfc01115 	stw	ra,68(sp)
    be88:	df001015 	stw	fp,64(sp)
    be8c:	dd800e15 	stw	r22,56(sp)
    be90:	dd400d15 	stw	r21,52(sp)
    be94:	dc800a15 	stw	r18,40(sp)
    be98:	dc400915 	stw	r17,36(sp)
    be9c:	a501ffcc 	andi	r20,r20,2047
    bea0:	2c20703a 	and	r16,r5,r16
    bea4:	b827883a 	mov	r19,r23
    bea8:	ba403fcc 	andi	r9,r23,255
    beac:	a0006026 	beq	r20,zero,c030 <__muldf3+0x1d0>
    beb0:	0081ffc4 	movi	r2,2047
    beb4:	202d883a 	mov	r22,r4
    beb8:	a0803626 	beq	r20,r2,bf94 <__muldf3+0x134>
    bebc:	84000434 	orhi	r16,r16,16
    bec0:	200ad77a 	srli	r5,r4,29
    bec4:	800490fa 	slli	r2,r16,3
    bec8:	202c90fa 	slli	r22,r4,3
    becc:	a53f0044 	addi	r20,r20,-1023
    bed0:	28a0b03a 	or	r16,r5,r2
    bed4:	002b883a 	mov	r21,zero
    bed8:	000b883a 	mov	r5,zero
    bedc:	3804d53a 	srli	r2,r7,20
    bee0:	3838d7fa 	srli	fp,r7,31
    bee4:	04400434 	movhi	r17,16
    bee8:	8c7fffc4 	addi	r17,r17,-1
    beec:	1081ffcc 	andi	r2,r2,2047
    bef0:	3025883a 	mov	r18,r6
    bef4:	3c62703a 	and	r17,r7,r17
    bef8:	e2803fcc 	andi	r10,fp,255
    befc:	10006d26 	beq	r2,zero,c0b4 <__muldf3+0x254>
    bf00:	00c1ffc4 	movi	r3,2047
    bf04:	10c06526 	beq	r2,r3,c09c <__muldf3+0x23c>
    bf08:	8c400434 	orhi	r17,r17,16
    bf0c:	300ed77a 	srli	r7,r6,29
    bf10:	880690fa 	slli	r3,r17,3
    bf14:	302490fa 	slli	r18,r6,3
    bf18:	10bf0044 	addi	r2,r2,-1023
    bf1c:	38e2b03a 	or	r17,r7,r3
    bf20:	000f883a 	mov	r7,zero
    bf24:	a087883a 	add	r3,r20,r2
    bf28:	010003c4 	movi	r4,15
    bf2c:	3d44b03a 	or	r2,r7,r21
    bf30:	e5ccf03a 	xor	r6,fp,r23
    bf34:	1a000044 	addi	r8,r3,1
    bf38:	20809b36 	bltu	r4,r2,c1a8 <__muldf3+0x348>
    bf3c:	100490ba 	slli	r2,r2,2
    bf40:	01000074 	movhi	r4,1
    bf44:	212fd504 	addi	r4,r4,-16556
    bf48:	1105883a 	add	r2,r2,r4
    bf4c:	10800017 	ldw	r2,0(r2)
    bf50:	1000683a 	jmp	r2
    bf54:	0000c1a8 	cmpgeui	zero,zero,774
    bf58:	0000bfb4 	movhi	zero,766
    bf5c:	0000bfb4 	movhi	zero,766
    bf60:	0000bfb0 	cmpltui	zero,zero,766
    bf64:	0000c184 	movi	zero,774
    bf68:	0000c184 	movi	zero,774
    bf6c:	0000c16c 	andhi	zero,zero,773
    bf70:	0000bfb0 	cmpltui	zero,zero,766
    bf74:	0000c184 	movi	zero,774
    bf78:	0000c16c 	andhi	zero,zero,773
    bf7c:	0000c184 	movi	zero,774
    bf80:	0000bfb0 	cmpltui	zero,zero,766
    bf84:	0000c194 	movui	zero,774
    bf88:	0000c194 	movui	zero,774
    bf8c:	0000c194 	movui	zero,774
    bf90:	0000c4f4 	movhi	zero,787
    bf94:	2404b03a 	or	r2,r4,r16
    bf98:	1000711e 	bne	r2,zero,c160 <__muldf3+0x300>
    bf9c:	05400204 	movi	r21,8
    bfa0:	0021883a 	mov	r16,zero
    bfa4:	002d883a 	mov	r22,zero
    bfa8:	01400084 	movi	r5,2
    bfac:	003fcb06 	br	bedc <__muldf3+0x7c>
    bfb0:	500d883a 	mov	r6,r10
    bfb4:	00800084 	movi	r2,2
    bfb8:	38805926 	beq	r7,r2,c120 <__muldf3+0x2c0>
    bfbc:	008000c4 	movi	r2,3
    bfc0:	3881bb26 	beq	r7,r2,c6b0 <__muldf3+0x850>
    bfc4:	00800044 	movi	r2,1
    bfc8:	3881961e 	bne	r7,r2,c624 <__muldf3+0x7c4>
    bfcc:	3027883a 	mov	r19,r6
    bfd0:	0005883a 	mov	r2,zero
    bfd4:	0021883a 	mov	r16,zero
    bfd8:	002d883a 	mov	r22,zero
    bfdc:	1004953a 	slli	r2,r2,20
    bfe0:	98c03fcc 	andi	r3,r19,255
    bfe4:	04400434 	movhi	r17,16
    bfe8:	8c7fffc4 	addi	r17,r17,-1
    bfec:	180697fa 	slli	r3,r3,31
    bff0:	8460703a 	and	r16,r16,r17
    bff4:	80a0b03a 	or	r16,r16,r2
    bff8:	80c6b03a 	or	r3,r16,r3
    bffc:	b005883a 	mov	r2,r22
    c000:	dfc01117 	ldw	ra,68(sp)
    c004:	df001017 	ldw	fp,64(sp)
    c008:	ddc00f17 	ldw	r23,60(sp)
    c00c:	dd800e17 	ldw	r22,56(sp)
    c010:	dd400d17 	ldw	r21,52(sp)
    c014:	dd000c17 	ldw	r20,48(sp)
    c018:	dcc00b17 	ldw	r19,44(sp)
    c01c:	dc800a17 	ldw	r18,40(sp)
    c020:	dc400917 	ldw	r17,36(sp)
    c024:	dc000817 	ldw	r16,32(sp)
    c028:	dec01204 	addi	sp,sp,72
    c02c:	f800283a 	ret
    c030:	2404b03a 	or	r2,r4,r16
    c034:	202b883a 	mov	r21,r4
    c038:	10004426 	beq	r2,zero,c14c <__muldf3+0x2ec>
    c03c:	80015126 	beq	r16,zero,c584 <__muldf3+0x724>
    c040:	8009883a 	mov	r4,r16
    c044:	d9800715 	stw	r6,28(sp)
    c048:	d9c00215 	stw	r7,8(sp)
    c04c:	da400415 	stw	r9,16(sp)
    c050:	000d1cc0 	call	d1cc <__clzsi2>
    c054:	d9800717 	ldw	r6,28(sp)
    c058:	d9c00217 	ldw	r7,8(sp)
    c05c:	da400417 	ldw	r9,16(sp)
    c060:	113ffd44 	addi	r4,r2,-11
    c064:	00c00704 	movi	r3,28
    c068:	19014216 	blt	r3,r4,c574 <__muldf3+0x714>
    c06c:	00c00744 	movi	r3,29
    c070:	15bffe04 	addi	r22,r2,-8
    c074:	1907c83a 	sub	r3,r3,r4
    c078:	85a0983a 	sll	r16,r16,r22
    c07c:	a8c6d83a 	srl	r3,r21,r3
    c080:	adac983a 	sll	r22,r21,r22
    c084:	1c20b03a 	or	r16,r3,r16
    c088:	1080fcc4 	addi	r2,r2,1011
    c08c:	00a9c83a 	sub	r20,zero,r2
    c090:	002b883a 	mov	r21,zero
    c094:	000b883a 	mov	r5,zero
    c098:	003f9006 	br	bedc <__muldf3+0x7c>
    c09c:	3446b03a 	or	r3,r6,r17
    c0a0:	1800281e 	bne	r3,zero,c144 <__muldf3+0x2e4>
    c0a4:	0023883a 	mov	r17,zero
    c0a8:	0025883a 	mov	r18,zero
    c0ac:	01c00084 	movi	r7,2
    c0b0:	003f9c06 	br	bf24 <__muldf3+0xc4>
    c0b4:	3446b03a 	or	r3,r6,r17
    c0b8:	18001e26 	beq	r3,zero,c134 <__muldf3+0x2d4>
    c0bc:	88012126 	beq	r17,zero,c544 <__muldf3+0x6e4>
    c0c0:	8809883a 	mov	r4,r17
    c0c4:	d9400215 	stw	r5,8(sp)
    c0c8:	d9800715 	stw	r6,28(sp)
    c0cc:	da400415 	stw	r9,16(sp)
    c0d0:	da800315 	stw	r10,12(sp)
    c0d4:	000d1cc0 	call	d1cc <__clzsi2>
    c0d8:	d9400217 	ldw	r5,8(sp)
    c0dc:	d9800717 	ldw	r6,28(sp)
    c0e0:	da400417 	ldw	r9,16(sp)
    c0e4:	da800317 	ldw	r10,12(sp)
    c0e8:	113ffd44 	addi	r4,r2,-11
    c0ec:	00c00704 	movi	r3,28
    c0f0:	19011016 	blt	r3,r4,c534 <__muldf3+0x6d4>
    c0f4:	00c00744 	movi	r3,29
    c0f8:	14bffe04 	addi	r18,r2,-8
    c0fc:	1907c83a 	sub	r3,r3,r4
    c100:	8ca2983a 	sll	r17,r17,r18
    c104:	30c6d83a 	srl	r3,r6,r3
    c108:	34a4983a 	sll	r18,r6,r18
    c10c:	1c62b03a 	or	r17,r3,r17
    c110:	1080fcc4 	addi	r2,r2,1011
    c114:	0085c83a 	sub	r2,zero,r2
    c118:	000f883a 	mov	r7,zero
    c11c:	003f8106 	br	bf24 <__muldf3+0xc4>
    c120:	3027883a 	mov	r19,r6
    c124:	0081ffc4 	movi	r2,2047
    c128:	0021883a 	mov	r16,zero
    c12c:	002d883a 	mov	r22,zero
    c130:	003faa06 	br	bfdc <__muldf3+0x17c>
    c134:	0023883a 	mov	r17,zero
    c138:	0025883a 	mov	r18,zero
    c13c:	01c00044 	movi	r7,1
    c140:	003f7806 	br	bf24 <__muldf3+0xc4>
    c144:	01c000c4 	movi	r7,3
    c148:	003f7606 	br	bf24 <__muldf3+0xc4>
    c14c:	05400104 	movi	r21,4
    c150:	0021883a 	mov	r16,zero
    c154:	002d883a 	mov	r22,zero
    c158:	01400044 	movi	r5,1
    c15c:	003f5f06 	br	bedc <__muldf3+0x7c>
    c160:	05400304 	movi	r21,12
    c164:	014000c4 	movi	r5,3
    c168:	003f5c06 	br	bedc <__muldf3+0x7c>
    c16c:	04000434 	movhi	r16,16
    c170:	0027883a 	mov	r19,zero
    c174:	843fffc4 	addi	r16,r16,-1
    c178:	05bfffc4 	movi	r22,-1
    c17c:	0081ffc4 	movi	r2,2047
    c180:	003f9606 	br	bfdc <__muldf3+0x17c>
    c184:	8023883a 	mov	r17,r16
    c188:	b025883a 	mov	r18,r22
    c18c:	280f883a 	mov	r7,r5
    c190:	003f8806 	br	bfb4 <__muldf3+0x154>
    c194:	8023883a 	mov	r17,r16
    c198:	b025883a 	mov	r18,r22
    c19c:	480d883a 	mov	r6,r9
    c1a0:	280f883a 	mov	r7,r5
    c1a4:	003f8306 	br	bfb4 <__muldf3+0x154>
    c1a8:	b026d43a 	srli	r19,r22,16
    c1ac:	902ed43a 	srli	r23,r18,16
    c1b0:	b5bfffcc 	andi	r22,r22,65535
    c1b4:	94bfffcc 	andi	r18,r18,65535
    c1b8:	b00b883a 	mov	r5,r22
    c1bc:	9009883a 	mov	r4,r18
    c1c0:	d8c00515 	stw	r3,20(sp)
    c1c4:	d9800715 	stw	r6,28(sp)
    c1c8:	da000615 	stw	r8,24(sp)
    c1cc:	000a9640 	call	a964 <__mulsi3>
    c1d0:	980b883a 	mov	r5,r19
    c1d4:	9009883a 	mov	r4,r18
    c1d8:	1029883a 	mov	r20,r2
    c1dc:	000a9640 	call	a964 <__mulsi3>
    c1e0:	b80b883a 	mov	r5,r23
    c1e4:	9809883a 	mov	r4,r19
    c1e8:	102b883a 	mov	r21,r2
    c1ec:	000a9640 	call	a964 <__mulsi3>
    c1f0:	b809883a 	mov	r4,r23
    c1f4:	b00b883a 	mov	r5,r22
    c1f8:	1039883a 	mov	fp,r2
    c1fc:	000a9640 	call	a964 <__mulsi3>
    c200:	a008d43a 	srli	r4,r20,16
    c204:	1545883a 	add	r2,r2,r21
    c208:	d8c00517 	ldw	r3,20(sp)
    c20c:	2085883a 	add	r2,r4,r2
    c210:	d9800717 	ldw	r6,28(sp)
    c214:	da000617 	ldw	r8,24(sp)
    c218:	1540022e 	bgeu	r2,r21,c224 <__muldf3+0x3c4>
    c21c:	01000074 	movhi	r4,1
    c220:	e139883a 	add	fp,fp,r4
    c224:	100e943a 	slli	r7,r2,16
    c228:	1004d43a 	srli	r2,r2,16
    c22c:	882ad43a 	srli	r21,r17,16
    c230:	a53fffcc 	andi	r20,r20,65535
    c234:	8c7fffcc 	andi	r17,r17,65535
    c238:	3d29883a 	add	r20,r7,r20
    c23c:	b00b883a 	mov	r5,r22
    c240:	8809883a 	mov	r4,r17
    c244:	d8c00515 	stw	r3,20(sp)
    c248:	d9800715 	stw	r6,28(sp)
    c24c:	da000615 	stw	r8,24(sp)
    c250:	dd000115 	stw	r20,4(sp)
    c254:	d8800015 	stw	r2,0(sp)
    c258:	000a9640 	call	a964 <__mulsi3>
    c25c:	980b883a 	mov	r5,r19
    c260:	8809883a 	mov	r4,r17
    c264:	d8800215 	stw	r2,8(sp)
    c268:	000a9640 	call	a964 <__mulsi3>
    c26c:	9809883a 	mov	r4,r19
    c270:	a80b883a 	mov	r5,r21
    c274:	1029883a 	mov	r20,r2
    c278:	000a9640 	call	a964 <__mulsi3>
    c27c:	b00b883a 	mov	r5,r22
    c280:	a809883a 	mov	r4,r21
    c284:	d8800415 	stw	r2,16(sp)
    c288:	000a9640 	call	a964 <__mulsi3>
    c28c:	d9c00217 	ldw	r7,8(sp)
    c290:	1505883a 	add	r2,r2,r20
    c294:	d8c00517 	ldw	r3,20(sp)
    c298:	3826d43a 	srli	r19,r7,16
    c29c:	d9800717 	ldw	r6,28(sp)
    c2a0:	da000617 	ldw	r8,24(sp)
    c2a4:	9885883a 	add	r2,r19,r2
    c2a8:	da400417 	ldw	r9,16(sp)
    c2ac:	1500022e 	bgeu	r2,r20,c2b8 <__muldf3+0x458>
    c2b0:	01000074 	movhi	r4,1
    c2b4:	4913883a 	add	r9,r9,r4
    c2b8:	1028d43a 	srli	r20,r2,16
    c2bc:	1004943a 	slli	r2,r2,16
    c2c0:	802cd43a 	srli	r22,r16,16
    c2c4:	843fffcc 	andi	r16,r16,65535
    c2c8:	3cffffcc 	andi	r19,r7,65535
    c2cc:	9009883a 	mov	r4,r18
    c2d0:	800b883a 	mov	r5,r16
    c2d4:	a269883a 	add	r20,r20,r9
    c2d8:	d8c00515 	stw	r3,20(sp)
    c2dc:	d9800715 	stw	r6,28(sp)
    c2e0:	da000615 	stw	r8,24(sp)
    c2e4:	14e7883a 	add	r19,r2,r19
    c2e8:	000a9640 	call	a964 <__mulsi3>
    c2ec:	9009883a 	mov	r4,r18
    c2f0:	b00b883a 	mov	r5,r22
    c2f4:	d8800315 	stw	r2,12(sp)
    c2f8:	000a9640 	call	a964 <__mulsi3>
    c2fc:	b809883a 	mov	r4,r23
    c300:	b00b883a 	mov	r5,r22
    c304:	d8800215 	stw	r2,8(sp)
    c308:	000a9640 	call	a964 <__mulsi3>
    c30c:	b80b883a 	mov	r5,r23
    c310:	8009883a 	mov	r4,r16
    c314:	d8800415 	stw	r2,16(sp)
    c318:	000a9640 	call	a964 <__mulsi3>
    c31c:	da800317 	ldw	r10,12(sp)
    c320:	d9c00217 	ldw	r7,8(sp)
    c324:	d9000017 	ldw	r4,0(sp)
    c328:	502ed43a 	srli	r23,r10,16
    c32c:	11c5883a 	add	r2,r2,r7
    c330:	24e5883a 	add	r18,r4,r19
    c334:	b885883a 	add	r2,r23,r2
    c338:	d8c00517 	ldw	r3,20(sp)
    c33c:	d9800717 	ldw	r6,28(sp)
    c340:	da000617 	ldw	r8,24(sp)
    c344:	da400417 	ldw	r9,16(sp)
    c348:	11c0022e 	bgeu	r2,r7,c354 <__muldf3+0x4f4>
    c34c:	01000074 	movhi	r4,1
    c350:	4913883a 	add	r9,r9,r4
    c354:	100ed43a 	srli	r7,r2,16
    c358:	1004943a 	slli	r2,r2,16
    c35c:	55ffffcc 	andi	r23,r10,65535
    c360:	3a53883a 	add	r9,r7,r9
    c364:	8809883a 	mov	r4,r17
    c368:	800b883a 	mov	r5,r16
    c36c:	d8c00515 	stw	r3,20(sp)
    c370:	d9800715 	stw	r6,28(sp)
    c374:	da000615 	stw	r8,24(sp)
    c378:	da400415 	stw	r9,16(sp)
    c37c:	15ef883a 	add	r23,r2,r23
    c380:	000a9640 	call	a964 <__mulsi3>
    c384:	8809883a 	mov	r4,r17
    c388:	b00b883a 	mov	r5,r22
    c38c:	d8800215 	stw	r2,8(sp)
    c390:	000a9640 	call	a964 <__mulsi3>
    c394:	b00b883a 	mov	r5,r22
    c398:	a809883a 	mov	r4,r21
    c39c:	d8800315 	stw	r2,12(sp)
    c3a0:	000a9640 	call	a964 <__mulsi3>
    c3a4:	8009883a 	mov	r4,r16
    c3a8:	a80b883a 	mov	r5,r21
    c3ac:	1023883a 	mov	r17,r2
    c3b0:	000a9640 	call	a964 <__mulsi3>
    c3b4:	d9c00217 	ldw	r7,8(sp)
    c3b8:	da800317 	ldw	r10,12(sp)
    c3bc:	d8c00517 	ldw	r3,20(sp)
    c3c0:	3808d43a 	srli	r4,r7,16
    c3c4:	1285883a 	add	r2,r2,r10
    c3c8:	d9800717 	ldw	r6,28(sp)
    c3cc:	2085883a 	add	r2,r4,r2
    c3d0:	da000617 	ldw	r8,24(sp)
    c3d4:	da400417 	ldw	r9,16(sp)
    c3d8:	1280022e 	bgeu	r2,r10,c3e4 <__muldf3+0x584>
    c3dc:	01000074 	movhi	r4,1
    c3e0:	8923883a 	add	r17,r17,r4
    c3e4:	1008943a 	slli	r4,r2,16
    c3e8:	39ffffcc 	andi	r7,r7,65535
    c3ec:	e4b9883a 	add	fp,fp,r18
    c3f0:	21cf883a 	add	r7,r4,r7
    c3f4:	e4e7803a 	cmpltu	r19,fp,r19
    c3f8:	3d0f883a 	add	r7,r7,r20
    c3fc:	bf39883a 	add	fp,r23,fp
    c400:	99c9883a 	add	r4,r19,r7
    c404:	e5ef803a 	cmpltu	r23,fp,r23
    c408:	490b883a 	add	r5,r9,r4
    c40c:	1004d43a 	srli	r2,r2,16
    c410:	b965883a 	add	r18,r23,r5
    c414:	24c9803a 	cmpltu	r4,r4,r19
    c418:	3d29803a 	cmpltu	r20,r7,r20
    c41c:	a128b03a 	or	r20,r20,r4
    c420:	95ef803a 	cmpltu	r23,r18,r23
    c424:	2a53803a 	cmpltu	r9,r5,r9
    c428:	a0a9883a 	add	r20,r20,r2
    c42c:	4deeb03a 	or	r23,r9,r23
    c430:	a5ef883a 	add	r23,r20,r23
    c434:	bc63883a 	add	r17,r23,r17
    c438:	e004927a 	slli	r2,fp,9
    c43c:	d9000117 	ldw	r4,4(sp)
    c440:	882e927a 	slli	r23,r17,9
    c444:	9022d5fa 	srli	r17,r18,23
    c448:	e038d5fa 	srli	fp,fp,23
    c44c:	1104b03a 	or	r2,r2,r4
    c450:	9024927a 	slli	r18,r18,9
    c454:	1004c03a 	cmpne	r2,r2,zero
    c458:	bc62b03a 	or	r17,r23,r17
    c45c:	1738b03a 	or	fp,r2,fp
    c460:	8880402c 	andhi	r2,r17,256
    c464:	e4a4b03a 	or	r18,fp,r18
    c468:	10000726 	beq	r2,zero,c488 <__muldf3+0x628>
    c46c:	9006d07a 	srli	r3,r18,1
    c470:	880497fa 	slli	r2,r17,31
    c474:	9480004c 	andi	r18,r18,1
    c478:	8822d07a 	srli	r17,r17,1
    c47c:	1ca4b03a 	or	r18,r3,r18
    c480:	14a4b03a 	or	r18,r2,r18
    c484:	4007883a 	mov	r3,r8
    c488:	1880ffc4 	addi	r2,r3,1023
    c48c:	0080460e 	bge	zero,r2,c5a8 <__muldf3+0x748>
    c490:	910001cc 	andi	r4,r18,7
    c494:	20000726 	beq	r4,zero,c4b4 <__muldf3+0x654>
    c498:	910003cc 	andi	r4,r18,15
    c49c:	01400104 	movi	r5,4
    c4a0:	21400426 	beq	r4,r5,c4b4 <__muldf3+0x654>
    c4a4:	9149883a 	add	r4,r18,r5
    c4a8:	24a5803a 	cmpltu	r18,r4,r18
    c4ac:	8ca3883a 	add	r17,r17,r18
    c4b0:	2025883a 	mov	r18,r4
    c4b4:	8900402c 	andhi	r4,r17,256
    c4b8:	20000426 	beq	r4,zero,c4cc <__muldf3+0x66c>
    c4bc:	18810004 	addi	r2,r3,1024
    c4c0:	00ffc034 	movhi	r3,65280
    c4c4:	18ffffc4 	addi	r3,r3,-1
    c4c8:	88e2703a 	and	r17,r17,r3
    c4cc:	00c1ff84 	movi	r3,2046
    c4d0:	18bf1316 	blt	r3,r2,c120 <__muldf3+0x2c0>
    c4d4:	882c977a 	slli	r22,r17,29
    c4d8:	9024d0fa 	srli	r18,r18,3
    c4dc:	8822927a 	slli	r17,r17,9
    c4e0:	1081ffcc 	andi	r2,r2,2047
    c4e4:	b4acb03a 	or	r22,r22,r18
    c4e8:	8820d33a 	srli	r16,r17,12
    c4ec:	3027883a 	mov	r19,r6
    c4f0:	003eba06 	br	bfdc <__muldf3+0x17c>
    c4f4:	8080022c 	andhi	r2,r16,8
    c4f8:	10000926 	beq	r2,zero,c520 <__muldf3+0x6c0>
    c4fc:	8880022c 	andhi	r2,r17,8
    c500:	1000071e 	bne	r2,zero,c520 <__muldf3+0x6c0>
    c504:	00800434 	movhi	r2,16
    c508:	8c000234 	orhi	r16,r17,8
    c50c:	10bfffc4 	addi	r2,r2,-1
    c510:	e027883a 	mov	r19,fp
    c514:	80a0703a 	and	r16,r16,r2
    c518:	902d883a 	mov	r22,r18
    c51c:	003f1706 	br	c17c <__muldf3+0x31c>
    c520:	00800434 	movhi	r2,16
    c524:	84000234 	orhi	r16,r16,8
    c528:	10bfffc4 	addi	r2,r2,-1
    c52c:	80a0703a 	and	r16,r16,r2
    c530:	003f1206 	br	c17c <__muldf3+0x31c>
    c534:	147ff604 	addi	r17,r2,-40
    c538:	3462983a 	sll	r17,r6,r17
    c53c:	0025883a 	mov	r18,zero
    c540:	003ef306 	br	c110 <__muldf3+0x2b0>
    c544:	3009883a 	mov	r4,r6
    c548:	d9400215 	stw	r5,8(sp)
    c54c:	d9800715 	stw	r6,28(sp)
    c550:	da400415 	stw	r9,16(sp)
    c554:	da800315 	stw	r10,12(sp)
    c558:	000d1cc0 	call	d1cc <__clzsi2>
    c55c:	10800804 	addi	r2,r2,32
    c560:	da800317 	ldw	r10,12(sp)
    c564:	da400417 	ldw	r9,16(sp)
    c568:	d9800717 	ldw	r6,28(sp)
    c56c:	d9400217 	ldw	r5,8(sp)
    c570:	003edd06 	br	c0e8 <__muldf3+0x288>
    c574:	143ff604 	addi	r16,r2,-40
    c578:	ac20983a 	sll	r16,r21,r16
    c57c:	002d883a 	mov	r22,zero
    c580:	003ec106 	br	c088 <__muldf3+0x228>
    c584:	d9800715 	stw	r6,28(sp)
    c588:	d9c00215 	stw	r7,8(sp)
    c58c:	da400415 	stw	r9,16(sp)
    c590:	000d1cc0 	call	d1cc <__clzsi2>
    c594:	10800804 	addi	r2,r2,32
    c598:	da400417 	ldw	r9,16(sp)
    c59c:	d9c00217 	ldw	r7,8(sp)
    c5a0:	d9800717 	ldw	r6,28(sp)
    c5a4:	003eae06 	br	c060 <__muldf3+0x200>
    c5a8:	00c00044 	movi	r3,1
    c5ac:	1887c83a 	sub	r3,r3,r2
    c5b0:	01000e04 	movi	r4,56
    c5b4:	20fe8516 	blt	r4,r3,bfcc <__muldf3+0x16c>
    c5b8:	010007c4 	movi	r4,31
    c5bc:	20c01b16 	blt	r4,r3,c62c <__muldf3+0x7cc>
    c5c0:	00800804 	movi	r2,32
    c5c4:	10c5c83a 	sub	r2,r2,r3
    c5c8:	888a983a 	sll	r5,r17,r2
    c5cc:	90c8d83a 	srl	r4,r18,r3
    c5d0:	9084983a 	sll	r2,r18,r2
    c5d4:	88e2d83a 	srl	r17,r17,r3
    c5d8:	2906b03a 	or	r3,r5,r4
    c5dc:	1004c03a 	cmpne	r2,r2,zero
    c5e0:	1886b03a 	or	r3,r3,r2
    c5e4:	188001cc 	andi	r2,r3,7
    c5e8:	10000726 	beq	r2,zero,c608 <__muldf3+0x7a8>
    c5ec:	188003cc 	andi	r2,r3,15
    c5f0:	01000104 	movi	r4,4
    c5f4:	11000426 	beq	r2,r4,c608 <__muldf3+0x7a8>
    c5f8:	1805883a 	mov	r2,r3
    c5fc:	10c00104 	addi	r3,r2,4
    c600:	1885803a 	cmpltu	r2,r3,r2
    c604:	88a3883a 	add	r17,r17,r2
    c608:	8880202c 	andhi	r2,r17,128
    c60c:	10001c26 	beq	r2,zero,c680 <__muldf3+0x820>
    c610:	3027883a 	mov	r19,r6
    c614:	00800044 	movi	r2,1
    c618:	0021883a 	mov	r16,zero
    c61c:	002d883a 	mov	r22,zero
    c620:	003e6e06 	br	bfdc <__muldf3+0x17c>
    c624:	4007883a 	mov	r3,r8
    c628:	003f9706 	br	c488 <__muldf3+0x628>
    c62c:	017ff844 	movi	r5,-31
    c630:	2885c83a 	sub	r2,r5,r2
    c634:	888ad83a 	srl	r5,r17,r2
    c638:	00800804 	movi	r2,32
    c63c:	18801a26 	beq	r3,r2,c6a8 <__muldf3+0x848>
    c640:	01001004 	movi	r4,64
    c644:	20c7c83a 	sub	r3,r4,r3
    c648:	88e2983a 	sll	r17,r17,r3
    c64c:	8ca4b03a 	or	r18,r17,r18
    c650:	9004c03a 	cmpne	r2,r18,zero
    c654:	2884b03a 	or	r2,r5,r2
    c658:	144001cc 	andi	r17,r2,7
    c65c:	88000d1e 	bne	r17,zero,c694 <__muldf3+0x834>
    c660:	0021883a 	mov	r16,zero
    c664:	102cd0fa 	srli	r22,r2,3
    c668:	3027883a 	mov	r19,r6
    c66c:	0005883a 	mov	r2,zero
    c670:	b46cb03a 	or	r22,r22,r17
    c674:	003e5906 	br	bfdc <__muldf3+0x17c>
    c678:	1007883a 	mov	r3,r2
    c67c:	0023883a 	mov	r17,zero
    c680:	8820927a 	slli	r16,r17,9
    c684:	1805883a 	mov	r2,r3
    c688:	8822977a 	slli	r17,r17,29
    c68c:	8020d33a 	srli	r16,r16,12
    c690:	003ff406 	br	c664 <__muldf3+0x804>
    c694:	10c003cc 	andi	r3,r2,15
    c698:	01000104 	movi	r4,4
    c69c:	193ff626 	beq	r3,r4,c678 <__muldf3+0x818>
    c6a0:	0023883a 	mov	r17,zero
    c6a4:	003fd506 	br	c5fc <__muldf3+0x79c>
    c6a8:	0023883a 	mov	r17,zero
    c6ac:	003fe706 	br	c64c <__muldf3+0x7ec>
    c6b0:	00800434 	movhi	r2,16
    c6b4:	8c000234 	orhi	r16,r17,8
    c6b8:	10bfffc4 	addi	r2,r2,-1
    c6bc:	3027883a 	mov	r19,r6
    c6c0:	80a0703a 	and	r16,r16,r2
    c6c4:	902d883a 	mov	r22,r18
    c6c8:	003eac06 	br	c17c <__muldf3+0x31c>

0000c6cc <__subdf3>:
    c6cc:	02000434 	movhi	r8,16
    c6d0:	423fffc4 	addi	r8,r8,-1
    c6d4:	defffb04 	addi	sp,sp,-20
    c6d8:	2a14703a 	and	r10,r5,r8
    c6dc:	3812d53a 	srli	r9,r7,20
    c6e0:	3a10703a 	and	r8,r7,r8
    c6e4:	2006d77a 	srli	r3,r4,29
    c6e8:	3004d77a 	srli	r2,r6,29
    c6ec:	dc000015 	stw	r16,0(sp)
    c6f0:	501490fa 	slli	r10,r10,3
    c6f4:	2820d53a 	srli	r16,r5,20
    c6f8:	401090fa 	slli	r8,r8,3
    c6fc:	dc800215 	stw	r18,8(sp)
    c700:	dc400115 	stw	r17,4(sp)
    c704:	dfc00415 	stw	ra,16(sp)
    c708:	202290fa 	slli	r17,r4,3
    c70c:	dcc00315 	stw	r19,12(sp)
    c710:	4a41ffcc 	andi	r9,r9,2047
    c714:	0101ffc4 	movi	r4,2047
    c718:	2824d7fa 	srli	r18,r5,31
    c71c:	8401ffcc 	andi	r16,r16,2047
    c720:	50c6b03a 	or	r3,r10,r3
    c724:	380ed7fa 	srli	r7,r7,31
    c728:	408ab03a 	or	r5,r8,r2
    c72c:	300c90fa 	slli	r6,r6,3
    c730:	49009626 	beq	r9,r4,c98c <__subdf3+0x2c0>
    c734:	39c0005c 	xori	r7,r7,1
    c738:	8245c83a 	sub	r2,r16,r9
    c73c:	3c807426 	beq	r7,r18,c910 <__subdf3+0x244>
    c740:	0080af0e 	bge	zero,r2,ca00 <__subdf3+0x334>
    c744:	48002a1e 	bne	r9,zero,c7f0 <__subdf3+0x124>
    c748:	2988b03a 	or	r4,r5,r6
    c74c:	20009a1e 	bne	r4,zero,c9b8 <__subdf3+0x2ec>
    c750:	888001cc 	andi	r2,r17,7
    c754:	10000726 	beq	r2,zero,c774 <__subdf3+0xa8>
    c758:	888003cc 	andi	r2,r17,15
    c75c:	01000104 	movi	r4,4
    c760:	11000426 	beq	r2,r4,c774 <__subdf3+0xa8>
    c764:	890b883a 	add	r5,r17,r4
    c768:	2c63803a 	cmpltu	r17,r5,r17
    c76c:	1c47883a 	add	r3,r3,r17
    c770:	2823883a 	mov	r17,r5
    c774:	1880202c 	andhi	r2,r3,128
    c778:	10005926 	beq	r2,zero,c8e0 <__subdf3+0x214>
    c77c:	84000044 	addi	r16,r16,1
    c780:	0081ffc4 	movi	r2,2047
    c784:	8080be26 	beq	r16,r2,ca80 <__subdf3+0x3b4>
    c788:	017fe034 	movhi	r5,65408
    c78c:	297fffc4 	addi	r5,r5,-1
    c790:	1946703a 	and	r3,r3,r5
    c794:	1804977a 	slli	r2,r3,29
    c798:	1806927a 	slli	r3,r3,9
    c79c:	8822d0fa 	srli	r17,r17,3
    c7a0:	8401ffcc 	andi	r16,r16,2047
    c7a4:	180ad33a 	srli	r5,r3,12
    c7a8:	9100004c 	andi	r4,r18,1
    c7ac:	1444b03a 	or	r2,r2,r17
    c7b0:	80c1ffcc 	andi	r3,r16,2047
    c7b4:	1820953a 	slli	r16,r3,20
    c7b8:	20c03fcc 	andi	r3,r4,255
    c7bc:	180897fa 	slli	r4,r3,31
    c7c0:	00c00434 	movhi	r3,16
    c7c4:	18ffffc4 	addi	r3,r3,-1
    c7c8:	28c6703a 	and	r3,r5,r3
    c7cc:	1c06b03a 	or	r3,r3,r16
    c7d0:	1906b03a 	or	r3,r3,r4
    c7d4:	dfc00417 	ldw	ra,16(sp)
    c7d8:	dcc00317 	ldw	r19,12(sp)
    c7dc:	dc800217 	ldw	r18,8(sp)
    c7e0:	dc400117 	ldw	r17,4(sp)
    c7e4:	dc000017 	ldw	r16,0(sp)
    c7e8:	dec00504 	addi	sp,sp,20
    c7ec:	f800283a 	ret
    c7f0:	0101ffc4 	movi	r4,2047
    c7f4:	813fd626 	beq	r16,r4,c750 <__subdf3+0x84>
    c7f8:	29402034 	orhi	r5,r5,128
    c7fc:	01000e04 	movi	r4,56
    c800:	2080a316 	blt	r4,r2,ca90 <__subdf3+0x3c4>
    c804:	010007c4 	movi	r4,31
    c808:	2080c616 	blt	r4,r2,cb24 <__subdf3+0x458>
    c80c:	01000804 	movi	r4,32
    c810:	2089c83a 	sub	r4,r4,r2
    c814:	2910983a 	sll	r8,r5,r4
    c818:	308ed83a 	srl	r7,r6,r2
    c81c:	3108983a 	sll	r4,r6,r4
    c820:	2884d83a 	srl	r2,r5,r2
    c824:	41ccb03a 	or	r6,r8,r7
    c828:	2008c03a 	cmpne	r4,r4,zero
    c82c:	310cb03a 	or	r6,r6,r4
    c830:	898dc83a 	sub	r6,r17,r6
    c834:	89a3803a 	cmpltu	r17,r17,r6
    c838:	1887c83a 	sub	r3,r3,r2
    c83c:	1c47c83a 	sub	r3,r3,r17
    c840:	3023883a 	mov	r17,r6
    c844:	1880202c 	andhi	r2,r3,128
    c848:	10002326 	beq	r2,zero,c8d8 <__subdf3+0x20c>
    c84c:	04c02034 	movhi	r19,128
    c850:	9cffffc4 	addi	r19,r19,-1
    c854:	1ce6703a 	and	r19,r3,r19
    c858:	98007a26 	beq	r19,zero,ca44 <__subdf3+0x378>
    c85c:	9809883a 	mov	r4,r19
    c860:	000d1cc0 	call	d1cc <__clzsi2>
    c864:	113ffe04 	addi	r4,r2,-8
    c868:	00c007c4 	movi	r3,31
    c86c:	19007b16 	blt	r3,r4,ca5c <__subdf3+0x390>
    c870:	00800804 	movi	r2,32
    c874:	1105c83a 	sub	r2,r2,r4
    c878:	8884d83a 	srl	r2,r17,r2
    c87c:	9906983a 	sll	r3,r19,r4
    c880:	8922983a 	sll	r17,r17,r4
    c884:	10c4b03a 	or	r2,r2,r3
    c888:	24007816 	blt	r4,r16,ca6c <__subdf3+0x3a0>
    c88c:	2421c83a 	sub	r16,r4,r16
    c890:	80c00044 	addi	r3,r16,1
    c894:	010007c4 	movi	r4,31
    c898:	20c09516 	blt	r4,r3,caf0 <__subdf3+0x424>
    c89c:	01400804 	movi	r5,32
    c8a0:	28cbc83a 	sub	r5,r5,r3
    c8a4:	88c8d83a 	srl	r4,r17,r3
    c8a8:	8962983a 	sll	r17,r17,r5
    c8ac:	114a983a 	sll	r5,r2,r5
    c8b0:	10c6d83a 	srl	r3,r2,r3
    c8b4:	8804c03a 	cmpne	r2,r17,zero
    c8b8:	290ab03a 	or	r5,r5,r4
    c8bc:	28a2b03a 	or	r17,r5,r2
    c8c0:	0021883a 	mov	r16,zero
    c8c4:	003fa206 	br	c750 <__subdf3+0x84>
    c8c8:	2090b03a 	or	r8,r4,r2
    c8cc:	40018e26 	beq	r8,zero,cf08 <__subdf3+0x83c>
    c8d0:	1007883a 	mov	r3,r2
    c8d4:	2023883a 	mov	r17,r4
    c8d8:	888001cc 	andi	r2,r17,7
    c8dc:	103f9e1e 	bne	r2,zero,c758 <__subdf3+0x8c>
    c8e0:	1804977a 	slli	r2,r3,29
    c8e4:	8822d0fa 	srli	r17,r17,3
    c8e8:	1810d0fa 	srli	r8,r3,3
    c8ec:	9100004c 	andi	r4,r18,1
    c8f0:	1444b03a 	or	r2,r2,r17
    c8f4:	00c1ffc4 	movi	r3,2047
    c8f8:	80c02826 	beq	r16,r3,c99c <__subdf3+0x2d0>
    c8fc:	01400434 	movhi	r5,16
    c900:	297fffc4 	addi	r5,r5,-1
    c904:	80e0703a 	and	r16,r16,r3
    c908:	414a703a 	and	r5,r8,r5
    c90c:	003fa806 	br	c7b0 <__subdf3+0xe4>
    c910:	0080630e 	bge	zero,r2,caa0 <__subdf3+0x3d4>
    c914:	48003026 	beq	r9,zero,c9d8 <__subdf3+0x30c>
    c918:	0101ffc4 	movi	r4,2047
    c91c:	813f8c26 	beq	r16,r4,c750 <__subdf3+0x84>
    c920:	29402034 	orhi	r5,r5,128
    c924:	01000e04 	movi	r4,56
    c928:	2080a90e 	bge	r4,r2,cbd0 <__subdf3+0x504>
    c92c:	298cb03a 	or	r6,r5,r6
    c930:	3012c03a 	cmpne	r9,r6,zero
    c934:	0005883a 	mov	r2,zero
    c938:	4c53883a 	add	r9,r9,r17
    c93c:	4c63803a 	cmpltu	r17,r9,r17
    c940:	10c7883a 	add	r3,r2,r3
    c944:	88c7883a 	add	r3,r17,r3
    c948:	4823883a 	mov	r17,r9
    c94c:	1880202c 	andhi	r2,r3,128
    c950:	1000d026 	beq	r2,zero,cc94 <__subdf3+0x5c8>
    c954:	84000044 	addi	r16,r16,1
    c958:	0081ffc4 	movi	r2,2047
    c95c:	8080fe26 	beq	r16,r2,cd58 <__subdf3+0x68c>
    c960:	00bfe034 	movhi	r2,65408
    c964:	10bfffc4 	addi	r2,r2,-1
    c968:	1886703a 	and	r3,r3,r2
    c96c:	880ad07a 	srli	r5,r17,1
    c970:	180497fa 	slli	r2,r3,31
    c974:	8900004c 	andi	r4,r17,1
    c978:	2922b03a 	or	r17,r5,r4
    c97c:	1806d07a 	srli	r3,r3,1
    c980:	1462b03a 	or	r17,r2,r17
    c984:	3825883a 	mov	r18,r7
    c988:	003f7106 	br	c750 <__subdf3+0x84>
    c98c:	2984b03a 	or	r2,r5,r6
    c990:	103f6826 	beq	r2,zero,c734 <__subdf3+0x68>
    c994:	39c03fcc 	andi	r7,r7,255
    c998:	003f6706 	br	c738 <__subdf3+0x6c>
    c99c:	4086b03a 	or	r3,r8,r2
    c9a0:	18015226 	beq	r3,zero,ceec <__subdf3+0x820>
    c9a4:	00c00434 	movhi	r3,16
    c9a8:	41400234 	orhi	r5,r8,8
    c9ac:	18ffffc4 	addi	r3,r3,-1
    c9b0:	28ca703a 	and	r5,r5,r3
    c9b4:	003f7e06 	br	c7b0 <__subdf3+0xe4>
    c9b8:	10bfffc4 	addi	r2,r2,-1
    c9bc:	1000491e 	bne	r2,zero,cae4 <__subdf3+0x418>
    c9c0:	898fc83a 	sub	r7,r17,r6
    c9c4:	89e3803a 	cmpltu	r17,r17,r7
    c9c8:	1947c83a 	sub	r3,r3,r5
    c9cc:	1c47c83a 	sub	r3,r3,r17
    c9d0:	3823883a 	mov	r17,r7
    c9d4:	003f9b06 	br	c844 <__subdf3+0x178>
    c9d8:	2988b03a 	or	r4,r5,r6
    c9dc:	203f5c26 	beq	r4,zero,c750 <__subdf3+0x84>
    c9e0:	10bfffc4 	addi	r2,r2,-1
    c9e4:	1000931e 	bne	r2,zero,cc34 <__subdf3+0x568>
    c9e8:	898d883a 	add	r6,r17,r6
    c9ec:	3463803a 	cmpltu	r17,r6,r17
    c9f0:	1947883a 	add	r3,r3,r5
    c9f4:	88c7883a 	add	r3,r17,r3
    c9f8:	3023883a 	mov	r17,r6
    c9fc:	003fd306 	br	c94c <__subdf3+0x280>
    ca00:	1000541e 	bne	r2,zero,cb54 <__subdf3+0x488>
    ca04:	80800044 	addi	r2,r16,1
    ca08:	1081ffcc 	andi	r2,r2,2047
    ca0c:	01000044 	movi	r4,1
    ca10:	2080a20e 	bge	r4,r2,cc9c <__subdf3+0x5d0>
    ca14:	8989c83a 	sub	r4,r17,r6
    ca18:	8905803a 	cmpltu	r2,r17,r4
    ca1c:	1967c83a 	sub	r19,r3,r5
    ca20:	98a7c83a 	sub	r19,r19,r2
    ca24:	9880202c 	andhi	r2,r19,128
    ca28:	10006326 	beq	r2,zero,cbb8 <__subdf3+0x4ec>
    ca2c:	3463c83a 	sub	r17,r6,r17
    ca30:	28c7c83a 	sub	r3,r5,r3
    ca34:	344d803a 	cmpltu	r6,r6,r17
    ca38:	19a7c83a 	sub	r19,r3,r6
    ca3c:	3825883a 	mov	r18,r7
    ca40:	983f861e 	bne	r19,zero,c85c <__subdf3+0x190>
    ca44:	8809883a 	mov	r4,r17
    ca48:	000d1cc0 	call	d1cc <__clzsi2>
    ca4c:	10800804 	addi	r2,r2,32
    ca50:	113ffe04 	addi	r4,r2,-8
    ca54:	00c007c4 	movi	r3,31
    ca58:	193f850e 	bge	r3,r4,c870 <__subdf3+0x1a4>
    ca5c:	10bff604 	addi	r2,r2,-40
    ca60:	8884983a 	sll	r2,r17,r2
    ca64:	0023883a 	mov	r17,zero
    ca68:	243f880e 	bge	r4,r16,c88c <__subdf3+0x1c0>
    ca6c:	00ffe034 	movhi	r3,65408
    ca70:	18ffffc4 	addi	r3,r3,-1
    ca74:	8121c83a 	sub	r16,r16,r4
    ca78:	10c6703a 	and	r3,r2,r3
    ca7c:	003f3406 	br	c750 <__subdf3+0x84>
    ca80:	9100004c 	andi	r4,r18,1
    ca84:	000b883a 	mov	r5,zero
    ca88:	0005883a 	mov	r2,zero
    ca8c:	003f4806 	br	c7b0 <__subdf3+0xe4>
    ca90:	298cb03a 	or	r6,r5,r6
    ca94:	300cc03a 	cmpne	r6,r6,zero
    ca98:	0005883a 	mov	r2,zero
    ca9c:	003f6406 	br	c830 <__subdf3+0x164>
    caa0:	10009a1e 	bne	r2,zero,cd0c <__subdf3+0x640>
    caa4:	82400044 	addi	r9,r16,1
    caa8:	4881ffcc 	andi	r2,r9,2047
    caac:	02800044 	movi	r10,1
    cab0:	5080670e 	bge	r10,r2,cc50 <__subdf3+0x584>
    cab4:	0081ffc4 	movi	r2,2047
    cab8:	4880af26 	beq	r9,r2,cd78 <__subdf3+0x6ac>
    cabc:	898d883a 	add	r6,r17,r6
    cac0:	1945883a 	add	r2,r3,r5
    cac4:	3447803a 	cmpltu	r3,r6,r17
    cac8:	1887883a 	add	r3,r3,r2
    cacc:	182297fa 	slli	r17,r3,31
    cad0:	300cd07a 	srli	r6,r6,1
    cad4:	1806d07a 	srli	r3,r3,1
    cad8:	4821883a 	mov	r16,r9
    cadc:	89a2b03a 	or	r17,r17,r6
    cae0:	003f1b06 	br	c750 <__subdf3+0x84>
    cae4:	0101ffc4 	movi	r4,2047
    cae8:	813f441e 	bne	r16,r4,c7fc <__subdf3+0x130>
    caec:	003f1806 	br	c750 <__subdf3+0x84>
    caf0:	843ff844 	addi	r16,r16,-31
    caf4:	01400804 	movi	r5,32
    caf8:	1408d83a 	srl	r4,r2,r16
    cafc:	19405026 	beq	r3,r5,cc40 <__subdf3+0x574>
    cb00:	01401004 	movi	r5,64
    cb04:	28c7c83a 	sub	r3,r5,r3
    cb08:	10c4983a 	sll	r2,r2,r3
    cb0c:	88a2b03a 	or	r17,r17,r2
    cb10:	8822c03a 	cmpne	r17,r17,zero
    cb14:	2462b03a 	or	r17,r4,r17
    cb18:	0007883a 	mov	r3,zero
    cb1c:	0021883a 	mov	r16,zero
    cb20:	003f6d06 	br	c8d8 <__subdf3+0x20c>
    cb24:	11fff804 	addi	r7,r2,-32
    cb28:	01000804 	movi	r4,32
    cb2c:	29ced83a 	srl	r7,r5,r7
    cb30:	11004526 	beq	r2,r4,cc48 <__subdf3+0x57c>
    cb34:	01001004 	movi	r4,64
    cb38:	2089c83a 	sub	r4,r4,r2
    cb3c:	2904983a 	sll	r2,r5,r4
    cb40:	118cb03a 	or	r6,r2,r6
    cb44:	300cc03a 	cmpne	r6,r6,zero
    cb48:	398cb03a 	or	r6,r7,r6
    cb4c:	0005883a 	mov	r2,zero
    cb50:	003f3706 	br	c830 <__subdf3+0x164>
    cb54:	80002a26 	beq	r16,zero,cc00 <__subdf3+0x534>
    cb58:	0101ffc4 	movi	r4,2047
    cb5c:	49006626 	beq	r9,r4,ccf8 <__subdf3+0x62c>
    cb60:	0085c83a 	sub	r2,zero,r2
    cb64:	18c02034 	orhi	r3,r3,128
    cb68:	01000e04 	movi	r4,56
    cb6c:	20807e16 	blt	r4,r2,cd68 <__subdf3+0x69c>
    cb70:	010007c4 	movi	r4,31
    cb74:	2080e716 	blt	r4,r2,cf14 <__subdf3+0x848>
    cb78:	01000804 	movi	r4,32
    cb7c:	2089c83a 	sub	r4,r4,r2
    cb80:	1914983a 	sll	r10,r3,r4
    cb84:	8890d83a 	srl	r8,r17,r2
    cb88:	8908983a 	sll	r4,r17,r4
    cb8c:	1884d83a 	srl	r2,r3,r2
    cb90:	5222b03a 	or	r17,r10,r8
    cb94:	2006c03a 	cmpne	r3,r4,zero
    cb98:	88e2b03a 	or	r17,r17,r3
    cb9c:	3463c83a 	sub	r17,r6,r17
    cba0:	2885c83a 	sub	r2,r5,r2
    cba4:	344d803a 	cmpltu	r6,r6,r17
    cba8:	1187c83a 	sub	r3,r2,r6
    cbac:	4821883a 	mov	r16,r9
    cbb0:	3825883a 	mov	r18,r7
    cbb4:	003f2306 	br	c844 <__subdf3+0x178>
    cbb8:	24d0b03a 	or	r8,r4,r19
    cbbc:	40001b1e 	bne	r8,zero,cc2c <__subdf3+0x560>
    cbc0:	0005883a 	mov	r2,zero
    cbc4:	0009883a 	mov	r4,zero
    cbc8:	0021883a 	mov	r16,zero
    cbcc:	003f4906 	br	c8f4 <__subdf3+0x228>
    cbd0:	010007c4 	movi	r4,31
    cbd4:	20803a16 	blt	r4,r2,ccc0 <__subdf3+0x5f4>
    cbd8:	01000804 	movi	r4,32
    cbdc:	2089c83a 	sub	r4,r4,r2
    cbe0:	2912983a 	sll	r9,r5,r4
    cbe4:	3090d83a 	srl	r8,r6,r2
    cbe8:	3108983a 	sll	r4,r6,r4
    cbec:	2884d83a 	srl	r2,r5,r2
    cbf0:	4a12b03a 	or	r9,r9,r8
    cbf4:	2008c03a 	cmpne	r4,r4,zero
    cbf8:	4912b03a 	or	r9,r9,r4
    cbfc:	003f4e06 	br	c938 <__subdf3+0x26c>
    cc00:	1c48b03a 	or	r4,r3,r17
    cc04:	20003c26 	beq	r4,zero,ccf8 <__subdf3+0x62c>
    cc08:	0084303a 	nor	r2,zero,r2
    cc0c:	1000381e 	bne	r2,zero,ccf0 <__subdf3+0x624>
    cc10:	3463c83a 	sub	r17,r6,r17
    cc14:	28c5c83a 	sub	r2,r5,r3
    cc18:	344d803a 	cmpltu	r6,r6,r17
    cc1c:	1187c83a 	sub	r3,r2,r6
    cc20:	4821883a 	mov	r16,r9
    cc24:	3825883a 	mov	r18,r7
    cc28:	003f0606 	br	c844 <__subdf3+0x178>
    cc2c:	2023883a 	mov	r17,r4
    cc30:	003f0906 	br	c858 <__subdf3+0x18c>
    cc34:	0101ffc4 	movi	r4,2047
    cc38:	813f3a1e 	bne	r16,r4,c924 <__subdf3+0x258>
    cc3c:	003ec406 	br	c750 <__subdf3+0x84>
    cc40:	0005883a 	mov	r2,zero
    cc44:	003fb106 	br	cb0c <__subdf3+0x440>
    cc48:	0005883a 	mov	r2,zero
    cc4c:	003fbc06 	br	cb40 <__subdf3+0x474>
    cc50:	1c44b03a 	or	r2,r3,r17
    cc54:	80008e1e 	bne	r16,zero,ce90 <__subdf3+0x7c4>
    cc58:	1000c826 	beq	r2,zero,cf7c <__subdf3+0x8b0>
    cc5c:	2984b03a 	or	r2,r5,r6
    cc60:	103ebb26 	beq	r2,zero,c750 <__subdf3+0x84>
    cc64:	8989883a 	add	r4,r17,r6
    cc68:	1945883a 	add	r2,r3,r5
    cc6c:	2447803a 	cmpltu	r3,r4,r17
    cc70:	1887883a 	add	r3,r3,r2
    cc74:	1880202c 	andhi	r2,r3,128
    cc78:	2023883a 	mov	r17,r4
    cc7c:	103f1626 	beq	r2,zero,c8d8 <__subdf3+0x20c>
    cc80:	00bfe034 	movhi	r2,65408
    cc84:	10bfffc4 	addi	r2,r2,-1
    cc88:	5021883a 	mov	r16,r10
    cc8c:	1886703a 	and	r3,r3,r2
    cc90:	003eaf06 	br	c750 <__subdf3+0x84>
    cc94:	3825883a 	mov	r18,r7
    cc98:	003f0f06 	br	c8d8 <__subdf3+0x20c>
    cc9c:	1c44b03a 	or	r2,r3,r17
    cca0:	8000251e 	bne	r16,zero,cd38 <__subdf3+0x66c>
    cca4:	1000661e 	bne	r2,zero,ce40 <__subdf3+0x774>
    cca8:	2990b03a 	or	r8,r5,r6
    ccac:	40009626 	beq	r8,zero,cf08 <__subdf3+0x83c>
    ccb0:	2807883a 	mov	r3,r5
    ccb4:	3023883a 	mov	r17,r6
    ccb8:	3825883a 	mov	r18,r7
    ccbc:	003ea406 	br	c750 <__subdf3+0x84>
    ccc0:	127ff804 	addi	r9,r2,-32
    ccc4:	01000804 	movi	r4,32
    ccc8:	2a52d83a 	srl	r9,r5,r9
    cccc:	11008c26 	beq	r2,r4,cf00 <__subdf3+0x834>
    ccd0:	01001004 	movi	r4,64
    ccd4:	2085c83a 	sub	r2,r4,r2
    ccd8:	2884983a 	sll	r2,r5,r2
    ccdc:	118cb03a 	or	r6,r2,r6
    cce0:	300cc03a 	cmpne	r6,r6,zero
    cce4:	4992b03a 	or	r9,r9,r6
    cce8:	0005883a 	mov	r2,zero
    ccec:	003f1206 	br	c938 <__subdf3+0x26c>
    ccf0:	0101ffc4 	movi	r4,2047
    ccf4:	493f9c1e 	bne	r9,r4,cb68 <__subdf3+0x49c>
    ccf8:	2807883a 	mov	r3,r5
    ccfc:	3023883a 	mov	r17,r6
    cd00:	4821883a 	mov	r16,r9
    cd04:	3825883a 	mov	r18,r7
    cd08:	003e9106 	br	c750 <__subdf3+0x84>
    cd0c:	80001f1e 	bne	r16,zero,cd8c <__subdf3+0x6c0>
    cd10:	1c48b03a 	or	r4,r3,r17
    cd14:	20005a26 	beq	r4,zero,ce80 <__subdf3+0x7b4>
    cd18:	0084303a 	nor	r2,zero,r2
    cd1c:	1000561e 	bne	r2,zero,ce78 <__subdf3+0x7ac>
    cd20:	89a3883a 	add	r17,r17,r6
    cd24:	1945883a 	add	r2,r3,r5
    cd28:	898d803a 	cmpltu	r6,r17,r6
    cd2c:	3087883a 	add	r3,r6,r2
    cd30:	4821883a 	mov	r16,r9
    cd34:	003f0506 	br	c94c <__subdf3+0x280>
    cd38:	10002b1e 	bne	r2,zero,cde8 <__subdf3+0x71c>
    cd3c:	2984b03a 	or	r2,r5,r6
    cd40:	10008026 	beq	r2,zero,cf44 <__subdf3+0x878>
    cd44:	2807883a 	mov	r3,r5
    cd48:	3023883a 	mov	r17,r6
    cd4c:	3825883a 	mov	r18,r7
    cd50:	0401ffc4 	movi	r16,2047
    cd54:	003e7e06 	br	c750 <__subdf3+0x84>
    cd58:	3809883a 	mov	r4,r7
    cd5c:	0011883a 	mov	r8,zero
    cd60:	0005883a 	mov	r2,zero
    cd64:	003ee306 	br	c8f4 <__subdf3+0x228>
    cd68:	1c62b03a 	or	r17,r3,r17
    cd6c:	8822c03a 	cmpne	r17,r17,zero
    cd70:	0005883a 	mov	r2,zero
    cd74:	003f8906 	br	cb9c <__subdf3+0x4d0>
    cd78:	3809883a 	mov	r4,r7
    cd7c:	4821883a 	mov	r16,r9
    cd80:	0011883a 	mov	r8,zero
    cd84:	0005883a 	mov	r2,zero
    cd88:	003eda06 	br	c8f4 <__subdf3+0x228>
    cd8c:	0101ffc4 	movi	r4,2047
    cd90:	49003b26 	beq	r9,r4,ce80 <__subdf3+0x7b4>
    cd94:	0085c83a 	sub	r2,zero,r2
    cd98:	18c02034 	orhi	r3,r3,128
    cd9c:	01000e04 	movi	r4,56
    cda0:	20806e16 	blt	r4,r2,cf5c <__subdf3+0x890>
    cda4:	010007c4 	movi	r4,31
    cda8:	20807716 	blt	r4,r2,cf88 <__subdf3+0x8bc>
    cdac:	01000804 	movi	r4,32
    cdb0:	2089c83a 	sub	r4,r4,r2
    cdb4:	1914983a 	sll	r10,r3,r4
    cdb8:	8890d83a 	srl	r8,r17,r2
    cdbc:	8908983a 	sll	r4,r17,r4
    cdc0:	1884d83a 	srl	r2,r3,r2
    cdc4:	5222b03a 	or	r17,r10,r8
    cdc8:	2006c03a 	cmpne	r3,r4,zero
    cdcc:	88e2b03a 	or	r17,r17,r3
    cdd0:	89a3883a 	add	r17,r17,r6
    cdd4:	1145883a 	add	r2,r2,r5
    cdd8:	898d803a 	cmpltu	r6,r17,r6
    cddc:	3087883a 	add	r3,r6,r2
    cde0:	4821883a 	mov	r16,r9
    cde4:	003ed906 	br	c94c <__subdf3+0x280>
    cde8:	2984b03a 	or	r2,r5,r6
    cdec:	10004226 	beq	r2,zero,cef8 <__subdf3+0x82c>
    cdf0:	1808d0fa 	srli	r4,r3,3
    cdf4:	8822d0fa 	srli	r17,r17,3
    cdf8:	1806977a 	slli	r3,r3,29
    cdfc:	2080022c 	andhi	r2,r4,8
    ce00:	1c62b03a 	or	r17,r3,r17
    ce04:	10000826 	beq	r2,zero,ce28 <__subdf3+0x75c>
    ce08:	2812d0fa 	srli	r9,r5,3
    ce0c:	4880022c 	andhi	r2,r9,8
    ce10:	1000051e 	bne	r2,zero,ce28 <__subdf3+0x75c>
    ce14:	300cd0fa 	srli	r6,r6,3
    ce18:	2804977a 	slli	r2,r5,29
    ce1c:	4809883a 	mov	r4,r9
    ce20:	3825883a 	mov	r18,r7
    ce24:	11a2b03a 	or	r17,r2,r6
    ce28:	8806d77a 	srli	r3,r17,29
    ce2c:	200890fa 	slli	r4,r4,3
    ce30:	882290fa 	slli	r17,r17,3
    ce34:	0401ffc4 	movi	r16,2047
    ce38:	1906b03a 	or	r3,r3,r4
    ce3c:	003e4406 	br	c750 <__subdf3+0x84>
    ce40:	2984b03a 	or	r2,r5,r6
    ce44:	103e4226 	beq	r2,zero,c750 <__subdf3+0x84>
    ce48:	8989c83a 	sub	r4,r17,r6
    ce4c:	8911803a 	cmpltu	r8,r17,r4
    ce50:	1945c83a 	sub	r2,r3,r5
    ce54:	1205c83a 	sub	r2,r2,r8
    ce58:	1200202c 	andhi	r8,r2,128
    ce5c:	403e9a26 	beq	r8,zero,c8c8 <__subdf3+0x1fc>
    ce60:	3463c83a 	sub	r17,r6,r17
    ce64:	28c5c83a 	sub	r2,r5,r3
    ce68:	344d803a 	cmpltu	r6,r6,r17
    ce6c:	1187c83a 	sub	r3,r2,r6
    ce70:	3825883a 	mov	r18,r7
    ce74:	003e3606 	br	c750 <__subdf3+0x84>
    ce78:	0101ffc4 	movi	r4,2047
    ce7c:	493fc71e 	bne	r9,r4,cd9c <__subdf3+0x6d0>
    ce80:	2807883a 	mov	r3,r5
    ce84:	3023883a 	mov	r17,r6
    ce88:	4821883a 	mov	r16,r9
    ce8c:	003e3006 	br	c750 <__subdf3+0x84>
    ce90:	10003626 	beq	r2,zero,cf6c <__subdf3+0x8a0>
    ce94:	2984b03a 	or	r2,r5,r6
    ce98:	10001726 	beq	r2,zero,cef8 <__subdf3+0x82c>
    ce9c:	1808d0fa 	srli	r4,r3,3
    cea0:	8822d0fa 	srli	r17,r17,3
    cea4:	1806977a 	slli	r3,r3,29
    cea8:	2080022c 	andhi	r2,r4,8
    ceac:	1c62b03a 	or	r17,r3,r17
    ceb0:	10000726 	beq	r2,zero,ced0 <__subdf3+0x804>
    ceb4:	2812d0fa 	srli	r9,r5,3
    ceb8:	4880022c 	andhi	r2,r9,8
    cebc:	1000041e 	bne	r2,zero,ced0 <__subdf3+0x804>
    cec0:	300cd0fa 	srli	r6,r6,3
    cec4:	2804977a 	slli	r2,r5,29
    cec8:	4809883a 	mov	r4,r9
    cecc:	11a2b03a 	or	r17,r2,r6
    ced0:	8806d77a 	srli	r3,r17,29
    ced4:	200890fa 	slli	r4,r4,3
    ced8:	882290fa 	slli	r17,r17,3
    cedc:	3825883a 	mov	r18,r7
    cee0:	1906b03a 	or	r3,r3,r4
    cee4:	0401ffc4 	movi	r16,2047
    cee8:	003e1906 	br	c750 <__subdf3+0x84>
    ceec:	000b883a 	mov	r5,zero
    cef0:	0005883a 	mov	r2,zero
    cef4:	003e2e06 	br	c7b0 <__subdf3+0xe4>
    cef8:	0401ffc4 	movi	r16,2047
    cefc:	003e1406 	br	c750 <__subdf3+0x84>
    cf00:	0005883a 	mov	r2,zero
    cf04:	003f7506 	br	ccdc <__subdf3+0x610>
    cf08:	0005883a 	mov	r2,zero
    cf0c:	0009883a 	mov	r4,zero
    cf10:	003e7806 	br	c8f4 <__subdf3+0x228>
    cf14:	123ff804 	addi	r8,r2,-32
    cf18:	01000804 	movi	r4,32
    cf1c:	1a10d83a 	srl	r8,r3,r8
    cf20:	11002526 	beq	r2,r4,cfb8 <__subdf3+0x8ec>
    cf24:	01001004 	movi	r4,64
    cf28:	2085c83a 	sub	r2,r4,r2
    cf2c:	1884983a 	sll	r2,r3,r2
    cf30:	1444b03a 	or	r2,r2,r17
    cf34:	1004c03a 	cmpne	r2,r2,zero
    cf38:	40a2b03a 	or	r17,r8,r2
    cf3c:	0005883a 	mov	r2,zero
    cf40:	003f1606 	br	cb9c <__subdf3+0x4d0>
    cf44:	02000434 	movhi	r8,16
    cf48:	0009883a 	mov	r4,zero
    cf4c:	423fffc4 	addi	r8,r8,-1
    cf50:	00bfffc4 	movi	r2,-1
    cf54:	0401ffc4 	movi	r16,2047
    cf58:	003e6606 	br	c8f4 <__subdf3+0x228>
    cf5c:	1c62b03a 	or	r17,r3,r17
    cf60:	8822c03a 	cmpne	r17,r17,zero
    cf64:	0005883a 	mov	r2,zero
    cf68:	003f9906 	br	cdd0 <__subdf3+0x704>
    cf6c:	2807883a 	mov	r3,r5
    cf70:	3023883a 	mov	r17,r6
    cf74:	0401ffc4 	movi	r16,2047
    cf78:	003df506 	br	c750 <__subdf3+0x84>
    cf7c:	2807883a 	mov	r3,r5
    cf80:	3023883a 	mov	r17,r6
    cf84:	003df206 	br	c750 <__subdf3+0x84>
    cf88:	123ff804 	addi	r8,r2,-32
    cf8c:	01000804 	movi	r4,32
    cf90:	1a10d83a 	srl	r8,r3,r8
    cf94:	11000a26 	beq	r2,r4,cfc0 <__subdf3+0x8f4>
    cf98:	01001004 	movi	r4,64
    cf9c:	2085c83a 	sub	r2,r4,r2
    cfa0:	1884983a 	sll	r2,r3,r2
    cfa4:	1444b03a 	or	r2,r2,r17
    cfa8:	1004c03a 	cmpne	r2,r2,zero
    cfac:	40a2b03a 	or	r17,r8,r2
    cfb0:	0005883a 	mov	r2,zero
    cfb4:	003f8606 	br	cdd0 <__subdf3+0x704>
    cfb8:	0005883a 	mov	r2,zero
    cfbc:	003fdc06 	br	cf30 <__subdf3+0x864>
    cfc0:	0005883a 	mov	r2,zero
    cfc4:	003ff706 	br	cfa4 <__subdf3+0x8d8>

0000cfc8 <__fixdfsi>:
    cfc8:	280cd53a 	srli	r6,r5,20
    cfcc:	00c00434 	movhi	r3,16
    cfd0:	18ffffc4 	addi	r3,r3,-1
    cfd4:	3181ffcc 	andi	r6,r6,2047
    cfd8:	01c0ff84 	movi	r7,1022
    cfdc:	28c6703a 	and	r3,r5,r3
    cfe0:	280ad7fa 	srli	r5,r5,31
    cfe4:	3980120e 	bge	r7,r6,d030 <__fixdfsi+0x68>
    cfe8:	00810744 	movi	r2,1053
    cfec:	11800c16 	blt	r2,r6,d020 <__fixdfsi+0x58>
    cff0:	00810cc4 	movi	r2,1075
    cff4:	1185c83a 	sub	r2,r2,r6
    cff8:	01c007c4 	movi	r7,31
    cffc:	18c00434 	orhi	r3,r3,16
    d000:	38800d16 	blt	r7,r2,d038 <__fixdfsi+0x70>
    d004:	31befb44 	addi	r6,r6,-1043
    d008:	2084d83a 	srl	r2,r4,r2
    d00c:	1986983a 	sll	r3,r3,r6
    d010:	1884b03a 	or	r2,r3,r2
    d014:	28000726 	beq	r5,zero,d034 <__fixdfsi+0x6c>
    d018:	0085c83a 	sub	r2,zero,r2
    d01c:	f800283a 	ret
    d020:	00a00034 	movhi	r2,32768
    d024:	10bfffc4 	addi	r2,r2,-1
    d028:	2885883a 	add	r2,r5,r2
    d02c:	f800283a 	ret
    d030:	0005883a 	mov	r2,zero
    d034:	f800283a 	ret
    d038:	008104c4 	movi	r2,1043
    d03c:	1185c83a 	sub	r2,r2,r6
    d040:	1884d83a 	srl	r2,r3,r2
    d044:	003ff306 	br	d014 <__fixdfsi+0x4c>

0000d048 <__floatsidf>:
    d048:	defffd04 	addi	sp,sp,-12
    d04c:	dfc00215 	stw	ra,8(sp)
    d050:	dc400115 	stw	r17,4(sp)
    d054:	dc000015 	stw	r16,0(sp)
    d058:	20002b26 	beq	r4,zero,d108 <__floatsidf+0xc0>
    d05c:	2023883a 	mov	r17,r4
    d060:	2020d7fa 	srli	r16,r4,31
    d064:	20002d16 	blt	r4,zero,d11c <__floatsidf+0xd4>
    d068:	8809883a 	mov	r4,r17
    d06c:	000d1cc0 	call	d1cc <__clzsi2>
    d070:	01410784 	movi	r5,1054
    d074:	288bc83a 	sub	r5,r5,r2
    d078:	01010cc4 	movi	r4,1075
    d07c:	2149c83a 	sub	r4,r4,r5
    d080:	00c007c4 	movi	r3,31
    d084:	1900160e 	bge	r3,r4,d0e0 <__floatsidf+0x98>
    d088:	00c104c4 	movi	r3,1043
    d08c:	1947c83a 	sub	r3,r3,r5
    d090:	88c6983a 	sll	r3,r17,r3
    d094:	00800434 	movhi	r2,16
    d098:	10bfffc4 	addi	r2,r2,-1
    d09c:	1886703a 	and	r3,r3,r2
    d0a0:	2941ffcc 	andi	r5,r5,2047
    d0a4:	800d883a 	mov	r6,r16
    d0a8:	0005883a 	mov	r2,zero
    d0ac:	280a953a 	slli	r5,r5,20
    d0b0:	31803fcc 	andi	r6,r6,255
    d0b4:	01000434 	movhi	r4,16
    d0b8:	300c97fa 	slli	r6,r6,31
    d0bc:	213fffc4 	addi	r4,r4,-1
    d0c0:	1906703a 	and	r3,r3,r4
    d0c4:	1946b03a 	or	r3,r3,r5
    d0c8:	1986b03a 	or	r3,r3,r6
    d0cc:	dfc00217 	ldw	ra,8(sp)
    d0d0:	dc400117 	ldw	r17,4(sp)
    d0d4:	dc000017 	ldw	r16,0(sp)
    d0d8:	dec00304 	addi	sp,sp,12
    d0dc:	f800283a 	ret
    d0e0:	00c002c4 	movi	r3,11
    d0e4:	1887c83a 	sub	r3,r3,r2
    d0e8:	88c6d83a 	srl	r3,r17,r3
    d0ec:	8904983a 	sll	r2,r17,r4
    d0f0:	01000434 	movhi	r4,16
    d0f4:	213fffc4 	addi	r4,r4,-1
    d0f8:	2941ffcc 	andi	r5,r5,2047
    d0fc:	1906703a 	and	r3,r3,r4
    d100:	800d883a 	mov	r6,r16
    d104:	003fe906 	br	d0ac <__floatsidf+0x64>
    d108:	000d883a 	mov	r6,zero
    d10c:	000b883a 	mov	r5,zero
    d110:	0007883a 	mov	r3,zero
    d114:	0005883a 	mov	r2,zero
    d118:	003fe406 	br	d0ac <__floatsidf+0x64>
    d11c:	0123c83a 	sub	r17,zero,r4
    d120:	003fd106 	br	d068 <__floatsidf+0x20>

0000d124 <__floatunsidf>:
    d124:	defffe04 	addi	sp,sp,-8
    d128:	dc000015 	stw	r16,0(sp)
    d12c:	dfc00115 	stw	ra,4(sp)
    d130:	2021883a 	mov	r16,r4
    d134:	20002226 	beq	r4,zero,d1c0 <__floatunsidf+0x9c>
    d138:	000d1cc0 	call	d1cc <__clzsi2>
    d13c:	01010784 	movi	r4,1054
    d140:	2089c83a 	sub	r4,r4,r2
    d144:	01810cc4 	movi	r6,1075
    d148:	310dc83a 	sub	r6,r6,r4
    d14c:	00c007c4 	movi	r3,31
    d150:	1980120e 	bge	r3,r6,d19c <__floatunsidf+0x78>
    d154:	00c104c4 	movi	r3,1043
    d158:	1907c83a 	sub	r3,r3,r4
    d15c:	80ca983a 	sll	r5,r16,r3
    d160:	00800434 	movhi	r2,16
    d164:	10bfffc4 	addi	r2,r2,-1
    d168:	2101ffcc 	andi	r4,r4,2047
    d16c:	0021883a 	mov	r16,zero
    d170:	288a703a 	and	r5,r5,r2
    d174:	2008953a 	slli	r4,r4,20
    d178:	00c00434 	movhi	r3,16
    d17c:	18ffffc4 	addi	r3,r3,-1
    d180:	28c6703a 	and	r3,r5,r3
    d184:	8005883a 	mov	r2,r16
    d188:	1906b03a 	or	r3,r3,r4
    d18c:	dfc00117 	ldw	ra,4(sp)
    d190:	dc000017 	ldw	r16,0(sp)
    d194:	dec00204 	addi	sp,sp,8
    d198:	f800283a 	ret
    d19c:	00c002c4 	movi	r3,11
    d1a0:	188bc83a 	sub	r5,r3,r2
    d1a4:	814ad83a 	srl	r5,r16,r5
    d1a8:	00c00434 	movhi	r3,16
    d1ac:	18ffffc4 	addi	r3,r3,-1
    d1b0:	81a0983a 	sll	r16,r16,r6
    d1b4:	2101ffcc 	andi	r4,r4,2047
    d1b8:	28ca703a 	and	r5,r5,r3
    d1bc:	003fed06 	br	d174 <__floatunsidf+0x50>
    d1c0:	0009883a 	mov	r4,zero
    d1c4:	000b883a 	mov	r5,zero
    d1c8:	003fea06 	br	d174 <__floatunsidf+0x50>

0000d1cc <__clzsi2>:
    d1cc:	00bfffd4 	movui	r2,65535
    d1d0:	11000536 	bltu	r2,r4,d1e8 <__clzsi2+0x1c>
    d1d4:	00803fc4 	movi	r2,255
    d1d8:	11000f36 	bltu	r2,r4,d218 <__clzsi2+0x4c>
    d1dc:	00800804 	movi	r2,32
    d1e0:	0007883a 	mov	r3,zero
    d1e4:	00000506 	br	d1fc <__clzsi2+0x30>
    d1e8:	00804034 	movhi	r2,256
    d1ec:	10bfffc4 	addi	r2,r2,-1
    d1f0:	11000c2e 	bgeu	r2,r4,d224 <__clzsi2+0x58>
    d1f4:	00800204 	movi	r2,8
    d1f8:	00c00604 	movi	r3,24
    d1fc:	20c8d83a 	srl	r4,r4,r3
    d200:	00c10034 	movhi	r3,1024
    d204:	18c08004 	addi	r3,r3,512
    d208:	1909883a 	add	r4,r3,r4
    d20c:	20c00003 	ldbu	r3,0(r4)
    d210:	10c5c83a 	sub	r2,r2,r3
    d214:	f800283a 	ret
    d218:	00800604 	movi	r2,24
    d21c:	00c00204 	movi	r3,8
    d220:	003ff606 	br	d1fc <__clzsi2+0x30>
    d224:	00800404 	movi	r2,16
    d228:	1007883a 	mov	r3,r2
    d22c:	003ff306 	br	d1fc <__clzsi2+0x30>

0000d230 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d230:	defffe04 	addi	sp,sp,-8
    d234:	dfc00115 	stw	ra,4(sp)
    d238:	df000015 	stw	fp,0(sp)
    d23c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d240:	d0a00b17 	ldw	r2,-32724(gp)
    d244:	10000326 	beq	r2,zero,d254 <alt_get_errno+0x24>
    d248:	d0a00b17 	ldw	r2,-32724(gp)
    d24c:	103ee83a 	callr	r2
    d250:	00000106 	br	d258 <alt_get_errno+0x28>
    d254:	d0a01604 	addi	r2,gp,-32680
}
    d258:	e037883a 	mov	sp,fp
    d25c:	dfc00117 	ldw	ra,4(sp)
    d260:	df000017 	ldw	fp,0(sp)
    d264:	dec00204 	addi	sp,sp,8
    d268:	f800283a 	ret

0000d26c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d26c:	defffb04 	addi	sp,sp,-20
    d270:	dfc00415 	stw	ra,16(sp)
    d274:	df000315 	stw	fp,12(sp)
    d278:	df000304 	addi	fp,sp,12
    d27c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d280:	e0bfff17 	ldw	r2,-4(fp)
    d284:	10000816 	blt	r2,zero,d2a8 <close+0x3c>
    d288:	01400304 	movi	r5,12
    d28c:	e13fff17 	ldw	r4,-4(fp)
    d290:	000a9640 	call	a964 <__mulsi3>
    d294:	1007883a 	mov	r3,r2
    d298:	00810034 	movhi	r2,1024
    d29c:	10830004 	addi	r2,r2,3072
    d2a0:	1885883a 	add	r2,r3,r2
    d2a4:	00000106 	br	d2ac <close+0x40>
    d2a8:	0005883a 	mov	r2,zero
    d2ac:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d2b0:	e0bffd17 	ldw	r2,-12(fp)
    d2b4:	10001926 	beq	r2,zero,d31c <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d2b8:	e0bffd17 	ldw	r2,-12(fp)
    d2bc:	10800017 	ldw	r2,0(r2)
    d2c0:	10800417 	ldw	r2,16(r2)
    d2c4:	10000626 	beq	r2,zero,d2e0 <close+0x74>
    d2c8:	e0bffd17 	ldw	r2,-12(fp)
    d2cc:	10800017 	ldw	r2,0(r2)
    d2d0:	10800417 	ldw	r2,16(r2)
    d2d4:	e13ffd17 	ldw	r4,-12(fp)
    d2d8:	103ee83a 	callr	r2
    d2dc:	00000106 	br	d2e4 <close+0x78>
    d2e0:	0005883a 	mov	r2,zero
    d2e4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d2e8:	e13fff17 	ldw	r4,-4(fp)
    d2ec:	000d9540 	call	d954 <alt_release_fd>
    if (rval < 0)
    d2f0:	e0bffe17 	ldw	r2,-8(fp)
    d2f4:	1000070e 	bge	r2,zero,d314 <close+0xa8>
    {
      ALT_ERRNO = -rval;
    d2f8:	000d2300 	call	d230 <alt_get_errno>
    d2fc:	1007883a 	mov	r3,r2
    d300:	e0bffe17 	ldw	r2,-8(fp)
    d304:	0085c83a 	sub	r2,zero,r2
    d308:	18800015 	stw	r2,0(r3)
      return -1;
    d30c:	00bfffc4 	movi	r2,-1
    d310:	00000706 	br	d330 <close+0xc4>
    }
    return 0;
    d314:	0005883a 	mov	r2,zero
    d318:	00000506 	br	d330 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d31c:	000d2300 	call	d230 <alt_get_errno>
    d320:	1007883a 	mov	r3,r2
    d324:	00801444 	movi	r2,81
    d328:	18800015 	stw	r2,0(r3)
    return -1;
    d32c:	00bfffc4 	movi	r2,-1
  }
}
    d330:	e037883a 	mov	sp,fp
    d334:	dfc00117 	ldw	ra,4(sp)
    d338:	df000017 	ldw	fp,0(sp)
    d33c:	dec00204 	addi	sp,sp,8
    d340:	f800283a 	ret

0000d344 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d344:	defffc04 	addi	sp,sp,-16
    d348:	df000315 	stw	fp,12(sp)
    d34c:	df000304 	addi	fp,sp,12
    d350:	e13ffd15 	stw	r4,-12(fp)
    d354:	e17ffe15 	stw	r5,-8(fp)
    d358:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d35c:	e0bfff17 	ldw	r2,-4(fp)
}
    d360:	e037883a 	mov	sp,fp
    d364:	df000017 	ldw	fp,0(sp)
    d368:	dec00104 	addi	sp,sp,4
    d36c:	f800283a 	ret

0000d370 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d370:	defffe04 	addi	sp,sp,-8
    d374:	dfc00115 	stw	ra,4(sp)
    d378:	df000015 	stw	fp,0(sp)
    d37c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d380:	d0a00b17 	ldw	r2,-32724(gp)
    d384:	10000326 	beq	r2,zero,d394 <alt_get_errno+0x24>
    d388:	d0a00b17 	ldw	r2,-32724(gp)
    d38c:	103ee83a 	callr	r2
    d390:	00000106 	br	d398 <alt_get_errno+0x28>
    d394:	d0a01604 	addi	r2,gp,-32680
}
    d398:	e037883a 	mov	sp,fp
    d39c:	dfc00117 	ldw	ra,4(sp)
    d3a0:	df000017 	ldw	fp,0(sp)
    d3a4:	dec00204 	addi	sp,sp,8
    d3a8:	f800283a 	ret

0000d3ac <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d3ac:	defffb04 	addi	sp,sp,-20
    d3b0:	dfc00415 	stw	ra,16(sp)
    d3b4:	df000315 	stw	fp,12(sp)
    d3b8:	df000304 	addi	fp,sp,12
    d3bc:	e13ffe15 	stw	r4,-8(fp)
    d3c0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d3c4:	e0bffe17 	ldw	r2,-8(fp)
    d3c8:	10000816 	blt	r2,zero,d3ec <fstat+0x40>
    d3cc:	01400304 	movi	r5,12
    d3d0:	e13ffe17 	ldw	r4,-8(fp)
    d3d4:	000a9640 	call	a964 <__mulsi3>
    d3d8:	1007883a 	mov	r3,r2
    d3dc:	00810034 	movhi	r2,1024
    d3e0:	10830004 	addi	r2,r2,3072
    d3e4:	1885883a 	add	r2,r3,r2
    d3e8:	00000106 	br	d3f0 <fstat+0x44>
    d3ec:	0005883a 	mov	r2,zero
    d3f0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d3f4:	e0bffd17 	ldw	r2,-12(fp)
    d3f8:	10001026 	beq	r2,zero,d43c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d3fc:	e0bffd17 	ldw	r2,-12(fp)
    d400:	10800017 	ldw	r2,0(r2)
    d404:	10800817 	ldw	r2,32(r2)
    d408:	10000726 	beq	r2,zero,d428 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
    d40c:	e0bffd17 	ldw	r2,-12(fp)
    d410:	10800017 	ldw	r2,0(r2)
    d414:	10800817 	ldw	r2,32(r2)
    d418:	e17fff17 	ldw	r5,-4(fp)
    d41c:	e13ffd17 	ldw	r4,-12(fp)
    d420:	103ee83a 	callr	r2
    d424:	00000a06 	br	d450 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d428:	e0bfff17 	ldw	r2,-4(fp)
    d42c:	00c80004 	movi	r3,8192
    d430:	10c00115 	stw	r3,4(r2)
      return 0;
    d434:	0005883a 	mov	r2,zero
    d438:	00000506 	br	d450 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d43c:	000d3700 	call	d370 <alt_get_errno>
    d440:	1007883a 	mov	r3,r2
    d444:	00801444 	movi	r2,81
    d448:	18800015 	stw	r2,0(r3)
    return -1;
    d44c:	00bfffc4 	movi	r2,-1
  }
}
    d450:	e037883a 	mov	sp,fp
    d454:	dfc00117 	ldw	ra,4(sp)
    d458:	df000017 	ldw	fp,0(sp)
    d45c:	dec00204 	addi	sp,sp,8
    d460:	f800283a 	ret

0000d464 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d464:	defffe04 	addi	sp,sp,-8
    d468:	dfc00115 	stw	ra,4(sp)
    d46c:	df000015 	stw	fp,0(sp)
    d470:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d474:	d0a00b17 	ldw	r2,-32724(gp)
    d478:	10000326 	beq	r2,zero,d488 <alt_get_errno+0x24>
    d47c:	d0a00b17 	ldw	r2,-32724(gp)
    d480:	103ee83a 	callr	r2
    d484:	00000106 	br	d48c <alt_get_errno+0x28>
    d488:	d0a01604 	addi	r2,gp,-32680
}
    d48c:	e037883a 	mov	sp,fp
    d490:	dfc00117 	ldw	ra,4(sp)
    d494:	df000017 	ldw	fp,0(sp)
    d498:	dec00204 	addi	sp,sp,8
    d49c:	f800283a 	ret

0000d4a0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d4a0:	deffed04 	addi	sp,sp,-76
    d4a4:	dfc01215 	stw	ra,72(sp)
    d4a8:	df001115 	stw	fp,68(sp)
    d4ac:	df001104 	addi	fp,sp,68
    d4b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d4b4:	e0bfff17 	ldw	r2,-4(fp)
    d4b8:	10000816 	blt	r2,zero,d4dc <isatty+0x3c>
    d4bc:	01400304 	movi	r5,12
    d4c0:	e13fff17 	ldw	r4,-4(fp)
    d4c4:	000a9640 	call	a964 <__mulsi3>
    d4c8:	1007883a 	mov	r3,r2
    d4cc:	00810034 	movhi	r2,1024
    d4d0:	10830004 	addi	r2,r2,3072
    d4d4:	1885883a 	add	r2,r3,r2
    d4d8:	00000106 	br	d4e0 <isatty+0x40>
    d4dc:	0005883a 	mov	r2,zero
    d4e0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d4e4:	e0bfef17 	ldw	r2,-68(fp)
    d4e8:	10000e26 	beq	r2,zero,d524 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d4ec:	e0bfef17 	ldw	r2,-68(fp)
    d4f0:	10800017 	ldw	r2,0(r2)
    d4f4:	10800817 	ldw	r2,32(r2)
    d4f8:	1000021e 	bne	r2,zero,d504 <isatty+0x64>
    {
      return 1;
    d4fc:	00800044 	movi	r2,1
    d500:	00000d06 	br	d538 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d504:	e0bff004 	addi	r2,fp,-64
    d508:	100b883a 	mov	r5,r2
    d50c:	e13fff17 	ldw	r4,-4(fp)
    d510:	000d3ac0 	call	d3ac <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d514:	e0bff117 	ldw	r2,-60(fp)
    d518:	10880020 	cmpeqi	r2,r2,8192
    d51c:	10803fcc 	andi	r2,r2,255
    d520:	00000506 	br	d538 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d524:	000d4640 	call	d464 <alt_get_errno>
    d528:	1007883a 	mov	r3,r2
    d52c:	00801444 	movi	r2,81
    d530:	18800015 	stw	r2,0(r3)
    return 0;
    d534:	0005883a 	mov	r2,zero
  }
}
    d538:	e037883a 	mov	sp,fp
    d53c:	dfc00117 	ldw	ra,4(sp)
    d540:	df000017 	ldw	fp,0(sp)
    d544:	dec00204 	addi	sp,sp,8
    d548:	f800283a 	ret

0000d54c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d54c:	defffc04 	addi	sp,sp,-16
    d550:	df000315 	stw	fp,12(sp)
    d554:	df000304 	addi	fp,sp,12
    d558:	e13ffd15 	stw	r4,-12(fp)
    d55c:	e17ffe15 	stw	r5,-8(fp)
    d560:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d564:	e0fffe17 	ldw	r3,-8(fp)
    d568:	e0bffd17 	ldw	r2,-12(fp)
    d56c:	18800c26 	beq	r3,r2,d5a0 <alt_load_section+0x54>
  {
    while( to != end )
    d570:	00000806 	br	d594 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d574:	e0bffe17 	ldw	r2,-8(fp)
    d578:	10c00104 	addi	r3,r2,4
    d57c:	e0fffe15 	stw	r3,-8(fp)
    d580:	e0fffd17 	ldw	r3,-12(fp)
    d584:	19000104 	addi	r4,r3,4
    d588:	e13ffd15 	stw	r4,-12(fp)
    d58c:	18c00017 	ldw	r3,0(r3)
    d590:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d594:	e0fffe17 	ldw	r3,-8(fp)
    d598:	e0bfff17 	ldw	r2,-4(fp)
    d59c:	18bff51e 	bne	r3,r2,d574 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
    d5a0:	0001883a 	nop
    d5a4:	e037883a 	mov	sp,fp
    d5a8:	df000017 	ldw	fp,0(sp)
    d5ac:	dec00104 	addi	sp,sp,4
    d5b0:	f800283a 	ret

0000d5b4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d5b4:	defffe04 	addi	sp,sp,-8
    d5b8:	dfc00115 	stw	ra,4(sp)
    d5bc:	df000015 	stw	fp,0(sp)
    d5c0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d5c4:	01810034 	movhi	r6,1024
    d5c8:	31878804 	addi	r6,r6,7712
    d5cc:	01410034 	movhi	r5,1024
    d5d0:	2940cd04 	addi	r5,r5,820
    d5d4:	01000074 	movhi	r4,1
    d5d8:	213eff04 	addi	r4,r4,-1028
    d5dc:	000d54c0 	call	d54c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d5e0:	01800034 	movhi	r6,0
    d5e4:	31808c04 	addi	r6,r6,560
    d5e8:	01400034 	movhi	r5,0
    d5ec:	29400804 	addi	r5,r5,32
    d5f0:	01000034 	movhi	r4,0
    d5f4:	21000804 	addi	r4,r4,32
    d5f8:	000d54c0 	call	d54c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d5fc:	01810034 	movhi	r6,1024
    d600:	3180cd04 	addi	r6,r6,820
    d604:	01410034 	movhi	r5,1024
    d608:	29400004 	addi	r5,r5,0
    d60c:	01000074 	movhi	r4,1
    d610:	213e3204 	addi	r4,r4,-1848
    d614:	000d54c0 	call	d54c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d618:	000e8100 	call	e810 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d61c:	000e9d00 	call	e9d0 <alt_icache_flush_all>
}
    d620:	0001883a 	nop
    d624:	e037883a 	mov	sp,fp
    d628:	dfc00117 	ldw	ra,4(sp)
    d62c:	df000017 	ldw	fp,0(sp)
    d630:	dec00204 	addi	sp,sp,8
    d634:	f800283a 	ret

0000d638 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d638:	defffe04 	addi	sp,sp,-8
    d63c:	dfc00115 	stw	ra,4(sp)
    d640:	df000015 	stw	fp,0(sp)
    d644:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d648:	d0a00b17 	ldw	r2,-32724(gp)
    d64c:	10000326 	beq	r2,zero,d65c <alt_get_errno+0x24>
    d650:	d0a00b17 	ldw	r2,-32724(gp)
    d654:	103ee83a 	callr	r2
    d658:	00000106 	br	d660 <alt_get_errno+0x28>
    d65c:	d0a01604 	addi	r2,gp,-32680
}
    d660:	e037883a 	mov	sp,fp
    d664:	dfc00117 	ldw	ra,4(sp)
    d668:	df000017 	ldw	fp,0(sp)
    d66c:	dec00204 	addi	sp,sp,8
    d670:	f800283a 	ret

0000d674 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d674:	defff904 	addi	sp,sp,-28
    d678:	dfc00615 	stw	ra,24(sp)
    d67c:	df000515 	stw	fp,20(sp)
    d680:	df000504 	addi	fp,sp,20
    d684:	e13ffd15 	stw	r4,-12(fp)
    d688:	e17ffe15 	stw	r5,-8(fp)
    d68c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d690:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d694:	e0bffd17 	ldw	r2,-12(fp)
    d698:	10000816 	blt	r2,zero,d6bc <lseek+0x48>
    d69c:	01400304 	movi	r5,12
    d6a0:	e13ffd17 	ldw	r4,-12(fp)
    d6a4:	000a9640 	call	a964 <__mulsi3>
    d6a8:	1007883a 	mov	r3,r2
    d6ac:	00810034 	movhi	r2,1024
    d6b0:	10830004 	addi	r2,r2,3072
    d6b4:	1885883a 	add	r2,r3,r2
    d6b8:	00000106 	br	d6c0 <lseek+0x4c>
    d6bc:	0005883a 	mov	r2,zero
    d6c0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d6c4:	e0bffc17 	ldw	r2,-16(fp)
    d6c8:	10001026 	beq	r2,zero,d70c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d6cc:	e0bffc17 	ldw	r2,-16(fp)
    d6d0:	10800017 	ldw	r2,0(r2)
    d6d4:	10800717 	ldw	r2,28(r2)
    d6d8:	10000926 	beq	r2,zero,d700 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d6dc:	e0bffc17 	ldw	r2,-16(fp)
    d6e0:	10800017 	ldw	r2,0(r2)
    d6e4:	10800717 	ldw	r2,28(r2)
    d6e8:	e1bfff17 	ldw	r6,-4(fp)
    d6ec:	e17ffe17 	ldw	r5,-8(fp)
    d6f0:	e13ffc17 	ldw	r4,-16(fp)
    d6f4:	103ee83a 	callr	r2
    d6f8:	e0bffb15 	stw	r2,-20(fp)
    d6fc:	00000506 	br	d714 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d700:	00bfde84 	movi	r2,-134
    d704:	e0bffb15 	stw	r2,-20(fp)
    d708:	00000206 	br	d714 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
    d70c:	00bfebc4 	movi	r2,-81
    d710:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d714:	e0bffb17 	ldw	r2,-20(fp)
    d718:	1000070e 	bge	r2,zero,d738 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
    d71c:	000d6380 	call	d638 <alt_get_errno>
    d720:	1007883a 	mov	r3,r2
    d724:	e0bffb17 	ldw	r2,-20(fp)
    d728:	0085c83a 	sub	r2,zero,r2
    d72c:	18800015 	stw	r2,0(r3)
    rc = -1;
    d730:	00bfffc4 	movi	r2,-1
    d734:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d738:	e0bffb17 	ldw	r2,-20(fp)
}
    d73c:	e037883a 	mov	sp,fp
    d740:	dfc00117 	ldw	ra,4(sp)
    d744:	df000017 	ldw	fp,0(sp)
    d748:	dec00204 	addi	sp,sp,8
    d74c:	f800283a 	ret

0000d750 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d750:	defffd04 	addi	sp,sp,-12
    d754:	dfc00215 	stw	ra,8(sp)
    d758:	df000115 	stw	fp,4(sp)
    d75c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d760:	0009883a 	mov	r4,zero
    d764:	000dbf80 	call	dbf8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d768:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d76c:	000dc300 	call	dc30 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d770:	01810034 	movhi	r6,1024
    d774:	3180c304 	addi	r6,r6,780
    d778:	01410034 	movhi	r5,1024
    d77c:	2940c304 	addi	r5,r5,780
    d780:	01010034 	movhi	r4,1024
    d784:	2100c304 	addi	r4,r4,780
    d788:	000ed740 	call	ed74 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d78c:	000e9100 	call	e910 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d790:	01000074 	movhi	r4,1
    d794:	213a5c04 	addi	r4,r4,-5776
    d798:	000f5340 	call	f534 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d79c:	d0a01717 	ldw	r2,-32676(gp)
    d7a0:	d0e01817 	ldw	r3,-32672(gp)
    d7a4:	d1201917 	ldw	r4,-32668(gp)
    d7a8:	200d883a 	mov	r6,r4
    d7ac:	180b883a 	mov	r5,r3
    d7b0:	1009883a 	mov	r4,r2
    d7b4:	000026c0 	call	26c <main>
    d7b8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d7bc:	01000044 	movi	r4,1
    d7c0:	000d26c0 	call	d26c <close>
  exit (result);
    d7c4:	e13fff17 	ldw	r4,-4(fp)
    d7c8:	000f5480 	call	f548 <exit>

0000d7cc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d7cc:	defffe04 	addi	sp,sp,-8
    d7d0:	df000115 	stw	fp,4(sp)
    d7d4:	df000104 	addi	fp,sp,4
    d7d8:	e13fff15 	stw	r4,-4(fp)
}
    d7dc:	0001883a 	nop
    d7e0:	e037883a 	mov	sp,fp
    d7e4:	df000017 	ldw	fp,0(sp)
    d7e8:	dec00104 	addi	sp,sp,4
    d7ec:	f800283a 	ret

0000d7f0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d7f0:	defffe04 	addi	sp,sp,-8
    d7f4:	df000115 	stw	fp,4(sp)
    d7f8:	df000104 	addi	fp,sp,4
    d7fc:	e13fff15 	stw	r4,-4(fp)
}
    d800:	0001883a 	nop
    d804:	e037883a 	mov	sp,fp
    d808:	df000017 	ldw	fp,0(sp)
    d80c:	dec00104 	addi	sp,sp,4
    d810:	f800283a 	ret

0000d814 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d814:	defffe04 	addi	sp,sp,-8
    d818:	dfc00115 	stw	ra,4(sp)
    d81c:	df000015 	stw	fp,0(sp)
    d820:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d824:	d0a00b17 	ldw	r2,-32724(gp)
    d828:	10000326 	beq	r2,zero,d838 <alt_get_errno+0x24>
    d82c:	d0a00b17 	ldw	r2,-32724(gp)
    d830:	103ee83a 	callr	r2
    d834:	00000106 	br	d83c <alt_get_errno+0x28>
    d838:	d0a01604 	addi	r2,gp,-32680
}
    d83c:	e037883a 	mov	sp,fp
    d840:	dfc00117 	ldw	ra,4(sp)
    d844:	df000017 	ldw	fp,0(sp)
    d848:	dec00204 	addi	sp,sp,8
    d84c:	f800283a 	ret

0000d850 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d850:	defff904 	addi	sp,sp,-28
    d854:	dfc00615 	stw	ra,24(sp)
    d858:	df000515 	stw	fp,20(sp)
    d85c:	df000504 	addi	fp,sp,20
    d860:	e13ffd15 	stw	r4,-12(fp)
    d864:	e17ffe15 	stw	r5,-8(fp)
    d868:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d86c:	e0bffd17 	ldw	r2,-12(fp)
    d870:	10000816 	blt	r2,zero,d894 <read+0x44>
    d874:	01400304 	movi	r5,12
    d878:	e13ffd17 	ldw	r4,-12(fp)
    d87c:	000a9640 	call	a964 <__mulsi3>
    d880:	1007883a 	mov	r3,r2
    d884:	00810034 	movhi	r2,1024
    d888:	10830004 	addi	r2,r2,3072
    d88c:	1885883a 	add	r2,r3,r2
    d890:	00000106 	br	d898 <read+0x48>
    d894:	0005883a 	mov	r2,zero
    d898:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d89c:	e0bffb17 	ldw	r2,-20(fp)
    d8a0:	10002226 	beq	r2,zero,d92c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d8a4:	e0bffb17 	ldw	r2,-20(fp)
    d8a8:	10800217 	ldw	r2,8(r2)
    d8ac:	108000cc 	andi	r2,r2,3
    d8b0:	10800060 	cmpeqi	r2,r2,1
    d8b4:	1000181e 	bne	r2,zero,d918 <read+0xc8>
        (fd->dev->read))
    d8b8:	e0bffb17 	ldw	r2,-20(fp)
    d8bc:	10800017 	ldw	r2,0(r2)
    d8c0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d8c4:	10001426 	beq	r2,zero,d918 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d8c8:	e0bffb17 	ldw	r2,-20(fp)
    d8cc:	10800017 	ldw	r2,0(r2)
    d8d0:	10800517 	ldw	r2,20(r2)
    d8d4:	e0ffff17 	ldw	r3,-4(fp)
    d8d8:	180d883a 	mov	r6,r3
    d8dc:	e17ffe17 	ldw	r5,-8(fp)
    d8e0:	e13ffb17 	ldw	r4,-20(fp)
    d8e4:	103ee83a 	callr	r2
    d8e8:	e0bffc15 	stw	r2,-16(fp)
    d8ec:	e0bffc17 	ldw	r2,-16(fp)
    d8f0:	1000070e 	bge	r2,zero,d910 <read+0xc0>
        {
          ALT_ERRNO = -rval;
    d8f4:	000d8140 	call	d814 <alt_get_errno>
    d8f8:	1007883a 	mov	r3,r2
    d8fc:	e0bffc17 	ldw	r2,-16(fp)
    d900:	0085c83a 	sub	r2,zero,r2
    d904:	18800015 	stw	r2,0(r3)
          return -1;
    d908:	00bfffc4 	movi	r2,-1
    d90c:	00000c06 	br	d940 <read+0xf0>
        }
        return rval;
    d910:	e0bffc17 	ldw	r2,-16(fp)
    d914:	00000a06 	br	d940 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d918:	000d8140 	call	d814 <alt_get_errno>
    d91c:	1007883a 	mov	r3,r2
    d920:	00800344 	movi	r2,13
    d924:	18800015 	stw	r2,0(r3)
    d928:	00000406 	br	d93c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d92c:	000d8140 	call	d814 <alt_get_errno>
    d930:	1007883a 	mov	r3,r2
    d934:	00801444 	movi	r2,81
    d938:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d93c:	00bfffc4 	movi	r2,-1
}
    d940:	e037883a 	mov	sp,fp
    d944:	dfc00117 	ldw	ra,4(sp)
    d948:	df000017 	ldw	fp,0(sp)
    d94c:	dec00204 	addi	sp,sp,8
    d950:	f800283a 	ret

0000d954 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d954:	defffc04 	addi	sp,sp,-16
    d958:	dfc00315 	stw	ra,12(sp)
    d95c:	df000215 	stw	fp,8(sp)
    d960:	dc000115 	stw	r16,4(sp)
    d964:	df000204 	addi	fp,sp,8
    d968:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    d96c:	e0bffe17 	ldw	r2,-8(fp)
    d970:	108000d0 	cmplti	r2,r2,3
    d974:	1000111e 	bne	r2,zero,d9bc <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    d978:	04010034 	movhi	r16,1024
    d97c:	84030004 	addi	r16,r16,3072
    d980:	e0bffe17 	ldw	r2,-8(fp)
    d984:	01400304 	movi	r5,12
    d988:	1009883a 	mov	r4,r2
    d98c:	000a9640 	call	a964 <__mulsi3>
    d990:	8085883a 	add	r2,r16,r2
    d994:	10800204 	addi	r2,r2,8
    d998:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d99c:	04010034 	movhi	r16,1024
    d9a0:	84030004 	addi	r16,r16,3072
    d9a4:	e0bffe17 	ldw	r2,-8(fp)
    d9a8:	01400304 	movi	r5,12
    d9ac:	1009883a 	mov	r4,r2
    d9b0:	000a9640 	call	a964 <__mulsi3>
    d9b4:	8085883a 	add	r2,r16,r2
    d9b8:	10000015 	stw	zero,0(r2)
  }
}
    d9bc:	0001883a 	nop
    d9c0:	e6ffff04 	addi	sp,fp,-4
    d9c4:	dfc00217 	ldw	ra,8(sp)
    d9c8:	df000117 	ldw	fp,4(sp)
    d9cc:	dc000017 	ldw	r16,0(sp)
    d9d0:	dec00304 	addi	sp,sp,12
    d9d4:	f800283a 	ret

0000d9d8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d9d8:	defff904 	addi	sp,sp,-28
    d9dc:	df000615 	stw	fp,24(sp)
    d9e0:	df000604 	addi	fp,sp,24
    d9e4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d9e8:	0005303a 	rdctl	r2,status
    d9ec:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d9f0:	e0fffe17 	ldw	r3,-8(fp)
    d9f4:	00bfff84 	movi	r2,-2
    d9f8:	1884703a 	and	r2,r3,r2
    d9fc:	1001703a 	wrctl	status,r2
  
  return context;
    da00:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    da04:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    da08:	d0a00c17 	ldw	r2,-32720(gp)
    da0c:	10c000c4 	addi	r3,r2,3
    da10:	00bfff04 	movi	r2,-4
    da14:	1884703a 	and	r2,r3,r2
    da18:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    da1c:	d0e00c17 	ldw	r3,-32720(gp)
    da20:	e0bfff17 	ldw	r2,-4(fp)
    da24:	1887883a 	add	r3,r3,r2
    da28:	00820034 	movhi	r2,2048
    da2c:	10800004 	addi	r2,r2,0
    da30:	10c0062e 	bgeu	r2,r3,da4c <sbrk+0x74>
    da34:	e0bffb17 	ldw	r2,-20(fp)
    da38:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    da3c:	e0bffa17 	ldw	r2,-24(fp)
    da40:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    da44:	00bfffc4 	movi	r2,-1
    da48:	00000b06 	br	da78 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    da4c:	d0a00c17 	ldw	r2,-32720(gp)
    da50:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    da54:	d0e00c17 	ldw	r3,-32720(gp)
    da58:	e0bfff17 	ldw	r2,-4(fp)
    da5c:	1885883a 	add	r2,r3,r2
    da60:	d0a00c15 	stw	r2,-32720(gp)
    da64:	e0bffb17 	ldw	r2,-20(fp)
    da68:	e0bffc15 	stw	r2,-16(fp)
    da6c:	e0bffc17 	ldw	r2,-16(fp)
    da70:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    da74:	e0bffd17 	ldw	r2,-12(fp)
} 
    da78:	e037883a 	mov	sp,fp
    da7c:	df000017 	ldw	fp,0(sp)
    da80:	dec00104 	addi	sp,sp,4
    da84:	f800283a 	ret

0000da88 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    da88:	defffe04 	addi	sp,sp,-8
    da8c:	dfc00115 	stw	ra,4(sp)
    da90:	df000015 	stw	fp,0(sp)
    da94:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    da98:	d0a00b17 	ldw	r2,-32724(gp)
    da9c:	10000326 	beq	r2,zero,daac <alt_get_errno+0x24>
    daa0:	d0a00b17 	ldw	r2,-32724(gp)
    daa4:	103ee83a 	callr	r2
    daa8:	00000106 	br	dab0 <alt_get_errno+0x28>
    daac:	d0a01604 	addi	r2,gp,-32680
}
    dab0:	e037883a 	mov	sp,fp
    dab4:	dfc00117 	ldw	ra,4(sp)
    dab8:	df000017 	ldw	fp,0(sp)
    dabc:	dec00204 	addi	sp,sp,8
    dac0:	f800283a 	ret

0000dac4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    dac4:	defff904 	addi	sp,sp,-28
    dac8:	dfc00615 	stw	ra,24(sp)
    dacc:	df000515 	stw	fp,20(sp)
    dad0:	df000504 	addi	fp,sp,20
    dad4:	e13ffd15 	stw	r4,-12(fp)
    dad8:	e17ffe15 	stw	r5,-8(fp)
    dadc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dae0:	e0bffd17 	ldw	r2,-12(fp)
    dae4:	10000816 	blt	r2,zero,db08 <write+0x44>
    dae8:	01400304 	movi	r5,12
    daec:	e13ffd17 	ldw	r4,-12(fp)
    daf0:	000a9640 	call	a964 <__mulsi3>
    daf4:	1007883a 	mov	r3,r2
    daf8:	00810034 	movhi	r2,1024
    dafc:	10830004 	addi	r2,r2,3072
    db00:	1885883a 	add	r2,r3,r2
    db04:	00000106 	br	db0c <write+0x48>
    db08:	0005883a 	mov	r2,zero
    db0c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    db10:	e0bffb17 	ldw	r2,-20(fp)
    db14:	10002126 	beq	r2,zero,db9c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    db18:	e0bffb17 	ldw	r2,-20(fp)
    db1c:	10800217 	ldw	r2,8(r2)
    db20:	108000cc 	andi	r2,r2,3
    db24:	10001826 	beq	r2,zero,db88 <write+0xc4>
    db28:	e0bffb17 	ldw	r2,-20(fp)
    db2c:	10800017 	ldw	r2,0(r2)
    db30:	10800617 	ldw	r2,24(r2)
    db34:	10001426 	beq	r2,zero,db88 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    db38:	e0bffb17 	ldw	r2,-20(fp)
    db3c:	10800017 	ldw	r2,0(r2)
    db40:	10800617 	ldw	r2,24(r2)
    db44:	e0ffff17 	ldw	r3,-4(fp)
    db48:	180d883a 	mov	r6,r3
    db4c:	e17ffe17 	ldw	r5,-8(fp)
    db50:	e13ffb17 	ldw	r4,-20(fp)
    db54:	103ee83a 	callr	r2
    db58:	e0bffc15 	stw	r2,-16(fp)
    db5c:	e0bffc17 	ldw	r2,-16(fp)
    db60:	1000070e 	bge	r2,zero,db80 <write+0xbc>
      {
        ALT_ERRNO = -rval;
    db64:	000da880 	call	da88 <alt_get_errno>
    db68:	1007883a 	mov	r3,r2
    db6c:	e0bffc17 	ldw	r2,-16(fp)
    db70:	0085c83a 	sub	r2,zero,r2
    db74:	18800015 	stw	r2,0(r3)
        return -1;
    db78:	00bfffc4 	movi	r2,-1
    db7c:	00000c06 	br	dbb0 <write+0xec>
      }
      return rval;
    db80:	e0bffc17 	ldw	r2,-16(fp)
    db84:	00000a06 	br	dbb0 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
    db88:	000da880 	call	da88 <alt_get_errno>
    db8c:	1007883a 	mov	r3,r2
    db90:	00800344 	movi	r2,13
    db94:	18800015 	stw	r2,0(r3)
    db98:	00000406 	br	dbac <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    db9c:	000da880 	call	da88 <alt_get_errno>
    dba0:	1007883a 	mov	r3,r2
    dba4:	00801444 	movi	r2,81
    dba8:	18800015 	stw	r2,0(r3)
  }
  return -1;
    dbac:	00bfffc4 	movi	r2,-1
}
    dbb0:	e037883a 	mov	sp,fp
    dbb4:	dfc00117 	ldw	ra,4(sp)
    dbb8:	df000017 	ldw	fp,0(sp)
    dbbc:	dec00204 	addi	sp,sp,8
    dbc0:	f800283a 	ret

0000dbc4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    dbc4:	defffd04 	addi	sp,sp,-12
    dbc8:	dfc00215 	stw	ra,8(sp)
    dbcc:	df000115 	stw	fp,4(sp)
    dbd0:	df000104 	addi	fp,sp,4
    dbd4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    dbd8:	d1600804 	addi	r5,gp,-32736
    dbdc:	e13fff17 	ldw	r4,-4(fp)
    dbe0:	000e86c0 	call	e86c <alt_dev_llist_insert>
}
    dbe4:	e037883a 	mov	sp,fp
    dbe8:	dfc00117 	ldw	ra,4(sp)
    dbec:	df000017 	ldw	fp,0(sp)
    dbf0:	dec00204 	addi	sp,sp,8
    dbf4:	f800283a 	ret

0000dbf8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    dbf8:	defffd04 	addi	sp,sp,-12
    dbfc:	dfc00215 	stw	ra,8(sp)
    dc00:	df000115 	stw	fp,4(sp)
    dc04:	df000104 	addi	fp,sp,4
    dc08:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    dc0c:	000f2180 	call	f218 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    dc10:	00800044 	movi	r2,1
    dc14:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    dc18:	0001883a 	nop
    dc1c:	e037883a 	mov	sp,fp
    dc20:	dfc00117 	ldw	ra,4(sp)
    dc24:	df000017 	ldw	fp,0(sp)
    dc28:	dec00204 	addi	sp,sp,8
    dc2c:	f800283a 	ret

0000dc30 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    dc30:	defffe04 	addi	sp,sp,-8
    dc34:	dfc00115 	stw	ra,4(sp)
    dc38:	df000015 	stw	fp,0(sp)
    dc3c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    dc40:	000d883a 	mov	r6,zero
    dc44:	000b883a 	mov	r5,zero
    dc48:	01010034 	movhi	r4,1024
    dc4c:	21036a04 	addi	r4,r4,3496
    dc50:	000dde00 	call	dde0 <altera_avalon_jtag_uart_init>
    dc54:	01010034 	movhi	r4,1024
    dc58:	21036004 	addi	r4,r4,3456
    dc5c:	000dbc40 	call	dbc4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
    dc60:	0001883a 	nop
}
    dc64:	0001883a 	nop
    dc68:	e037883a 	mov	sp,fp
    dc6c:	dfc00117 	ldw	ra,4(sp)
    dc70:	df000017 	ldw	fp,0(sp)
    dc74:	dec00204 	addi	sp,sp,8
    dc78:	f800283a 	ret

0000dc7c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    dc7c:	defffa04 	addi	sp,sp,-24
    dc80:	dfc00515 	stw	ra,20(sp)
    dc84:	df000415 	stw	fp,16(sp)
    dc88:	df000404 	addi	fp,sp,16
    dc8c:	e13ffd15 	stw	r4,-12(fp)
    dc90:	e17ffe15 	stw	r5,-8(fp)
    dc94:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dc98:	e0bffd17 	ldw	r2,-12(fp)
    dc9c:	10800017 	ldw	r2,0(r2)
    dca0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    dca4:	e0bffc17 	ldw	r2,-16(fp)
    dca8:	10c00a04 	addi	r3,r2,40
    dcac:	e0bffd17 	ldw	r2,-12(fp)
    dcb0:	10800217 	ldw	r2,8(r2)
    dcb4:	100f883a 	mov	r7,r2
    dcb8:	e1bfff17 	ldw	r6,-4(fp)
    dcbc:	e17ffe17 	ldw	r5,-8(fp)
    dcc0:	1809883a 	mov	r4,r3
    dcc4:	000e2a40 	call	e2a4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    dcc8:	e037883a 	mov	sp,fp
    dccc:	dfc00117 	ldw	ra,4(sp)
    dcd0:	df000017 	ldw	fp,0(sp)
    dcd4:	dec00204 	addi	sp,sp,8
    dcd8:	f800283a 	ret

0000dcdc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    dcdc:	defffa04 	addi	sp,sp,-24
    dce0:	dfc00515 	stw	ra,20(sp)
    dce4:	df000415 	stw	fp,16(sp)
    dce8:	df000404 	addi	fp,sp,16
    dcec:	e13ffd15 	stw	r4,-12(fp)
    dcf0:	e17ffe15 	stw	r5,-8(fp)
    dcf4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dcf8:	e0bffd17 	ldw	r2,-12(fp)
    dcfc:	10800017 	ldw	r2,0(r2)
    dd00:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    dd04:	e0bffc17 	ldw	r2,-16(fp)
    dd08:	10c00a04 	addi	r3,r2,40
    dd0c:	e0bffd17 	ldw	r2,-12(fp)
    dd10:	10800217 	ldw	r2,8(r2)
    dd14:	100f883a 	mov	r7,r2
    dd18:	e1bfff17 	ldw	r6,-4(fp)
    dd1c:	e17ffe17 	ldw	r5,-8(fp)
    dd20:	1809883a 	mov	r4,r3
    dd24:	000e4c00 	call	e4c0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    dd28:	e037883a 	mov	sp,fp
    dd2c:	dfc00117 	ldw	ra,4(sp)
    dd30:	df000017 	ldw	fp,0(sp)
    dd34:	dec00204 	addi	sp,sp,8
    dd38:	f800283a 	ret

0000dd3c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    dd3c:	defffc04 	addi	sp,sp,-16
    dd40:	dfc00315 	stw	ra,12(sp)
    dd44:	df000215 	stw	fp,8(sp)
    dd48:	df000204 	addi	fp,sp,8
    dd4c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dd50:	e0bfff17 	ldw	r2,-4(fp)
    dd54:	10800017 	ldw	r2,0(r2)
    dd58:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    dd5c:	e0bffe17 	ldw	r2,-8(fp)
    dd60:	10c00a04 	addi	r3,r2,40
    dd64:	e0bfff17 	ldw	r2,-4(fp)
    dd68:	10800217 	ldw	r2,8(r2)
    dd6c:	100b883a 	mov	r5,r2
    dd70:	1809883a 	mov	r4,r3
    dd74:	000e14c0 	call	e14c <altera_avalon_jtag_uart_close>
}
    dd78:	e037883a 	mov	sp,fp
    dd7c:	dfc00117 	ldw	ra,4(sp)
    dd80:	df000017 	ldw	fp,0(sp)
    dd84:	dec00204 	addi	sp,sp,8
    dd88:	f800283a 	ret

0000dd8c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    dd8c:	defffa04 	addi	sp,sp,-24
    dd90:	dfc00515 	stw	ra,20(sp)
    dd94:	df000415 	stw	fp,16(sp)
    dd98:	df000404 	addi	fp,sp,16
    dd9c:	e13ffd15 	stw	r4,-12(fp)
    dda0:	e17ffe15 	stw	r5,-8(fp)
    dda4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    dda8:	e0bffd17 	ldw	r2,-12(fp)
    ddac:	10800017 	ldw	r2,0(r2)
    ddb0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    ddb4:	e0bffc17 	ldw	r2,-16(fp)
    ddb8:	10800a04 	addi	r2,r2,40
    ddbc:	e1bfff17 	ldw	r6,-4(fp)
    ddc0:	e17ffe17 	ldw	r5,-8(fp)
    ddc4:	1009883a 	mov	r4,r2
    ddc8:	000e1b40 	call	e1b4 <altera_avalon_jtag_uart_ioctl>
}
    ddcc:	e037883a 	mov	sp,fp
    ddd0:	dfc00117 	ldw	ra,4(sp)
    ddd4:	df000017 	ldw	fp,0(sp)
    ddd8:	dec00204 	addi	sp,sp,8
    dddc:	f800283a 	ret

0000dde0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    dde0:	defffa04 	addi	sp,sp,-24
    dde4:	dfc00515 	stw	ra,20(sp)
    dde8:	df000415 	stw	fp,16(sp)
    ddec:	df000404 	addi	fp,sp,16
    ddf0:	e13ffd15 	stw	r4,-12(fp)
    ddf4:	e17ffe15 	stw	r5,-8(fp)
    ddf8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    ddfc:	e0bffd17 	ldw	r2,-12(fp)
    de00:	00c00044 	movi	r3,1
    de04:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    de08:	e0bffd17 	ldw	r2,-12(fp)
    de0c:	10800017 	ldw	r2,0(r2)
    de10:	10800104 	addi	r2,r2,4
    de14:	1007883a 	mov	r3,r2
    de18:	e0bffd17 	ldw	r2,-12(fp)
    de1c:	10800817 	ldw	r2,32(r2)
    de20:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    de24:	e0bffe17 	ldw	r2,-8(fp)
    de28:	e0ffff17 	ldw	r3,-4(fp)
    de2c:	d8000015 	stw	zero,0(sp)
    de30:	e1fffd17 	ldw	r7,-12(fp)
    de34:	01800074 	movhi	r6,1
    de38:	31b7a804 	addi	r6,r6,-8544
    de3c:	180b883a 	mov	r5,r3
    de40:	1009883a 	mov	r4,r2
    de44:	000e9f00 	call	e9f0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    de48:	e0bffd17 	ldw	r2,-12(fp)
    de4c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    de50:	e0bffd17 	ldw	r2,-12(fp)
    de54:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    de58:	d0e01b17 	ldw	r3,-32660(gp)
    de5c:	e1fffd17 	ldw	r7,-12(fp)
    de60:	01800074 	movhi	r6,1
    de64:	31b82b04 	addi	r6,r6,-8020
    de68:	180b883a 	mov	r5,r3
    de6c:	1009883a 	mov	r4,r2
    de70:	000e6e40 	call	e6e4 <alt_alarm_start>
    de74:	1000040e 	bge	r2,zero,de88 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    de78:	e0fffd17 	ldw	r3,-12(fp)
    de7c:	00a00034 	movhi	r2,32768
    de80:	10bfffc4 	addi	r2,r2,-1
    de84:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    de88:	0001883a 	nop
    de8c:	e037883a 	mov	sp,fp
    de90:	dfc00117 	ldw	ra,4(sp)
    de94:	df000017 	ldw	fp,0(sp)
    de98:	dec00204 	addi	sp,sp,8
    de9c:	f800283a 	ret

0000dea0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    dea0:	defff804 	addi	sp,sp,-32
    dea4:	df000715 	stw	fp,28(sp)
    dea8:	df000704 	addi	fp,sp,28
    deac:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    deb0:	e0bfff17 	ldw	r2,-4(fp)
    deb4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    deb8:	e0bffb17 	ldw	r2,-20(fp)
    debc:	10800017 	ldw	r2,0(r2)
    dec0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dec4:	e0bffc17 	ldw	r2,-16(fp)
    dec8:	10800104 	addi	r2,r2,4
    decc:	10800037 	ldwio	r2,0(r2)
    ded0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    ded4:	e0bffd17 	ldw	r2,-12(fp)
    ded8:	1080c00c 	andi	r2,r2,768
    dedc:	10006d26 	beq	r2,zero,e094 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    dee0:	e0bffd17 	ldw	r2,-12(fp)
    dee4:	1080400c 	andi	r2,r2,256
    dee8:	10003526 	beq	r2,zero,dfc0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    deec:	00800074 	movhi	r2,1
    def0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    def4:	e0bffb17 	ldw	r2,-20(fp)
    def8:	10800a17 	ldw	r2,40(r2)
    defc:	10800044 	addi	r2,r2,1
    df00:	1081ffcc 	andi	r2,r2,2047
    df04:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    df08:	e0bffb17 	ldw	r2,-20(fp)
    df0c:	10c00b17 	ldw	r3,44(r2)
    df10:	e0bffe17 	ldw	r2,-8(fp)
    df14:	18801526 	beq	r3,r2,df6c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    df18:	e0bffc17 	ldw	r2,-16(fp)
    df1c:	10800037 	ldwio	r2,0(r2)
    df20:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    df24:	e0bff917 	ldw	r2,-28(fp)
    df28:	10a0000c 	andi	r2,r2,32768
    df2c:	10001126 	beq	r2,zero,df74 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    df30:	e0bffb17 	ldw	r2,-20(fp)
    df34:	10800a17 	ldw	r2,40(r2)
    df38:	e0fff917 	ldw	r3,-28(fp)
    df3c:	1809883a 	mov	r4,r3
    df40:	e0fffb17 	ldw	r3,-20(fp)
    df44:	1885883a 	add	r2,r3,r2
    df48:	10800e04 	addi	r2,r2,56
    df4c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    df50:	e0bffb17 	ldw	r2,-20(fp)
    df54:	10800a17 	ldw	r2,40(r2)
    df58:	10800044 	addi	r2,r2,1
    df5c:	10c1ffcc 	andi	r3,r2,2047
    df60:	e0bffb17 	ldw	r2,-20(fp)
    df64:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    df68:	003fe206 	br	def4 <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    df6c:	0001883a 	nop
    df70:	00000106 	br	df78 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    df74:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    df78:	e0bff917 	ldw	r2,-28(fp)
    df7c:	10bfffec 	andhi	r2,r2,65535
    df80:	10000f26 	beq	r2,zero,dfc0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    df84:	e0bffb17 	ldw	r2,-20(fp)
    df88:	10c00817 	ldw	r3,32(r2)
    df8c:	00bfff84 	movi	r2,-2
    df90:	1886703a 	and	r3,r3,r2
    df94:	e0bffb17 	ldw	r2,-20(fp)
    df98:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    df9c:	e0bffc17 	ldw	r2,-16(fp)
    dfa0:	10800104 	addi	r2,r2,4
    dfa4:	1007883a 	mov	r3,r2
    dfa8:	e0bffb17 	ldw	r2,-20(fp)
    dfac:	10800817 	ldw	r2,32(r2)
    dfb0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dfb4:	e0bffc17 	ldw	r2,-16(fp)
    dfb8:	10800104 	addi	r2,r2,4
    dfbc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    dfc0:	e0bffd17 	ldw	r2,-12(fp)
    dfc4:	1080800c 	andi	r2,r2,512
    dfc8:	103fbe26 	beq	r2,zero,dec4 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    dfcc:	e0bffd17 	ldw	r2,-12(fp)
    dfd0:	1004d43a 	srli	r2,r2,16
    dfd4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    dfd8:	00001406 	br	e02c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    dfdc:	e0bffc17 	ldw	r2,-16(fp)
    dfe0:	e0fffb17 	ldw	r3,-20(fp)
    dfe4:	18c00d17 	ldw	r3,52(r3)
    dfe8:	e13ffb17 	ldw	r4,-20(fp)
    dfec:	20c7883a 	add	r3,r4,r3
    dff0:	18c20e04 	addi	r3,r3,2104
    dff4:	18c00003 	ldbu	r3,0(r3)
    dff8:	18c03fcc 	andi	r3,r3,255
    dffc:	18c0201c 	xori	r3,r3,128
    e000:	18ffe004 	addi	r3,r3,-128
    e004:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e008:	e0bffb17 	ldw	r2,-20(fp)
    e00c:	10800d17 	ldw	r2,52(r2)
    e010:	10800044 	addi	r2,r2,1
    e014:	10c1ffcc 	andi	r3,r2,2047
    e018:	e0bffb17 	ldw	r2,-20(fp)
    e01c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e020:	e0bffa17 	ldw	r2,-24(fp)
    e024:	10bfffc4 	addi	r2,r2,-1
    e028:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e02c:	e0bffa17 	ldw	r2,-24(fp)
    e030:	10000526 	beq	r2,zero,e048 <altera_avalon_jtag_uart_irq+0x1a8>
    e034:	e0bffb17 	ldw	r2,-20(fp)
    e038:	10c00d17 	ldw	r3,52(r2)
    e03c:	e0bffb17 	ldw	r2,-20(fp)
    e040:	10800c17 	ldw	r2,48(r2)
    e044:	18bfe51e 	bne	r3,r2,dfdc <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    e048:	e0bffa17 	ldw	r2,-24(fp)
    e04c:	103f9d26 	beq	r2,zero,dec4 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e050:	e0bffb17 	ldw	r2,-20(fp)
    e054:	10c00817 	ldw	r3,32(r2)
    e058:	00bfff44 	movi	r2,-3
    e05c:	1886703a 	and	r3,r3,r2
    e060:	e0bffb17 	ldw	r2,-20(fp)
    e064:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e068:	e0bffb17 	ldw	r2,-20(fp)
    e06c:	10800017 	ldw	r2,0(r2)
    e070:	10800104 	addi	r2,r2,4
    e074:	1007883a 	mov	r3,r2
    e078:	e0bffb17 	ldw	r2,-20(fp)
    e07c:	10800817 	ldw	r2,32(r2)
    e080:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e084:	e0bffc17 	ldw	r2,-16(fp)
    e088:	10800104 	addi	r2,r2,4
    e08c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    e090:	003f8c06 	br	dec4 <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    e094:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    e098:	0001883a 	nop
    e09c:	e037883a 	mov	sp,fp
    e0a0:	df000017 	ldw	fp,0(sp)
    e0a4:	dec00104 	addi	sp,sp,4
    e0a8:	f800283a 	ret

0000e0ac <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e0ac:	defff804 	addi	sp,sp,-32
    e0b0:	df000715 	stw	fp,28(sp)
    e0b4:	df000704 	addi	fp,sp,28
    e0b8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e0bc:	e0bffb17 	ldw	r2,-20(fp)
    e0c0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e0c4:	e0bff917 	ldw	r2,-28(fp)
    e0c8:	10800017 	ldw	r2,0(r2)
    e0cc:	10800104 	addi	r2,r2,4
    e0d0:	10800037 	ldwio	r2,0(r2)
    e0d4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e0d8:	e0bffa17 	ldw	r2,-24(fp)
    e0dc:	1081000c 	andi	r2,r2,1024
    e0e0:	10000b26 	beq	r2,zero,e110 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e0e4:	e0bff917 	ldw	r2,-28(fp)
    e0e8:	10800017 	ldw	r2,0(r2)
    e0ec:	10800104 	addi	r2,r2,4
    e0f0:	1007883a 	mov	r3,r2
    e0f4:	e0bff917 	ldw	r2,-28(fp)
    e0f8:	10800817 	ldw	r2,32(r2)
    e0fc:	10810014 	ori	r2,r2,1024
    e100:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e104:	e0bff917 	ldw	r2,-28(fp)
    e108:	10000915 	stw	zero,36(r2)
    e10c:	00000a06 	br	e138 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e110:	e0bff917 	ldw	r2,-28(fp)
    e114:	10c00917 	ldw	r3,36(r2)
    e118:	00a00034 	movhi	r2,32768
    e11c:	10bfff04 	addi	r2,r2,-4
    e120:	10c00536 	bltu	r2,r3,e138 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e124:	e0bff917 	ldw	r2,-28(fp)
    e128:	10800917 	ldw	r2,36(r2)
    e12c:	10c00044 	addi	r3,r2,1
    e130:	e0bff917 	ldw	r2,-28(fp)
    e134:	10c00915 	stw	r3,36(r2)
    e138:	d0a01b17 	ldw	r2,-32660(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e13c:	e037883a 	mov	sp,fp
    e140:	df000017 	ldw	fp,0(sp)
    e144:	dec00104 	addi	sp,sp,4
    e148:	f800283a 	ret

0000e14c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e14c:	defffd04 	addi	sp,sp,-12
    e150:	df000215 	stw	fp,8(sp)
    e154:	df000204 	addi	fp,sp,8
    e158:	e13ffe15 	stw	r4,-8(fp)
    e15c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e160:	00000506 	br	e178 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e164:	e0bfff17 	ldw	r2,-4(fp)
    e168:	1090000c 	andi	r2,r2,16384
    e16c:	10000226 	beq	r2,zero,e178 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e170:	00bffd44 	movi	r2,-11
    e174:	00000b06 	br	e1a4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e178:	e0bffe17 	ldw	r2,-8(fp)
    e17c:	10c00d17 	ldw	r3,52(r2)
    e180:	e0bffe17 	ldw	r2,-8(fp)
    e184:	10800c17 	ldw	r2,48(r2)
    e188:	18800526 	beq	r3,r2,e1a0 <altera_avalon_jtag_uart_close+0x54>
    e18c:	e0bffe17 	ldw	r2,-8(fp)
    e190:	10c00917 	ldw	r3,36(r2)
    e194:	e0bffe17 	ldw	r2,-8(fp)
    e198:	10800117 	ldw	r2,4(r2)
    e19c:	18bff136 	bltu	r3,r2,e164 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    e1a0:	0005883a 	mov	r2,zero
}
    e1a4:	e037883a 	mov	sp,fp
    e1a8:	df000017 	ldw	fp,0(sp)
    e1ac:	dec00104 	addi	sp,sp,4
    e1b0:	f800283a 	ret

0000e1b4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e1b4:	defffa04 	addi	sp,sp,-24
    e1b8:	df000515 	stw	fp,20(sp)
    e1bc:	df000504 	addi	fp,sp,20
    e1c0:	e13ffd15 	stw	r4,-12(fp)
    e1c4:	e17ffe15 	stw	r5,-8(fp)
    e1c8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    e1cc:	00bff9c4 	movi	r2,-25
    e1d0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    e1d4:	e0bffe17 	ldw	r2,-8(fp)
    e1d8:	10da8060 	cmpeqi	r3,r2,27137
    e1dc:	1800031e 	bne	r3,zero,e1ec <altera_avalon_jtag_uart_ioctl+0x38>
    e1e0:	109a80a0 	cmpeqi	r2,r2,27138
    e1e4:	1000181e 	bne	r2,zero,e248 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    e1e8:	00002906 	br	e290 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e1ec:	e0bffd17 	ldw	r2,-12(fp)
    e1f0:	10c00117 	ldw	r3,4(r2)
    e1f4:	00a00034 	movhi	r2,32768
    e1f8:	10bfffc4 	addi	r2,r2,-1
    e1fc:	18802126 	beq	r3,r2,e284 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    e200:	e0bfff17 	ldw	r2,-4(fp)
    e204:	10800017 	ldw	r2,0(r2)
    e208:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e20c:	e0bffc17 	ldw	r2,-16(fp)
    e210:	10800090 	cmplti	r2,r2,2
    e214:	1000061e 	bne	r2,zero,e230 <altera_avalon_jtag_uart_ioctl+0x7c>
    e218:	e0fffc17 	ldw	r3,-16(fp)
    e21c:	00a00034 	movhi	r2,32768
    e220:	10bfffc4 	addi	r2,r2,-1
    e224:	18800226 	beq	r3,r2,e230 <altera_avalon_jtag_uart_ioctl+0x7c>
    e228:	e0bffc17 	ldw	r2,-16(fp)
    e22c:	00000206 	br	e238 <altera_avalon_jtag_uart_ioctl+0x84>
    e230:	00a00034 	movhi	r2,32768
    e234:	10bfff84 	addi	r2,r2,-2
    e238:	e0fffd17 	ldw	r3,-12(fp)
    e23c:	18800115 	stw	r2,4(r3)
      rc = 0;
    e240:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e244:	00000f06 	br	e284 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e248:	e0bffd17 	ldw	r2,-12(fp)
    e24c:	10c00117 	ldw	r3,4(r2)
    e250:	00a00034 	movhi	r2,32768
    e254:	10bfffc4 	addi	r2,r2,-1
    e258:	18800c26 	beq	r3,r2,e28c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e25c:	e0bffd17 	ldw	r2,-12(fp)
    e260:	10c00917 	ldw	r3,36(r2)
    e264:	e0bffd17 	ldw	r2,-12(fp)
    e268:	10800117 	ldw	r2,4(r2)
    e26c:	1885803a 	cmpltu	r2,r3,r2
    e270:	10c03fcc 	andi	r3,r2,255
    e274:	e0bfff17 	ldw	r2,-4(fp)
    e278:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e27c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e280:	00000206 	br	e28c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    e284:	0001883a 	nop
    e288:	00000106 	br	e290 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    e28c:	0001883a 	nop

  default:
    break;
  }

  return rc;
    e290:	e0bffb17 	ldw	r2,-20(fp)
}
    e294:	e037883a 	mov	sp,fp
    e298:	df000017 	ldw	fp,0(sp)
    e29c:	dec00104 	addi	sp,sp,4
    e2a0:	f800283a 	ret

0000e2a4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e2a4:	defff304 	addi	sp,sp,-52
    e2a8:	dfc00c15 	stw	ra,48(sp)
    e2ac:	df000b15 	stw	fp,44(sp)
    e2b0:	df000b04 	addi	fp,sp,44
    e2b4:	e13ffc15 	stw	r4,-16(fp)
    e2b8:	e17ffd15 	stw	r5,-12(fp)
    e2bc:	e1bffe15 	stw	r6,-8(fp)
    e2c0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    e2c4:	e0bffd17 	ldw	r2,-12(fp)
    e2c8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e2cc:	00004706 	br	e3ec <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e2d0:	e0bffc17 	ldw	r2,-16(fp)
    e2d4:	10800a17 	ldw	r2,40(r2)
    e2d8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    e2dc:	e0bffc17 	ldw	r2,-16(fp)
    e2e0:	10800b17 	ldw	r2,44(r2)
    e2e4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    e2e8:	e0fff717 	ldw	r3,-36(fp)
    e2ec:	e0bff817 	ldw	r2,-32(fp)
    e2f0:	18800536 	bltu	r3,r2,e308 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e2f4:	e0fff717 	ldw	r3,-36(fp)
    e2f8:	e0bff817 	ldw	r2,-32(fp)
    e2fc:	1885c83a 	sub	r2,r3,r2
    e300:	e0bff615 	stw	r2,-40(fp)
    e304:	00000406 	br	e318 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e308:	00c20004 	movi	r3,2048
    e30c:	e0bff817 	ldw	r2,-32(fp)
    e310:	1885c83a 	sub	r2,r3,r2
    e314:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e318:	e0bff617 	ldw	r2,-40(fp)
    e31c:	10001e26 	beq	r2,zero,e398 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e320:	e0fffe17 	ldw	r3,-8(fp)
    e324:	e0bff617 	ldw	r2,-40(fp)
    e328:	1880022e 	bgeu	r3,r2,e334 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    e32c:	e0bffe17 	ldw	r2,-8(fp)
    e330:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e334:	e0bffc17 	ldw	r2,-16(fp)
    e338:	10c00e04 	addi	r3,r2,56
    e33c:	e0bff817 	ldw	r2,-32(fp)
    e340:	1885883a 	add	r2,r3,r2
    e344:	e1bff617 	ldw	r6,-40(fp)
    e348:	100b883a 	mov	r5,r2
    e34c:	e13ff517 	ldw	r4,-44(fp)
    e350:	0005ee40 	call	5ee4 <memcpy>
      ptr   += n;
    e354:	e0fff517 	ldw	r3,-44(fp)
    e358:	e0bff617 	ldw	r2,-40(fp)
    e35c:	1885883a 	add	r2,r3,r2
    e360:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    e364:	e0fffe17 	ldw	r3,-8(fp)
    e368:	e0bff617 	ldw	r2,-40(fp)
    e36c:	1885c83a 	sub	r2,r3,r2
    e370:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e374:	e0fff817 	ldw	r3,-32(fp)
    e378:	e0bff617 	ldw	r2,-40(fp)
    e37c:	1885883a 	add	r2,r3,r2
    e380:	10c1ffcc 	andi	r3,r2,2047
    e384:	e0bffc17 	ldw	r2,-16(fp)
    e388:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e38c:	e0bffe17 	ldw	r2,-8(fp)
    e390:	00bfcf16 	blt	zero,r2,e2d0 <altera_avalon_jtag_uart_read+0x2c>
    e394:	00000106 	br	e39c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    e398:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    e39c:	e0fff517 	ldw	r3,-44(fp)
    e3a0:	e0bffd17 	ldw	r2,-12(fp)
    e3a4:	1880141e 	bne	r3,r2,e3f8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e3a8:	e0bfff17 	ldw	r2,-4(fp)
    e3ac:	1090000c 	andi	r2,r2,16384
    e3b0:	1000131e 	bne	r2,zero,e400 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e3b4:	0001883a 	nop
    e3b8:	e0bffc17 	ldw	r2,-16(fp)
    e3bc:	10c00a17 	ldw	r3,40(r2)
    e3c0:	e0bff717 	ldw	r2,-36(fp)
    e3c4:	1880051e 	bne	r3,r2,e3dc <altera_avalon_jtag_uart_read+0x138>
    e3c8:	e0bffc17 	ldw	r2,-16(fp)
    e3cc:	10c00917 	ldw	r3,36(r2)
    e3d0:	e0bffc17 	ldw	r2,-16(fp)
    e3d4:	10800117 	ldw	r2,4(r2)
    e3d8:	18bff736 	bltu	r3,r2,e3b8 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e3dc:	e0bffc17 	ldw	r2,-16(fp)
    e3e0:	10c00a17 	ldw	r3,40(r2)
    e3e4:	e0bff717 	ldw	r2,-36(fp)
    e3e8:	18800726 	beq	r3,r2,e408 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e3ec:	e0bffe17 	ldw	r2,-8(fp)
    e3f0:	00bfb716 	blt	zero,r2,e2d0 <altera_avalon_jtag_uart_read+0x2c>
    e3f4:	00000506 	br	e40c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    e3f8:	0001883a 	nop
    e3fc:	00000306 	br	e40c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    e400:	0001883a 	nop
    e404:	00000106 	br	e40c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    e408:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e40c:	e0fff517 	ldw	r3,-44(fp)
    e410:	e0bffd17 	ldw	r2,-12(fp)
    e414:	18801826 	beq	r3,r2,e478 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e418:	0005303a 	rdctl	r2,status
    e41c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e420:	e0fffb17 	ldw	r3,-20(fp)
    e424:	00bfff84 	movi	r2,-2
    e428:	1884703a 	and	r2,r3,r2
    e42c:	1001703a 	wrctl	status,r2
  
  return context;
    e430:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e434:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e438:	e0bffc17 	ldw	r2,-16(fp)
    e43c:	10800817 	ldw	r2,32(r2)
    e440:	10c00054 	ori	r3,r2,1
    e444:	e0bffc17 	ldw	r2,-16(fp)
    e448:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e44c:	e0bffc17 	ldw	r2,-16(fp)
    e450:	10800017 	ldw	r2,0(r2)
    e454:	10800104 	addi	r2,r2,4
    e458:	1007883a 	mov	r3,r2
    e45c:	e0bffc17 	ldw	r2,-16(fp)
    e460:	10800817 	ldw	r2,32(r2)
    e464:	18800035 	stwio	r2,0(r3)
    e468:	e0bffa17 	ldw	r2,-24(fp)
    e46c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e470:	e0bff917 	ldw	r2,-28(fp)
    e474:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e478:	e0fff517 	ldw	r3,-44(fp)
    e47c:	e0bffd17 	ldw	r2,-12(fp)
    e480:	18800426 	beq	r3,r2,e494 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    e484:	e0fff517 	ldw	r3,-44(fp)
    e488:	e0bffd17 	ldw	r2,-12(fp)
    e48c:	1885c83a 	sub	r2,r3,r2
    e490:	00000606 	br	e4ac <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e494:	e0bfff17 	ldw	r2,-4(fp)
    e498:	1090000c 	andi	r2,r2,16384
    e49c:	10000226 	beq	r2,zero,e4a8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e4a0:	00bffd44 	movi	r2,-11
    e4a4:	00000106 	br	e4ac <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e4a8:	00bffec4 	movi	r2,-5
}
    e4ac:	e037883a 	mov	sp,fp
    e4b0:	dfc00117 	ldw	ra,4(sp)
    e4b4:	df000017 	ldw	fp,0(sp)
    e4b8:	dec00204 	addi	sp,sp,8
    e4bc:	f800283a 	ret

0000e4c0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e4c0:	defff304 	addi	sp,sp,-52
    e4c4:	dfc00c15 	stw	ra,48(sp)
    e4c8:	df000b15 	stw	fp,44(sp)
    e4cc:	df000b04 	addi	fp,sp,44
    e4d0:	e13ffc15 	stw	r4,-16(fp)
    e4d4:	e17ffd15 	stw	r5,-12(fp)
    e4d8:	e1bffe15 	stw	r6,-8(fp)
    e4dc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e4e0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e4e4:	e0bffd17 	ldw	r2,-12(fp)
    e4e8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e4ec:	00003706 	br	e5cc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e4f0:	e0bffc17 	ldw	r2,-16(fp)
    e4f4:	10800c17 	ldw	r2,48(r2)
    e4f8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    e4fc:	e0bffc17 	ldw	r2,-16(fp)
    e500:	10800d17 	ldw	r2,52(r2)
    e504:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    e508:	e0fff917 	ldw	r3,-28(fp)
    e50c:	e0bff517 	ldw	r2,-44(fp)
    e510:	1880062e 	bgeu	r3,r2,e52c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e514:	e0fff517 	ldw	r3,-44(fp)
    e518:	e0bff917 	ldw	r2,-28(fp)
    e51c:	1885c83a 	sub	r2,r3,r2
    e520:	10bfffc4 	addi	r2,r2,-1
    e524:	e0bff615 	stw	r2,-40(fp)
    e528:	00000b06 	br	e558 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e52c:	e0bff517 	ldw	r2,-44(fp)
    e530:	10000526 	beq	r2,zero,e548 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e534:	00c20004 	movi	r3,2048
    e538:	e0bff917 	ldw	r2,-28(fp)
    e53c:	1885c83a 	sub	r2,r3,r2
    e540:	e0bff615 	stw	r2,-40(fp)
    e544:	00000406 	br	e558 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e548:	00c1ffc4 	movi	r3,2047
    e54c:	e0bff917 	ldw	r2,-28(fp)
    e550:	1885c83a 	sub	r2,r3,r2
    e554:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e558:	e0bff617 	ldw	r2,-40(fp)
    e55c:	10001e26 	beq	r2,zero,e5d8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e560:	e0fffe17 	ldw	r3,-8(fp)
    e564:	e0bff617 	ldw	r2,-40(fp)
    e568:	1880022e 	bgeu	r3,r2,e574 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e56c:	e0bffe17 	ldw	r2,-8(fp)
    e570:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e574:	e0bffc17 	ldw	r2,-16(fp)
    e578:	10c20e04 	addi	r3,r2,2104
    e57c:	e0bff917 	ldw	r2,-28(fp)
    e580:	1885883a 	add	r2,r3,r2
    e584:	e1bff617 	ldw	r6,-40(fp)
    e588:	e17ffd17 	ldw	r5,-12(fp)
    e58c:	1009883a 	mov	r4,r2
    e590:	0005ee40 	call	5ee4 <memcpy>
      ptr   += n;
    e594:	e0fffd17 	ldw	r3,-12(fp)
    e598:	e0bff617 	ldw	r2,-40(fp)
    e59c:	1885883a 	add	r2,r3,r2
    e5a0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    e5a4:	e0fffe17 	ldw	r3,-8(fp)
    e5a8:	e0bff617 	ldw	r2,-40(fp)
    e5ac:	1885c83a 	sub	r2,r3,r2
    e5b0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e5b4:	e0fff917 	ldw	r3,-28(fp)
    e5b8:	e0bff617 	ldw	r2,-40(fp)
    e5bc:	1885883a 	add	r2,r3,r2
    e5c0:	10c1ffcc 	andi	r3,r2,2047
    e5c4:	e0bffc17 	ldw	r2,-16(fp)
    e5c8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e5cc:	e0bffe17 	ldw	r2,-8(fp)
    e5d0:	00bfc716 	blt	zero,r2,e4f0 <altera_avalon_jtag_uart_write+0x30>
    e5d4:	00000106 	br	e5dc <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    e5d8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e5dc:	0005303a 	rdctl	r2,status
    e5e0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e5e4:	e0fffb17 	ldw	r3,-20(fp)
    e5e8:	00bfff84 	movi	r2,-2
    e5ec:	1884703a 	and	r2,r3,r2
    e5f0:	1001703a 	wrctl	status,r2
  
  return context;
    e5f4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e5f8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e5fc:	e0bffc17 	ldw	r2,-16(fp)
    e600:	10800817 	ldw	r2,32(r2)
    e604:	10c00094 	ori	r3,r2,2
    e608:	e0bffc17 	ldw	r2,-16(fp)
    e60c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e610:	e0bffc17 	ldw	r2,-16(fp)
    e614:	10800017 	ldw	r2,0(r2)
    e618:	10800104 	addi	r2,r2,4
    e61c:	1007883a 	mov	r3,r2
    e620:	e0bffc17 	ldw	r2,-16(fp)
    e624:	10800817 	ldw	r2,32(r2)
    e628:	18800035 	stwio	r2,0(r3)
    e62c:	e0bffa17 	ldw	r2,-24(fp)
    e630:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e634:	e0bff817 	ldw	r2,-32(fp)
    e638:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e63c:	e0bffe17 	ldw	r2,-8(fp)
    e640:	0080100e 	bge	zero,r2,e684 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e644:	e0bfff17 	ldw	r2,-4(fp)
    e648:	1090000c 	andi	r2,r2,16384
    e64c:	1000101e 	bne	r2,zero,e690 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e650:	0001883a 	nop
    e654:	e0bffc17 	ldw	r2,-16(fp)
    e658:	10c00d17 	ldw	r3,52(r2)
    e65c:	e0bff517 	ldw	r2,-44(fp)
    e660:	1880051e 	bne	r3,r2,e678 <altera_avalon_jtag_uart_write+0x1b8>
    e664:	e0bffc17 	ldw	r2,-16(fp)
    e668:	10c00917 	ldw	r3,36(r2)
    e66c:	e0bffc17 	ldw	r2,-16(fp)
    e670:	10800117 	ldw	r2,4(r2)
    e674:	18bff736 	bltu	r3,r2,e654 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e678:	e0bffc17 	ldw	r2,-16(fp)
    e67c:	10800917 	ldw	r2,36(r2)
    e680:	1000051e 	bne	r2,zero,e698 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e684:	e0bffe17 	ldw	r2,-8(fp)
    e688:	00bfd016 	blt	zero,r2,e5cc <altera_avalon_jtag_uart_write+0x10c>
    e68c:	00000306 	br	e69c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    e690:	0001883a 	nop
    e694:	00000106 	br	e69c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    e698:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e69c:	e0fffd17 	ldw	r3,-12(fp)
    e6a0:	e0bff717 	ldw	r2,-36(fp)
    e6a4:	18800426 	beq	r3,r2,e6b8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e6a8:	e0fffd17 	ldw	r3,-12(fp)
    e6ac:	e0bff717 	ldw	r2,-36(fp)
    e6b0:	1885c83a 	sub	r2,r3,r2
    e6b4:	00000606 	br	e6d0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e6b8:	e0bfff17 	ldw	r2,-4(fp)
    e6bc:	1090000c 	andi	r2,r2,16384
    e6c0:	10000226 	beq	r2,zero,e6cc <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e6c4:	00bffd44 	movi	r2,-11
    e6c8:	00000106 	br	e6d0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e6cc:	00bffec4 	movi	r2,-5
}
    e6d0:	e037883a 	mov	sp,fp
    e6d4:	dfc00117 	ldw	ra,4(sp)
    e6d8:	df000017 	ldw	fp,0(sp)
    e6dc:	dec00204 	addi	sp,sp,8
    e6e0:	f800283a 	ret

0000e6e4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e6e4:	defff504 	addi	sp,sp,-44
    e6e8:	df000a15 	stw	fp,40(sp)
    e6ec:	df000a04 	addi	fp,sp,40
    e6f0:	e13ffc15 	stw	r4,-16(fp)
    e6f4:	e17ffd15 	stw	r5,-12(fp)
    e6f8:	e1bffe15 	stw	r6,-8(fp)
    e6fc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e700:	e03ff615 	stw	zero,-40(fp)
    e704:	d0a01b17 	ldw	r2,-32660(gp)
  
  if (alt_ticks_per_second ())
    e708:	10003c26 	beq	r2,zero,e7fc <alt_alarm_start+0x118>
  {
    if (alarm)
    e70c:	e0bffc17 	ldw	r2,-16(fp)
    e710:	10003826 	beq	r2,zero,e7f4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    e714:	e0bffc17 	ldw	r2,-16(fp)
    e718:	e0fffe17 	ldw	r3,-8(fp)
    e71c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e720:	e0bffc17 	ldw	r2,-16(fp)
    e724:	e0ffff17 	ldw	r3,-4(fp)
    e728:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e72c:	0005303a 	rdctl	r2,status
    e730:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e734:	e0fff917 	ldw	r3,-28(fp)
    e738:	00bfff84 	movi	r2,-2
    e73c:	1884703a 	and	r2,r3,r2
    e740:	1001703a 	wrctl	status,r2
  
  return context;
    e744:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    e748:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e74c:	d0a01c17 	ldw	r2,-32656(gp)
      
      current_nticks = alt_nticks();
    e750:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e754:	e0fffd17 	ldw	r3,-12(fp)
    e758:	e0bff617 	ldw	r2,-40(fp)
    e75c:	1885883a 	add	r2,r3,r2
    e760:	10c00044 	addi	r3,r2,1
    e764:	e0bffc17 	ldw	r2,-16(fp)
    e768:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e76c:	e0bffc17 	ldw	r2,-16(fp)
    e770:	10c00217 	ldw	r3,8(r2)
    e774:	e0bff617 	ldw	r2,-40(fp)
    e778:	1880042e 	bgeu	r3,r2,e78c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    e77c:	e0bffc17 	ldw	r2,-16(fp)
    e780:	00c00044 	movi	r3,1
    e784:	10c00405 	stb	r3,16(r2)
    e788:	00000206 	br	e794 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    e78c:	e0bffc17 	ldw	r2,-16(fp)
    e790:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e794:	e0bffc17 	ldw	r2,-16(fp)
    e798:	d0e00e04 	addi	r3,gp,-32712
    e79c:	e0fffa15 	stw	r3,-24(fp)
    e7a0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e7a4:	e0bffb17 	ldw	r2,-20(fp)
    e7a8:	e0fffa17 	ldw	r3,-24(fp)
    e7ac:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e7b0:	e0bffa17 	ldw	r2,-24(fp)
    e7b4:	10c00017 	ldw	r3,0(r2)
    e7b8:	e0bffb17 	ldw	r2,-20(fp)
    e7bc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e7c0:	e0bffa17 	ldw	r2,-24(fp)
    e7c4:	10800017 	ldw	r2,0(r2)
    e7c8:	e0fffb17 	ldw	r3,-20(fp)
    e7cc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e7d0:	e0bffa17 	ldw	r2,-24(fp)
    e7d4:	e0fffb17 	ldw	r3,-20(fp)
    e7d8:	10c00015 	stw	r3,0(r2)
    e7dc:	e0bff817 	ldw	r2,-32(fp)
    e7e0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e7e4:	e0bff717 	ldw	r2,-36(fp)
    e7e8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e7ec:	0005883a 	mov	r2,zero
    e7f0:	00000306 	br	e800 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    e7f4:	00bffa84 	movi	r2,-22
    e7f8:	00000106 	br	e800 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    e7fc:	00bfde84 	movi	r2,-134
  }
}
    e800:	e037883a 	mov	sp,fp
    e804:	df000017 	ldw	fp,0(sp)
    e808:	dec00104 	addi	sp,sp,4
    e80c:	f800283a 	ret

0000e810 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e810:	deffff04 	addi	sp,sp,-4
    e814:	df000015 	stw	fp,0(sp)
    e818:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e81c:	0001883a 	nop
    e820:	e037883a 	mov	sp,fp
    e824:	df000017 	ldw	fp,0(sp)
    e828:	dec00104 	addi	sp,sp,4
    e82c:	f800283a 	ret

0000e830 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e830:	defffe04 	addi	sp,sp,-8
    e834:	dfc00115 	stw	ra,4(sp)
    e838:	df000015 	stw	fp,0(sp)
    e83c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e840:	d0a00b17 	ldw	r2,-32724(gp)
    e844:	10000326 	beq	r2,zero,e854 <alt_get_errno+0x24>
    e848:	d0a00b17 	ldw	r2,-32724(gp)
    e84c:	103ee83a 	callr	r2
    e850:	00000106 	br	e858 <alt_get_errno+0x28>
    e854:	d0a01604 	addi	r2,gp,-32680
}
    e858:	e037883a 	mov	sp,fp
    e85c:	dfc00117 	ldw	ra,4(sp)
    e860:	df000017 	ldw	fp,0(sp)
    e864:	dec00204 	addi	sp,sp,8
    e868:	f800283a 	ret

0000e86c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e86c:	defffa04 	addi	sp,sp,-24
    e870:	dfc00515 	stw	ra,20(sp)
    e874:	df000415 	stw	fp,16(sp)
    e878:	df000404 	addi	fp,sp,16
    e87c:	e13ffe15 	stw	r4,-8(fp)
    e880:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e884:	e0bffe17 	ldw	r2,-8(fp)
    e888:	10000326 	beq	r2,zero,e898 <alt_dev_llist_insert+0x2c>
    e88c:	e0bffe17 	ldw	r2,-8(fp)
    e890:	10800217 	ldw	r2,8(r2)
    e894:	1000061e 	bne	r2,zero,e8b0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e898:	000e8300 	call	e830 <alt_get_errno>
    e89c:	1007883a 	mov	r3,r2
    e8a0:	00800584 	movi	r2,22
    e8a4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e8a8:	00bffa84 	movi	r2,-22
    e8ac:	00001306 	br	e8fc <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e8b0:	e0bffe17 	ldw	r2,-8(fp)
    e8b4:	e0ffff17 	ldw	r3,-4(fp)
    e8b8:	e0fffc15 	stw	r3,-16(fp)
    e8bc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e8c0:	e0bffd17 	ldw	r2,-12(fp)
    e8c4:	e0fffc17 	ldw	r3,-16(fp)
    e8c8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e8cc:	e0bffc17 	ldw	r2,-16(fp)
    e8d0:	10c00017 	ldw	r3,0(r2)
    e8d4:	e0bffd17 	ldw	r2,-12(fp)
    e8d8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e8dc:	e0bffc17 	ldw	r2,-16(fp)
    e8e0:	10800017 	ldw	r2,0(r2)
    e8e4:	e0fffd17 	ldw	r3,-12(fp)
    e8e8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e8ec:	e0bffc17 	ldw	r2,-16(fp)
    e8f0:	e0fffd17 	ldw	r3,-12(fp)
    e8f4:	10c00015 	stw	r3,0(r2)

  return 0;  
    e8f8:	0005883a 	mov	r2,zero
}
    e8fc:	e037883a 	mov	sp,fp
    e900:	dfc00117 	ldw	ra,4(sp)
    e904:	df000017 	ldw	fp,0(sp)
    e908:	dec00204 	addi	sp,sp,8
    e90c:	f800283a 	ret

0000e910 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    e910:	defffd04 	addi	sp,sp,-12
    e914:	dfc00215 	stw	ra,8(sp)
    e918:	df000115 	stw	fp,4(sp)
    e91c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e920:	00800074 	movhi	r2,1
    e924:	10be3104 	addi	r2,r2,-1852
    e928:	e0bfff15 	stw	r2,-4(fp)
    e92c:	00000606 	br	e948 <_do_ctors+0x38>
        (*ctor) (); 
    e930:	e0bfff17 	ldw	r2,-4(fp)
    e934:	10800017 	ldw	r2,0(r2)
    e938:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e93c:	e0bfff17 	ldw	r2,-4(fp)
    e940:	10bfff04 	addi	r2,r2,-4
    e944:	e0bfff15 	stw	r2,-4(fp)
    e948:	e0ffff17 	ldw	r3,-4(fp)
    e94c:	00800074 	movhi	r2,1
    e950:	10be3204 	addi	r2,r2,-1848
    e954:	18bff62e 	bgeu	r3,r2,e930 <_do_ctors+0x20>
        (*ctor) (); 
}
    e958:	0001883a 	nop
    e95c:	e037883a 	mov	sp,fp
    e960:	dfc00117 	ldw	ra,4(sp)
    e964:	df000017 	ldw	fp,0(sp)
    e968:	dec00204 	addi	sp,sp,8
    e96c:	f800283a 	ret

0000e970 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    e970:	defffd04 	addi	sp,sp,-12
    e974:	dfc00215 	stw	ra,8(sp)
    e978:	df000115 	stw	fp,4(sp)
    e97c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e980:	00800074 	movhi	r2,1
    e984:	10be3104 	addi	r2,r2,-1852
    e988:	e0bfff15 	stw	r2,-4(fp)
    e98c:	00000606 	br	e9a8 <_do_dtors+0x38>
        (*dtor) (); 
    e990:	e0bfff17 	ldw	r2,-4(fp)
    e994:	10800017 	ldw	r2,0(r2)
    e998:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e99c:	e0bfff17 	ldw	r2,-4(fp)
    e9a0:	10bfff04 	addi	r2,r2,-4
    e9a4:	e0bfff15 	stw	r2,-4(fp)
    e9a8:	e0ffff17 	ldw	r3,-4(fp)
    e9ac:	00800074 	movhi	r2,1
    e9b0:	10be3204 	addi	r2,r2,-1848
    e9b4:	18bff62e 	bgeu	r3,r2,e990 <_do_dtors+0x20>
        (*dtor) (); 
}
    e9b8:	0001883a 	nop
    e9bc:	e037883a 	mov	sp,fp
    e9c0:	dfc00117 	ldw	ra,4(sp)
    e9c4:	df000017 	ldw	fp,0(sp)
    e9c8:	dec00204 	addi	sp,sp,8
    e9cc:	f800283a 	ret

0000e9d0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    e9d0:	deffff04 	addi	sp,sp,-4
    e9d4:	df000015 	stw	fp,0(sp)
    e9d8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    e9dc:	0001883a 	nop
    e9e0:	e037883a 	mov	sp,fp
    e9e4:	df000017 	ldw	fp,0(sp)
    e9e8:	dec00104 	addi	sp,sp,4
    e9ec:	f800283a 	ret

0000e9f0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e9f0:	defff904 	addi	sp,sp,-28
    e9f4:	dfc00615 	stw	ra,24(sp)
    e9f8:	df000515 	stw	fp,20(sp)
    e9fc:	df000504 	addi	fp,sp,20
    ea00:	e13ffc15 	stw	r4,-16(fp)
    ea04:	e17ffd15 	stw	r5,-12(fp)
    ea08:	e1bffe15 	stw	r6,-8(fp)
    ea0c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    ea10:	e0800217 	ldw	r2,8(fp)
    ea14:	d8800015 	stw	r2,0(sp)
    ea18:	e1ffff17 	ldw	r7,-4(fp)
    ea1c:	e1bffe17 	ldw	r6,-8(fp)
    ea20:	e17ffd17 	ldw	r5,-12(fp)
    ea24:	e13ffc17 	ldw	r4,-16(fp)
    ea28:	000eba00 	call	eba0 <alt_iic_isr_register>
}  
    ea2c:	e037883a 	mov	sp,fp
    ea30:	dfc00117 	ldw	ra,4(sp)
    ea34:	df000017 	ldw	fp,0(sp)
    ea38:	dec00204 	addi	sp,sp,8
    ea3c:	f800283a 	ret

0000ea40 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    ea40:	defff904 	addi	sp,sp,-28
    ea44:	df000615 	stw	fp,24(sp)
    ea48:	df000604 	addi	fp,sp,24
    ea4c:	e13ffe15 	stw	r4,-8(fp)
    ea50:	e17fff15 	stw	r5,-4(fp)
    ea54:	e0bfff17 	ldw	r2,-4(fp)
    ea58:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ea5c:	0005303a 	rdctl	r2,status
    ea60:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ea64:	e0fffb17 	ldw	r3,-20(fp)
    ea68:	00bfff84 	movi	r2,-2
    ea6c:	1884703a 	and	r2,r3,r2
    ea70:	1001703a 	wrctl	status,r2
  
  return context;
    ea74:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    ea78:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    ea7c:	00c00044 	movi	r3,1
    ea80:	e0bffa17 	ldw	r2,-24(fp)
    ea84:	1884983a 	sll	r2,r3,r2
    ea88:	1007883a 	mov	r3,r2
    ea8c:	d0a01a17 	ldw	r2,-32664(gp)
    ea90:	1884b03a 	or	r2,r3,r2
    ea94:	d0a01a15 	stw	r2,-32664(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    ea98:	d0a01a17 	ldw	r2,-32664(gp)
    ea9c:	100170fa 	wrctl	ienable,r2
    eaa0:	e0bffc17 	ldw	r2,-16(fp)
    eaa4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    eaa8:	e0bffd17 	ldw	r2,-12(fp)
    eaac:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    eab0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    eab4:	0001883a 	nop
}
    eab8:	e037883a 	mov	sp,fp
    eabc:	df000017 	ldw	fp,0(sp)
    eac0:	dec00104 	addi	sp,sp,4
    eac4:	f800283a 	ret

0000eac8 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    eac8:	defff904 	addi	sp,sp,-28
    eacc:	df000615 	stw	fp,24(sp)
    ead0:	df000604 	addi	fp,sp,24
    ead4:	e13ffe15 	stw	r4,-8(fp)
    ead8:	e17fff15 	stw	r5,-4(fp)
    eadc:	e0bfff17 	ldw	r2,-4(fp)
    eae0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    eae4:	0005303a 	rdctl	r2,status
    eae8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eaec:	e0fffb17 	ldw	r3,-20(fp)
    eaf0:	00bfff84 	movi	r2,-2
    eaf4:	1884703a 	and	r2,r3,r2
    eaf8:	1001703a 	wrctl	status,r2
  
  return context;
    eafc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    eb00:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    eb04:	00c00044 	movi	r3,1
    eb08:	e0bffa17 	ldw	r2,-24(fp)
    eb0c:	1884983a 	sll	r2,r3,r2
    eb10:	0084303a 	nor	r2,zero,r2
    eb14:	1007883a 	mov	r3,r2
    eb18:	d0a01a17 	ldw	r2,-32664(gp)
    eb1c:	1884703a 	and	r2,r3,r2
    eb20:	d0a01a15 	stw	r2,-32664(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    eb24:	d0a01a17 	ldw	r2,-32664(gp)
    eb28:	100170fa 	wrctl	ienable,r2
    eb2c:	e0bffc17 	ldw	r2,-16(fp)
    eb30:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    eb34:	e0bffd17 	ldw	r2,-12(fp)
    eb38:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    eb3c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    eb40:	0001883a 	nop
}
    eb44:	e037883a 	mov	sp,fp
    eb48:	df000017 	ldw	fp,0(sp)
    eb4c:	dec00104 	addi	sp,sp,4
    eb50:	f800283a 	ret

0000eb54 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    eb54:	defffc04 	addi	sp,sp,-16
    eb58:	df000315 	stw	fp,12(sp)
    eb5c:	df000304 	addi	fp,sp,12
    eb60:	e13ffe15 	stw	r4,-8(fp)
    eb64:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    eb68:	000530fa 	rdctl	r2,ienable
    eb6c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    eb70:	00c00044 	movi	r3,1
    eb74:	e0bfff17 	ldw	r2,-4(fp)
    eb78:	1884983a 	sll	r2,r3,r2
    eb7c:	1007883a 	mov	r3,r2
    eb80:	e0bffd17 	ldw	r2,-12(fp)
    eb84:	1884703a 	and	r2,r3,r2
    eb88:	1004c03a 	cmpne	r2,r2,zero
    eb8c:	10803fcc 	andi	r2,r2,255
}
    eb90:	e037883a 	mov	sp,fp
    eb94:	df000017 	ldw	fp,0(sp)
    eb98:	dec00104 	addi	sp,sp,4
    eb9c:	f800283a 	ret

0000eba0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    eba0:	defff504 	addi	sp,sp,-44
    eba4:	dfc00a15 	stw	ra,40(sp)
    eba8:	df000915 	stw	fp,36(sp)
    ebac:	df000904 	addi	fp,sp,36
    ebb0:	e13ffc15 	stw	r4,-16(fp)
    ebb4:	e17ffd15 	stw	r5,-12(fp)
    ebb8:	e1bffe15 	stw	r6,-8(fp)
    ebbc:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    ebc0:	00bffa84 	movi	r2,-22
    ebc4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    ebc8:	e0bffd17 	ldw	r2,-12(fp)
    ebcc:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    ebd0:	e0bff817 	ldw	r2,-32(fp)
    ebd4:	10800808 	cmpgei	r2,r2,32
    ebd8:	1000271e 	bne	r2,zero,ec78 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ebdc:	0005303a 	rdctl	r2,status
    ebe0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ebe4:	e0fffb17 	ldw	r3,-20(fp)
    ebe8:	00bfff84 	movi	r2,-2
    ebec:	1884703a 	and	r2,r3,r2
    ebf0:	1001703a 	wrctl	status,r2
  
  return context;
    ebf4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    ebf8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    ebfc:	00810034 	movhi	r2,1024
    ec00:	1087a004 	addi	r2,r2,7808
    ec04:	e0fff817 	ldw	r3,-32(fp)
    ec08:	180690fa 	slli	r3,r3,3
    ec0c:	10c5883a 	add	r2,r2,r3
    ec10:	e0fffe17 	ldw	r3,-8(fp)
    ec14:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    ec18:	00810034 	movhi	r2,1024
    ec1c:	1087a004 	addi	r2,r2,7808
    ec20:	e0fff817 	ldw	r3,-32(fp)
    ec24:	180690fa 	slli	r3,r3,3
    ec28:	10c5883a 	add	r2,r2,r3
    ec2c:	10800104 	addi	r2,r2,4
    ec30:	e0ffff17 	ldw	r3,-4(fp)
    ec34:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    ec38:	e0bffe17 	ldw	r2,-8(fp)
    ec3c:	10000526 	beq	r2,zero,ec54 <alt_iic_isr_register+0xb4>
    ec40:	e0bff817 	ldw	r2,-32(fp)
    ec44:	100b883a 	mov	r5,r2
    ec48:	e13ffc17 	ldw	r4,-16(fp)
    ec4c:	000ea400 	call	ea40 <alt_ic_irq_enable>
    ec50:	00000406 	br	ec64 <alt_iic_isr_register+0xc4>
    ec54:	e0bff817 	ldw	r2,-32(fp)
    ec58:	100b883a 	mov	r5,r2
    ec5c:	e13ffc17 	ldw	r4,-16(fp)
    ec60:	000eac80 	call	eac8 <alt_ic_irq_disable>
    ec64:	e0bff715 	stw	r2,-36(fp)
    ec68:	e0bffa17 	ldw	r2,-24(fp)
    ec6c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ec70:	e0bff917 	ldw	r2,-28(fp)
    ec74:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    ec78:	e0bff717 	ldw	r2,-36(fp)
}
    ec7c:	e037883a 	mov	sp,fp
    ec80:	dfc00117 	ldw	ra,4(sp)
    ec84:	df000017 	ldw	fp,0(sp)
    ec88:	dec00204 	addi	sp,sp,8
    ec8c:	f800283a 	ret

0000ec90 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    ec90:	defff804 	addi	sp,sp,-32
    ec94:	dfc00715 	stw	ra,28(sp)
    ec98:	df000615 	stw	fp,24(sp)
    ec9c:	dc000515 	stw	r16,20(sp)
    eca0:	df000604 	addi	fp,sp,24
    eca4:	e13ffb15 	stw	r4,-20(fp)
    eca8:	e17ffc15 	stw	r5,-16(fp)
    ecac:	e1bffd15 	stw	r6,-12(fp)
    ecb0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    ecb4:	e1bffe17 	ldw	r6,-8(fp)
    ecb8:	e17ffd17 	ldw	r5,-12(fp)
    ecbc:	e13ffc17 	ldw	r4,-16(fp)
    ecc0:	000ef180 	call	ef18 <open>
    ecc4:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    ecc8:	e0bffa17 	ldw	r2,-24(fp)
    eccc:	10002216 	blt	r2,zero,ed58 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    ecd0:	04010034 	movhi	r16,1024
    ecd4:	84030004 	addi	r16,r16,3072
    ecd8:	e0bffa17 	ldw	r2,-24(fp)
    ecdc:	01400304 	movi	r5,12
    ece0:	1009883a 	mov	r4,r2
    ece4:	000a9640 	call	a964 <__mulsi3>
    ece8:	8085883a 	add	r2,r16,r2
    ecec:	10c00017 	ldw	r3,0(r2)
    ecf0:	e0bffb17 	ldw	r2,-20(fp)
    ecf4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    ecf8:	04010034 	movhi	r16,1024
    ecfc:	84030004 	addi	r16,r16,3072
    ed00:	e0bffa17 	ldw	r2,-24(fp)
    ed04:	01400304 	movi	r5,12
    ed08:	1009883a 	mov	r4,r2
    ed0c:	000a9640 	call	a964 <__mulsi3>
    ed10:	8085883a 	add	r2,r16,r2
    ed14:	10800104 	addi	r2,r2,4
    ed18:	10c00017 	ldw	r3,0(r2)
    ed1c:	e0bffb17 	ldw	r2,-20(fp)
    ed20:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    ed24:	04010034 	movhi	r16,1024
    ed28:	84030004 	addi	r16,r16,3072
    ed2c:	e0bffa17 	ldw	r2,-24(fp)
    ed30:	01400304 	movi	r5,12
    ed34:	1009883a 	mov	r4,r2
    ed38:	000a9640 	call	a964 <__mulsi3>
    ed3c:	8085883a 	add	r2,r16,r2
    ed40:	10800204 	addi	r2,r2,8
    ed44:	10c00017 	ldw	r3,0(r2)
    ed48:	e0bffb17 	ldw	r2,-20(fp)
    ed4c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    ed50:	e13ffa17 	ldw	r4,-24(fp)
    ed54:	000d9540 	call	d954 <alt_release_fd>
  }
} 
    ed58:	0001883a 	nop
    ed5c:	e6ffff04 	addi	sp,fp,-4
    ed60:	dfc00217 	ldw	ra,8(sp)
    ed64:	df000117 	ldw	fp,4(sp)
    ed68:	dc000017 	ldw	r16,0(sp)
    ed6c:	dec00304 	addi	sp,sp,12
    ed70:	f800283a 	ret

0000ed74 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    ed74:	defffb04 	addi	sp,sp,-20
    ed78:	dfc00415 	stw	ra,16(sp)
    ed7c:	df000315 	stw	fp,12(sp)
    ed80:	df000304 	addi	fp,sp,12
    ed84:	e13ffd15 	stw	r4,-12(fp)
    ed88:	e17ffe15 	stw	r5,-8(fp)
    ed8c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    ed90:	01c07fc4 	movi	r7,511
    ed94:	01800044 	movi	r6,1
    ed98:	e17ffd17 	ldw	r5,-12(fp)
    ed9c:	01010034 	movhi	r4,1024
    eda0:	21030304 	addi	r4,r4,3084
    eda4:	000ec900 	call	ec90 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    eda8:	01c07fc4 	movi	r7,511
    edac:	000d883a 	mov	r6,zero
    edb0:	e17ffe17 	ldw	r5,-8(fp)
    edb4:	01010034 	movhi	r4,1024
    edb8:	21030004 	addi	r4,r4,3072
    edbc:	000ec900 	call	ec90 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    edc0:	01c07fc4 	movi	r7,511
    edc4:	01800044 	movi	r6,1
    edc8:	e17fff17 	ldw	r5,-4(fp)
    edcc:	01010034 	movhi	r4,1024
    edd0:	21030604 	addi	r4,r4,3096
    edd4:	000ec900 	call	ec90 <alt_open_fd>
}  
    edd8:	0001883a 	nop
    eddc:	e037883a 	mov	sp,fp
    ede0:	dfc00117 	ldw	ra,4(sp)
    ede4:	df000017 	ldw	fp,0(sp)
    ede8:	dec00204 	addi	sp,sp,8
    edec:	f800283a 	ret

0000edf0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    edf0:	defffe04 	addi	sp,sp,-8
    edf4:	dfc00115 	stw	ra,4(sp)
    edf8:	df000015 	stw	fp,0(sp)
    edfc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ee00:	d0a00b17 	ldw	r2,-32724(gp)
    ee04:	10000326 	beq	r2,zero,ee14 <alt_get_errno+0x24>
    ee08:	d0a00b17 	ldw	r2,-32724(gp)
    ee0c:	103ee83a 	callr	r2
    ee10:	00000106 	br	ee18 <alt_get_errno+0x28>
    ee14:	d0a01604 	addi	r2,gp,-32680
}
    ee18:	e037883a 	mov	sp,fp
    ee1c:	dfc00117 	ldw	ra,4(sp)
    ee20:	df000017 	ldw	fp,0(sp)
    ee24:	dec00204 	addi	sp,sp,8
    ee28:	f800283a 	ret

0000ee2c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    ee2c:	defffb04 	addi	sp,sp,-20
    ee30:	dfc00415 	stw	ra,16(sp)
    ee34:	df000315 	stw	fp,12(sp)
    ee38:	dc000215 	stw	r16,8(sp)
    ee3c:	df000304 	addi	fp,sp,12
    ee40:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    ee44:	e0bffe17 	ldw	r2,-8(fp)
    ee48:	10800217 	ldw	r2,8(r2)
    ee4c:	10d00034 	orhi	r3,r2,16384
    ee50:	e0bffe17 	ldw	r2,-8(fp)
    ee54:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    ee58:	e03ffd15 	stw	zero,-12(fp)
    ee5c:	00002306 	br	eeec <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    ee60:	04010034 	movhi	r16,1024
    ee64:	84030004 	addi	r16,r16,3072
    ee68:	e0bffd17 	ldw	r2,-12(fp)
    ee6c:	01400304 	movi	r5,12
    ee70:	1009883a 	mov	r4,r2
    ee74:	000a9640 	call	a964 <__mulsi3>
    ee78:	8085883a 	add	r2,r16,r2
    ee7c:	10c00017 	ldw	r3,0(r2)
    ee80:	e0bffe17 	ldw	r2,-8(fp)
    ee84:	10800017 	ldw	r2,0(r2)
    ee88:	1880151e 	bne	r3,r2,eee0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ee8c:	04010034 	movhi	r16,1024
    ee90:	84030004 	addi	r16,r16,3072
    ee94:	e0bffd17 	ldw	r2,-12(fp)
    ee98:	01400304 	movi	r5,12
    ee9c:	1009883a 	mov	r4,r2
    eea0:	000a9640 	call	a964 <__mulsi3>
    eea4:	8085883a 	add	r2,r16,r2
    eea8:	10800204 	addi	r2,r2,8
    eeac:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    eeb0:	10000b0e 	bge	r2,zero,eee0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    eeb4:	01400304 	movi	r5,12
    eeb8:	e13ffd17 	ldw	r4,-12(fp)
    eebc:	000a9640 	call	a964 <__mulsi3>
    eec0:	1007883a 	mov	r3,r2
    eec4:	00810034 	movhi	r2,1024
    eec8:	10830004 	addi	r2,r2,3072
    eecc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    eed0:	e0bffe17 	ldw	r2,-8(fp)
    eed4:	18800226 	beq	r3,r2,eee0 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    eed8:	00bffcc4 	movi	r2,-13
    eedc:	00000806 	br	ef00 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    eee0:	e0bffd17 	ldw	r2,-12(fp)
    eee4:	10800044 	addi	r2,r2,1
    eee8:	e0bffd15 	stw	r2,-12(fp)
    eeec:	d0a00a17 	ldw	r2,-32728(gp)
    eef0:	1007883a 	mov	r3,r2
    eef4:	e0bffd17 	ldw	r2,-12(fp)
    eef8:	18bfd92e 	bgeu	r3,r2,ee60 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    eefc:	0005883a 	mov	r2,zero
}
    ef00:	e6ffff04 	addi	sp,fp,-4
    ef04:	dfc00217 	ldw	ra,8(sp)
    ef08:	df000117 	ldw	fp,4(sp)
    ef0c:	dc000017 	ldw	r16,0(sp)
    ef10:	dec00304 	addi	sp,sp,12
    ef14:	f800283a 	ret

0000ef18 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    ef18:	defff604 	addi	sp,sp,-40
    ef1c:	dfc00915 	stw	ra,36(sp)
    ef20:	df000815 	stw	fp,32(sp)
    ef24:	df000804 	addi	fp,sp,32
    ef28:	e13ffd15 	stw	r4,-12(fp)
    ef2c:	e17ffe15 	stw	r5,-8(fp)
    ef30:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    ef34:	00bfffc4 	movi	r2,-1
    ef38:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    ef3c:	00bffb44 	movi	r2,-19
    ef40:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    ef44:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    ef48:	d1600804 	addi	r5,gp,-32736
    ef4c:	e13ffd17 	ldw	r4,-12(fp)
    ef50:	000f23c0 	call	f23c <alt_find_dev>
    ef54:	e0bff815 	stw	r2,-32(fp)
    ef58:	e0bff817 	ldw	r2,-32(fp)
    ef5c:	1000051e 	bne	r2,zero,ef74 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    ef60:	e13ffd17 	ldw	r4,-12(fp)
    ef64:	000f2cc0 	call	f2cc <alt_find_file>
    ef68:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    ef6c:	00800044 	movi	r2,1
    ef70:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    ef74:	e0bff817 	ldw	r2,-32(fp)
    ef78:	10002b26 	beq	r2,zero,f028 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
    ef7c:	e13ff817 	ldw	r4,-32(fp)
    ef80:	000f3d40 	call	f3d4 <alt_get_fd>
    ef84:	e0bff915 	stw	r2,-28(fp)
    ef88:	e0bff917 	ldw	r2,-28(fp)
    ef8c:	1000030e 	bge	r2,zero,ef9c <open+0x84>
    {
      status = index;
    ef90:	e0bff917 	ldw	r2,-28(fp)
    ef94:	e0bffa15 	stw	r2,-24(fp)
    ef98:	00002506 	br	f030 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
    ef9c:	01400304 	movi	r5,12
    efa0:	e13ff917 	ldw	r4,-28(fp)
    efa4:	000a9640 	call	a964 <__mulsi3>
    efa8:	1007883a 	mov	r3,r2
    efac:	00810034 	movhi	r2,1024
    efb0:	10830004 	addi	r2,r2,3072
    efb4:	1885883a 	add	r2,r3,r2
    efb8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    efbc:	e0fffe17 	ldw	r3,-8(fp)
    efc0:	00900034 	movhi	r2,16384
    efc4:	10bfffc4 	addi	r2,r2,-1
    efc8:	1886703a 	and	r3,r3,r2
    efcc:	e0bffc17 	ldw	r2,-16(fp)
    efd0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    efd4:	e0bffb17 	ldw	r2,-20(fp)
    efd8:	1000051e 	bne	r2,zero,eff0 <open+0xd8>
    efdc:	e13ffc17 	ldw	r4,-16(fp)
    efe0:	000ee2c0 	call	ee2c <alt_file_locked>
    efe4:	e0bffa15 	stw	r2,-24(fp)
    efe8:	e0bffa17 	ldw	r2,-24(fp)
    efec:	10001016 	blt	r2,zero,f030 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    eff0:	e0bff817 	ldw	r2,-32(fp)
    eff4:	10800317 	ldw	r2,12(r2)
    eff8:	10000826 	beq	r2,zero,f01c <open+0x104>
    effc:	e0bff817 	ldw	r2,-32(fp)
    f000:	10800317 	ldw	r2,12(r2)
    f004:	e1ffff17 	ldw	r7,-4(fp)
    f008:	e1bffe17 	ldw	r6,-8(fp)
    f00c:	e17ffd17 	ldw	r5,-12(fp)
    f010:	e13ffc17 	ldw	r4,-16(fp)
    f014:	103ee83a 	callr	r2
    f018:	00000106 	br	f020 <open+0x108>
    f01c:	0005883a 	mov	r2,zero
    f020:	e0bffa15 	stw	r2,-24(fp)
    f024:	00000206 	br	f030 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
    f028:	00bffb44 	movi	r2,-19
    f02c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    f030:	e0bffa17 	ldw	r2,-24(fp)
    f034:	1000090e 	bge	r2,zero,f05c <open+0x144>
  {
    alt_release_fd (index);  
    f038:	e13ff917 	ldw	r4,-28(fp)
    f03c:	000d9540 	call	d954 <alt_release_fd>
    ALT_ERRNO = -status;
    f040:	000edf00 	call	edf0 <alt_get_errno>
    f044:	1007883a 	mov	r3,r2
    f048:	e0bffa17 	ldw	r2,-24(fp)
    f04c:	0085c83a 	sub	r2,zero,r2
    f050:	18800015 	stw	r2,0(r3)
    return -1;
    f054:	00bfffc4 	movi	r2,-1
    f058:	00000106 	br	f060 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
    f05c:	e0bff917 	ldw	r2,-28(fp)
}
    f060:	e037883a 	mov	sp,fp
    f064:	dfc00117 	ldw	ra,4(sp)
    f068:	df000017 	ldw	fp,0(sp)
    f06c:	dec00204 	addi	sp,sp,8
    f070:	f800283a 	ret

0000f074 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    f074:	defffa04 	addi	sp,sp,-24
    f078:	df000515 	stw	fp,20(sp)
    f07c:	df000504 	addi	fp,sp,20
    f080:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f084:	0005303a 	rdctl	r2,status
    f088:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f08c:	e0fffc17 	ldw	r3,-16(fp)
    f090:	00bfff84 	movi	r2,-2
    f094:	1884703a 	and	r2,r3,r2
    f098:	1001703a 	wrctl	status,r2
  
  return context;
    f09c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    f0a0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    f0a4:	e0bfff17 	ldw	r2,-4(fp)
    f0a8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    f0ac:	e0bffd17 	ldw	r2,-12(fp)
    f0b0:	10800017 	ldw	r2,0(r2)
    f0b4:	e0fffd17 	ldw	r3,-12(fp)
    f0b8:	18c00117 	ldw	r3,4(r3)
    f0bc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    f0c0:	e0bffd17 	ldw	r2,-12(fp)
    f0c4:	10800117 	ldw	r2,4(r2)
    f0c8:	e0fffd17 	ldw	r3,-12(fp)
    f0cc:	18c00017 	ldw	r3,0(r3)
    f0d0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    f0d4:	e0bffd17 	ldw	r2,-12(fp)
    f0d8:	e0fffd17 	ldw	r3,-12(fp)
    f0dc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    f0e0:	e0bffd17 	ldw	r2,-12(fp)
    f0e4:	e0fffd17 	ldw	r3,-12(fp)
    f0e8:	10c00015 	stw	r3,0(r2)
    f0ec:	e0bffb17 	ldw	r2,-20(fp)
    f0f0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f0f4:	e0bffe17 	ldw	r2,-8(fp)
    f0f8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    f0fc:	0001883a 	nop
    f100:	e037883a 	mov	sp,fp
    f104:	df000017 	ldw	fp,0(sp)
    f108:	dec00104 	addi	sp,sp,4
    f10c:	f800283a 	ret

0000f110 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    f110:	defffb04 	addi	sp,sp,-20
    f114:	dfc00415 	stw	ra,16(sp)
    f118:	df000315 	stw	fp,12(sp)
    f11c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    f120:	d0a00e17 	ldw	r2,-32712(gp)
    f124:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    f128:	d0a01c17 	ldw	r2,-32656(gp)
    f12c:	10800044 	addi	r2,r2,1
    f130:	d0a01c15 	stw	r2,-32656(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f134:	00002e06 	br	f1f0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    f138:	e0bffd17 	ldw	r2,-12(fp)
    f13c:	10800017 	ldw	r2,0(r2)
    f140:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    f144:	e0bffd17 	ldw	r2,-12(fp)
    f148:	10800403 	ldbu	r2,16(r2)
    f14c:	10803fcc 	andi	r2,r2,255
    f150:	10000426 	beq	r2,zero,f164 <alt_tick+0x54>
    f154:	d0a01c17 	ldw	r2,-32656(gp)
    f158:	1000021e 	bne	r2,zero,f164 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    f15c:	e0bffd17 	ldw	r2,-12(fp)
    f160:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    f164:	e0bffd17 	ldw	r2,-12(fp)
    f168:	10800217 	ldw	r2,8(r2)
    f16c:	d0e01c17 	ldw	r3,-32656(gp)
    f170:	18801d36 	bltu	r3,r2,f1e8 <alt_tick+0xd8>
    f174:	e0bffd17 	ldw	r2,-12(fp)
    f178:	10800403 	ldbu	r2,16(r2)
    f17c:	10803fcc 	andi	r2,r2,255
    f180:	1000191e 	bne	r2,zero,f1e8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    f184:	e0bffd17 	ldw	r2,-12(fp)
    f188:	10800317 	ldw	r2,12(r2)
    f18c:	e0fffd17 	ldw	r3,-12(fp)
    f190:	18c00517 	ldw	r3,20(r3)
    f194:	1809883a 	mov	r4,r3
    f198:	103ee83a 	callr	r2
    f19c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    f1a0:	e0bfff17 	ldw	r2,-4(fp)
    f1a4:	1000031e 	bne	r2,zero,f1b4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    f1a8:	e13ffd17 	ldw	r4,-12(fp)
    f1ac:	000f0740 	call	f074 <alt_alarm_stop>
    f1b0:	00000d06 	br	f1e8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    f1b4:	e0bffd17 	ldw	r2,-12(fp)
    f1b8:	10c00217 	ldw	r3,8(r2)
    f1bc:	e0bfff17 	ldw	r2,-4(fp)
    f1c0:	1887883a 	add	r3,r3,r2
    f1c4:	e0bffd17 	ldw	r2,-12(fp)
    f1c8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    f1cc:	e0bffd17 	ldw	r2,-12(fp)
    f1d0:	10c00217 	ldw	r3,8(r2)
    f1d4:	d0a01c17 	ldw	r2,-32656(gp)
    f1d8:	1880032e 	bgeu	r3,r2,f1e8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    f1dc:	e0bffd17 	ldw	r2,-12(fp)
    f1e0:	00c00044 	movi	r3,1
    f1e4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    f1e8:	e0bffe17 	ldw	r2,-8(fp)
    f1ec:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f1f0:	e0fffd17 	ldw	r3,-12(fp)
    f1f4:	d0a00e04 	addi	r2,gp,-32712
    f1f8:	18bfcf1e 	bne	r3,r2,f138 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    f1fc:	0001883a 	nop
}
    f200:	0001883a 	nop
    f204:	e037883a 	mov	sp,fp
    f208:	dfc00117 	ldw	ra,4(sp)
    f20c:	df000017 	ldw	fp,0(sp)
    f210:	dec00204 	addi	sp,sp,8
    f214:	f800283a 	ret

0000f218 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    f218:	deffff04 	addi	sp,sp,-4
    f21c:	df000015 	stw	fp,0(sp)
    f220:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    f224:	000170fa 	wrctl	ienable,zero
}
    f228:	0001883a 	nop
    f22c:	e037883a 	mov	sp,fp
    f230:	df000017 	ldw	fp,0(sp)
    f234:	dec00104 	addi	sp,sp,4
    f238:	f800283a 	ret

0000f23c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f23c:	defffa04 	addi	sp,sp,-24
    f240:	dfc00515 	stw	ra,20(sp)
    f244:	df000415 	stw	fp,16(sp)
    f248:	df000404 	addi	fp,sp,16
    f24c:	e13ffe15 	stw	r4,-8(fp)
    f250:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f254:	e0bfff17 	ldw	r2,-4(fp)
    f258:	10800017 	ldw	r2,0(r2)
    f25c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f260:	e13ffe17 	ldw	r4,-8(fp)
    f264:	00004300 	call	430 <strlen>
    f268:	10800044 	addi	r2,r2,1
    f26c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f270:	00000d06 	br	f2a8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f274:	e0bffc17 	ldw	r2,-16(fp)
    f278:	10800217 	ldw	r2,8(r2)
    f27c:	e0fffd17 	ldw	r3,-12(fp)
    f280:	180d883a 	mov	r6,r3
    f284:	e17ffe17 	ldw	r5,-8(fp)
    f288:	1009883a 	mov	r4,r2
    f28c:	000f5800 	call	f580 <memcmp>
    f290:	1000021e 	bne	r2,zero,f29c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f294:	e0bffc17 	ldw	r2,-16(fp)
    f298:	00000706 	br	f2b8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f29c:	e0bffc17 	ldw	r2,-16(fp)
    f2a0:	10800017 	ldw	r2,0(r2)
    f2a4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f2a8:	e0fffc17 	ldw	r3,-16(fp)
    f2ac:	e0bfff17 	ldw	r2,-4(fp)
    f2b0:	18bff01e 	bne	r3,r2,f274 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    f2b4:	0005883a 	mov	r2,zero
}
    f2b8:	e037883a 	mov	sp,fp
    f2bc:	dfc00117 	ldw	ra,4(sp)
    f2c0:	df000017 	ldw	fp,0(sp)
    f2c4:	dec00204 	addi	sp,sp,8
    f2c8:	f800283a 	ret

0000f2cc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    f2cc:	defffb04 	addi	sp,sp,-20
    f2d0:	dfc00415 	stw	ra,16(sp)
    f2d4:	df000315 	stw	fp,12(sp)
    f2d8:	df000304 	addi	fp,sp,12
    f2dc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    f2e0:	d0a00617 	ldw	r2,-32744(gp)
    f2e4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f2e8:	00003106 	br	f3b0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    f2ec:	e0bffd17 	ldw	r2,-12(fp)
    f2f0:	10800217 	ldw	r2,8(r2)
    f2f4:	1009883a 	mov	r4,r2
    f2f8:	00004300 	call	430 <strlen>
    f2fc:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    f300:	e0bffd17 	ldw	r2,-12(fp)
    f304:	10c00217 	ldw	r3,8(r2)
    f308:	e0bffe17 	ldw	r2,-8(fp)
    f30c:	10bfffc4 	addi	r2,r2,-1
    f310:	1885883a 	add	r2,r3,r2
    f314:	10800003 	ldbu	r2,0(r2)
    f318:	10803fcc 	andi	r2,r2,255
    f31c:	1080201c 	xori	r2,r2,128
    f320:	10bfe004 	addi	r2,r2,-128
    f324:	10800bd8 	cmpnei	r2,r2,47
    f328:	1000031e 	bne	r2,zero,f338 <alt_find_file+0x6c>
    {
      len -= 1;
    f32c:	e0bffe17 	ldw	r2,-8(fp)
    f330:	10bfffc4 	addi	r2,r2,-1
    f334:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f338:	e0bffe17 	ldw	r2,-8(fp)
    f33c:	e0ffff17 	ldw	r3,-4(fp)
    f340:	1885883a 	add	r2,r3,r2
    f344:	10800003 	ldbu	r2,0(r2)
    f348:	10803fcc 	andi	r2,r2,255
    f34c:	1080201c 	xori	r2,r2,128
    f350:	10bfe004 	addi	r2,r2,-128
    f354:	10800be0 	cmpeqi	r2,r2,47
    f358:	1000081e 	bne	r2,zero,f37c <alt_find_file+0xb0>
    f35c:	e0bffe17 	ldw	r2,-8(fp)
    f360:	e0ffff17 	ldw	r3,-4(fp)
    f364:	1885883a 	add	r2,r3,r2
    f368:	10800003 	ldbu	r2,0(r2)
    f36c:	10803fcc 	andi	r2,r2,255
    f370:	1080201c 	xori	r2,r2,128
    f374:	10bfe004 	addi	r2,r2,-128
    f378:	10000a1e 	bne	r2,zero,f3a4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    f37c:	e0bffd17 	ldw	r2,-12(fp)
    f380:	10800217 	ldw	r2,8(r2)
    f384:	e0fffe17 	ldw	r3,-8(fp)
    f388:	180d883a 	mov	r6,r3
    f38c:	e17fff17 	ldw	r5,-4(fp)
    f390:	1009883a 	mov	r4,r2
    f394:	000f5800 	call	f580 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f398:	1000021e 	bne	r2,zero,f3a4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    f39c:	e0bffd17 	ldw	r2,-12(fp)
    f3a0:	00000706 	br	f3c0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    f3a4:	e0bffd17 	ldw	r2,-12(fp)
    f3a8:	10800017 	ldw	r2,0(r2)
    f3ac:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f3b0:	e0fffd17 	ldw	r3,-12(fp)
    f3b4:	d0a00604 	addi	r2,gp,-32744
    f3b8:	18bfcc1e 	bne	r3,r2,f2ec <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    f3bc:	0005883a 	mov	r2,zero
}
    f3c0:	e037883a 	mov	sp,fp
    f3c4:	dfc00117 	ldw	ra,4(sp)
    f3c8:	df000017 	ldw	fp,0(sp)
    f3cc:	dec00204 	addi	sp,sp,8
    f3d0:	f800283a 	ret

0000f3d4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f3d4:	defffa04 	addi	sp,sp,-24
    f3d8:	dfc00515 	stw	ra,20(sp)
    f3dc:	df000415 	stw	fp,16(sp)
    f3e0:	dc000315 	stw	r16,12(sp)
    f3e4:	df000404 	addi	fp,sp,16
    f3e8:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    f3ec:	00bffa04 	movi	r2,-24
    f3f0:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f3f4:	e03ffc15 	stw	zero,-16(fp)
    f3f8:	00001d06 	br	f470 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
    f3fc:	04010034 	movhi	r16,1024
    f400:	84030004 	addi	r16,r16,3072
    f404:	e0bffc17 	ldw	r2,-16(fp)
    f408:	01400304 	movi	r5,12
    f40c:	1009883a 	mov	r4,r2
    f410:	000a9640 	call	a964 <__mulsi3>
    f414:	8085883a 	add	r2,r16,r2
    f418:	10800017 	ldw	r2,0(r2)
    f41c:	1000111e 	bne	r2,zero,f464 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
    f420:	04010034 	movhi	r16,1024
    f424:	84030004 	addi	r16,r16,3072
    f428:	e0bffc17 	ldw	r2,-16(fp)
    f42c:	01400304 	movi	r5,12
    f430:	1009883a 	mov	r4,r2
    f434:	000a9640 	call	a964 <__mulsi3>
    f438:	8085883a 	add	r2,r16,r2
    f43c:	e0fffe17 	ldw	r3,-8(fp)
    f440:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    f444:	d0e00a17 	ldw	r3,-32728(gp)
    f448:	e0bffc17 	ldw	r2,-16(fp)
    f44c:	1880020e 	bge	r3,r2,f458 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
    f450:	e0bffc17 	ldw	r2,-16(fp)
    f454:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
    f458:	e0bffc17 	ldw	r2,-16(fp)
    f45c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    f460:	00000606 	br	f47c <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f464:	e0bffc17 	ldw	r2,-16(fp)
    f468:	10800044 	addi	r2,r2,1
    f46c:	e0bffc15 	stw	r2,-16(fp)
    f470:	e0bffc17 	ldw	r2,-16(fp)
    f474:	10800810 	cmplti	r2,r2,32
    f478:	103fe01e 	bne	r2,zero,f3fc <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f47c:	e0bffd17 	ldw	r2,-12(fp)
}
    f480:	e6ffff04 	addi	sp,fp,-4
    f484:	dfc00217 	ldw	ra,8(sp)
    f488:	df000117 	ldw	fp,4(sp)
    f48c:	dc000017 	ldw	r16,0(sp)
    f490:	dec00304 	addi	sp,sp,12
    f494:	f800283a 	ret

0000f498 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f498:	defffe04 	addi	sp,sp,-8
    f49c:	df000115 	stw	fp,4(sp)
    f4a0:	df000104 	addi	fp,sp,4
    f4a4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f4a8:	e0bfff17 	ldw	r2,-4(fp)
    f4ac:	10bffe84 	addi	r2,r2,-6
    f4b0:	10c00428 	cmpgeui	r3,r2,16
    f4b4:	18001a1e 	bne	r3,zero,f520 <alt_exception_cause_generated_bad_addr+0x88>
    f4b8:	100690ba 	slli	r3,r2,2
    f4bc:	00800074 	movhi	r2,1
    f4c0:	10bd3404 	addi	r2,r2,-2864
    f4c4:	1885883a 	add	r2,r3,r2
    f4c8:	10800017 	ldw	r2,0(r2)
    f4cc:	1000683a 	jmp	r2
    f4d0:	0000f510 	cmplti	zero,zero,980
    f4d4:	0000f510 	cmplti	zero,zero,980
    f4d8:	0000f520 	cmpeqi	zero,zero,980
    f4dc:	0000f520 	cmpeqi	zero,zero,980
    f4e0:	0000f520 	cmpeqi	zero,zero,980
    f4e4:	0000f510 	cmplti	zero,zero,980
    f4e8:	0000f518 	cmpnei	zero,zero,980
    f4ec:	0000f520 	cmpeqi	zero,zero,980
    f4f0:	0000f510 	cmplti	zero,zero,980
    f4f4:	0000f510 	cmplti	zero,zero,980
    f4f8:	0000f520 	cmpeqi	zero,zero,980
    f4fc:	0000f510 	cmplti	zero,zero,980
    f500:	0000f518 	cmpnei	zero,zero,980
    f504:	0000f520 	cmpeqi	zero,zero,980
    f508:	0000f520 	cmpeqi	zero,zero,980
    f50c:	0000f510 	cmplti	zero,zero,980
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f510:	00800044 	movi	r2,1
    f514:	00000306 	br	f524 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f518:	0005883a 	mov	r2,zero
    f51c:	00000106 	br	f524 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
    f520:	0005883a 	mov	r2,zero
  }
}
    f524:	e037883a 	mov	sp,fp
    f528:	df000017 	ldw	fp,0(sp)
    f52c:	dec00104 	addi	sp,sp,4
    f530:	f800283a 	ret

0000f534 <atexit>:
    f534:	200b883a 	mov	r5,r4
    f538:	000f883a 	mov	r7,zero
    f53c:	000d883a 	mov	r6,zero
    f540:	0009883a 	mov	r4,zero
    f544:	000f5fc1 	jmpi	f5fc <__register_exitproc>

0000f548 <exit>:
    f548:	defffe04 	addi	sp,sp,-8
    f54c:	000b883a 	mov	r5,zero
    f550:	dc000015 	stw	r16,0(sp)
    f554:	dfc00115 	stw	ra,4(sp)
    f558:	2021883a 	mov	r16,r4
    f55c:	000f7140 	call	f714 <__call_exitprocs>
    f560:	00810034 	movhi	r2,1024
    f564:	10877804 	addi	r2,r2,7648
    f568:	11000017 	ldw	r4,0(r2)
    f56c:	20800f17 	ldw	r2,60(r4)
    f570:	10000126 	beq	r2,zero,f578 <exit+0x30>
    f574:	103ee83a 	callr	r2
    f578:	8009883a 	mov	r4,r16
    f57c:	000f8940 	call	f894 <_exit>

0000f580 <memcmp>:
    f580:	01c000c4 	movi	r7,3
    f584:	3980192e 	bgeu	r7,r6,f5ec <memcmp+0x6c>
    f588:	2144b03a 	or	r2,r4,r5
    f58c:	11c4703a 	and	r2,r2,r7
    f590:	10000f26 	beq	r2,zero,f5d0 <memcmp+0x50>
    f594:	20800003 	ldbu	r2,0(r4)
    f598:	28c00003 	ldbu	r3,0(r5)
    f59c:	10c0151e 	bne	r2,r3,f5f4 <memcmp+0x74>
    f5a0:	31bfff84 	addi	r6,r6,-2
    f5a4:	01ffffc4 	movi	r7,-1
    f5a8:	00000406 	br	f5bc <memcmp+0x3c>
    f5ac:	20800003 	ldbu	r2,0(r4)
    f5b0:	28c00003 	ldbu	r3,0(r5)
    f5b4:	31bfffc4 	addi	r6,r6,-1
    f5b8:	10c00e1e 	bne	r2,r3,f5f4 <memcmp+0x74>
    f5bc:	21000044 	addi	r4,r4,1
    f5c0:	29400044 	addi	r5,r5,1
    f5c4:	31fff91e 	bne	r6,r7,f5ac <memcmp+0x2c>
    f5c8:	0005883a 	mov	r2,zero
    f5cc:	f800283a 	ret
    f5d0:	20c00017 	ldw	r3,0(r4)
    f5d4:	28800017 	ldw	r2,0(r5)
    f5d8:	18bfee1e 	bne	r3,r2,f594 <memcmp+0x14>
    f5dc:	31bfff04 	addi	r6,r6,-4
    f5e0:	21000104 	addi	r4,r4,4
    f5e4:	29400104 	addi	r5,r5,4
    f5e8:	39bff936 	bltu	r7,r6,f5d0 <memcmp+0x50>
    f5ec:	303fe91e 	bne	r6,zero,f594 <memcmp+0x14>
    f5f0:	003ff506 	br	f5c8 <memcmp+0x48>
    f5f4:	10c5c83a 	sub	r2,r2,r3
    f5f8:	f800283a 	ret

0000f5fc <__register_exitproc>:
    f5fc:	defffa04 	addi	sp,sp,-24
    f600:	dc000315 	stw	r16,12(sp)
    f604:	04010034 	movhi	r16,1024
    f608:	84077804 	addi	r16,r16,7648
    f60c:	80c00017 	ldw	r3,0(r16)
    f610:	dc400415 	stw	r17,16(sp)
    f614:	dfc00515 	stw	ra,20(sp)
    f618:	18805217 	ldw	r2,328(r3)
    f61c:	2023883a 	mov	r17,r4
    f620:	10003726 	beq	r2,zero,f700 <__register_exitproc+0x104>
    f624:	10c00117 	ldw	r3,4(r2)
    f628:	010007c4 	movi	r4,31
    f62c:	20c00e16 	blt	r4,r3,f668 <__register_exitproc+0x6c>
    f630:	1a000044 	addi	r8,r3,1
    f634:	8800221e 	bne	r17,zero,f6c0 <__register_exitproc+0xc4>
    f638:	18c00084 	addi	r3,r3,2
    f63c:	18c7883a 	add	r3,r3,r3
    f640:	18c7883a 	add	r3,r3,r3
    f644:	12000115 	stw	r8,4(r2)
    f648:	10c7883a 	add	r3,r2,r3
    f64c:	19400015 	stw	r5,0(r3)
    f650:	0005883a 	mov	r2,zero
    f654:	dfc00517 	ldw	ra,20(sp)
    f658:	dc400417 	ldw	r17,16(sp)
    f65c:	dc000317 	ldw	r16,12(sp)
    f660:	dec00604 	addi	sp,sp,24
    f664:	f800283a 	ret
    f668:	00800034 	movhi	r2,0
    f66c:	10800004 	addi	r2,r2,0
    f670:	10002626 	beq	r2,zero,f70c <__register_exitproc+0x110>
    f674:	01006404 	movi	r4,400
    f678:	d9400015 	stw	r5,0(sp)
    f67c:	d9800115 	stw	r6,4(sp)
    f680:	d9c00215 	stw	r7,8(sp)
    f684:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f688:	d9400017 	ldw	r5,0(sp)
    f68c:	d9800117 	ldw	r6,4(sp)
    f690:	d9c00217 	ldw	r7,8(sp)
    f694:	10001d26 	beq	r2,zero,f70c <__register_exitproc+0x110>
    f698:	81000017 	ldw	r4,0(r16)
    f69c:	10000115 	stw	zero,4(r2)
    f6a0:	02000044 	movi	r8,1
    f6a4:	22405217 	ldw	r9,328(r4)
    f6a8:	0007883a 	mov	r3,zero
    f6ac:	12400015 	stw	r9,0(r2)
    f6b0:	20805215 	stw	r2,328(r4)
    f6b4:	10006215 	stw	zero,392(r2)
    f6b8:	10006315 	stw	zero,396(r2)
    f6bc:	883fde26 	beq	r17,zero,f638 <__register_exitproc+0x3c>
    f6c0:	18c9883a 	add	r4,r3,r3
    f6c4:	2109883a 	add	r4,r4,r4
    f6c8:	1109883a 	add	r4,r2,r4
    f6cc:	21802215 	stw	r6,136(r4)
    f6d0:	01800044 	movi	r6,1
    f6d4:	12406217 	ldw	r9,392(r2)
    f6d8:	30cc983a 	sll	r6,r6,r3
    f6dc:	4992b03a 	or	r9,r9,r6
    f6e0:	12406215 	stw	r9,392(r2)
    f6e4:	21c04215 	stw	r7,264(r4)
    f6e8:	01000084 	movi	r4,2
    f6ec:	893fd21e 	bne	r17,r4,f638 <__register_exitproc+0x3c>
    f6f0:	11006317 	ldw	r4,396(r2)
    f6f4:	218cb03a 	or	r6,r4,r6
    f6f8:	11806315 	stw	r6,396(r2)
    f6fc:	003fce06 	br	f638 <__register_exitproc+0x3c>
    f700:	18805304 	addi	r2,r3,332
    f704:	18805215 	stw	r2,328(r3)
    f708:	003fc606 	br	f624 <__register_exitproc+0x28>
    f70c:	00bfffc4 	movi	r2,-1
    f710:	003fd006 	br	f654 <__register_exitproc+0x58>

0000f714 <__call_exitprocs>:
    f714:	defff504 	addi	sp,sp,-44
    f718:	df000915 	stw	fp,36(sp)
    f71c:	dd400615 	stw	r21,24(sp)
    f720:	dc800315 	stw	r18,12(sp)
    f724:	dfc00a15 	stw	ra,40(sp)
    f728:	ddc00815 	stw	r23,32(sp)
    f72c:	dd800715 	stw	r22,28(sp)
    f730:	dd000515 	stw	r20,20(sp)
    f734:	dcc00415 	stw	r19,16(sp)
    f738:	dc400215 	stw	r17,8(sp)
    f73c:	dc000115 	stw	r16,4(sp)
    f740:	d9000015 	stw	r4,0(sp)
    f744:	2839883a 	mov	fp,r5
    f748:	04800044 	movi	r18,1
    f74c:	057fffc4 	movi	r21,-1
    f750:	00810034 	movhi	r2,1024
    f754:	10877804 	addi	r2,r2,7648
    f758:	12000017 	ldw	r8,0(r2)
    f75c:	45005217 	ldw	r20,328(r8)
    f760:	44c05204 	addi	r19,r8,328
    f764:	a0001c26 	beq	r20,zero,f7d8 <__call_exitprocs+0xc4>
    f768:	a0800117 	ldw	r2,4(r20)
    f76c:	15ffffc4 	addi	r23,r2,-1
    f770:	b8000d16 	blt	r23,zero,f7a8 <__call_exitprocs+0x94>
    f774:	14000044 	addi	r16,r2,1
    f778:	8421883a 	add	r16,r16,r16
    f77c:	8421883a 	add	r16,r16,r16
    f780:	84402004 	addi	r17,r16,128
    f784:	a463883a 	add	r17,r20,r17
    f788:	a421883a 	add	r16,r20,r16
    f78c:	e0001e26 	beq	fp,zero,f808 <__call_exitprocs+0xf4>
    f790:	80804017 	ldw	r2,256(r16)
    f794:	e0801c26 	beq	fp,r2,f808 <__call_exitprocs+0xf4>
    f798:	bdffffc4 	addi	r23,r23,-1
    f79c:	843fff04 	addi	r16,r16,-4
    f7a0:	8c7fff04 	addi	r17,r17,-4
    f7a4:	bd7ff91e 	bne	r23,r21,f78c <__call_exitprocs+0x78>
    f7a8:	00800034 	movhi	r2,0
    f7ac:	10800004 	addi	r2,r2,0
    f7b0:	10000926 	beq	r2,zero,f7d8 <__call_exitprocs+0xc4>
    f7b4:	a0800117 	ldw	r2,4(r20)
    f7b8:	1000301e 	bne	r2,zero,f87c <__call_exitprocs+0x168>
    f7bc:	a0800017 	ldw	r2,0(r20)
    f7c0:	10003226 	beq	r2,zero,f88c <__call_exitprocs+0x178>
    f7c4:	a009883a 	mov	r4,r20
    f7c8:	98800015 	stw	r2,0(r19)
    f7cc:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f7d0:	9d000017 	ldw	r20,0(r19)
    f7d4:	a03fe41e 	bne	r20,zero,f768 <__call_exitprocs+0x54>
    f7d8:	dfc00a17 	ldw	ra,40(sp)
    f7dc:	df000917 	ldw	fp,36(sp)
    f7e0:	ddc00817 	ldw	r23,32(sp)
    f7e4:	dd800717 	ldw	r22,28(sp)
    f7e8:	dd400617 	ldw	r21,24(sp)
    f7ec:	dd000517 	ldw	r20,20(sp)
    f7f0:	dcc00417 	ldw	r19,16(sp)
    f7f4:	dc800317 	ldw	r18,12(sp)
    f7f8:	dc400217 	ldw	r17,8(sp)
    f7fc:	dc000117 	ldw	r16,4(sp)
    f800:	dec00b04 	addi	sp,sp,44
    f804:	f800283a 	ret
    f808:	a0800117 	ldw	r2,4(r20)
    f80c:	80c00017 	ldw	r3,0(r16)
    f810:	10bfffc4 	addi	r2,r2,-1
    f814:	15c01426 	beq	r2,r23,f868 <__call_exitprocs+0x154>
    f818:	80000015 	stw	zero,0(r16)
    f81c:	183fde26 	beq	r3,zero,f798 <__call_exitprocs+0x84>
    f820:	95c8983a 	sll	r4,r18,r23
    f824:	a0806217 	ldw	r2,392(r20)
    f828:	a5800117 	ldw	r22,4(r20)
    f82c:	2084703a 	and	r2,r4,r2
    f830:	10000b26 	beq	r2,zero,f860 <__call_exitprocs+0x14c>
    f834:	a0806317 	ldw	r2,396(r20)
    f838:	2088703a 	and	r4,r4,r2
    f83c:	20000c1e 	bne	r4,zero,f870 <__call_exitprocs+0x15c>
    f840:	89400017 	ldw	r5,0(r17)
    f844:	d9000017 	ldw	r4,0(sp)
    f848:	183ee83a 	callr	r3
    f84c:	a0800117 	ldw	r2,4(r20)
    f850:	15bfbf1e 	bne	r2,r22,f750 <__call_exitprocs+0x3c>
    f854:	98800017 	ldw	r2,0(r19)
    f858:	153fcf26 	beq	r2,r20,f798 <__call_exitprocs+0x84>
    f85c:	003fbc06 	br	f750 <__call_exitprocs+0x3c>
    f860:	183ee83a 	callr	r3
    f864:	003ff906 	br	f84c <__call_exitprocs+0x138>
    f868:	a5c00115 	stw	r23,4(r20)
    f86c:	003feb06 	br	f81c <__call_exitprocs+0x108>
    f870:	89000017 	ldw	r4,0(r17)
    f874:	183ee83a 	callr	r3
    f878:	003ff406 	br	f84c <__call_exitprocs+0x138>
    f87c:	a0800017 	ldw	r2,0(r20)
    f880:	a027883a 	mov	r19,r20
    f884:	1029883a 	mov	r20,r2
    f888:	003fb606 	br	f764 <__call_exitprocs+0x50>
    f88c:	0005883a 	mov	r2,zero
    f890:	003ffb06 	br	f880 <__call_exitprocs+0x16c>

0000f894 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    f894:	defffd04 	addi	sp,sp,-12
    f898:	df000215 	stw	fp,8(sp)
    f89c:	df000204 	addi	fp,sp,8
    f8a0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    f8a4:	0001883a 	nop
    f8a8:	e0bfff17 	ldw	r2,-4(fp)
    f8ac:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    f8b0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    f8b4:	10000226 	beq	r2,zero,f8c0 <_exit+0x2c>
    ALT_SIM_FAIL();
    f8b8:	002af070 	cmpltui	zero,zero,43969
    f8bc:	00000106 	br	f8c4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    f8c0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    f8c4:	003fff06 	br	f8c4 <_exit+0x30>
